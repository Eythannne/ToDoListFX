<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="953897be-87b0-48c5-a21b-7b9470a6b6b1" name="Changes" comment="fin de suppression mais bug pour modification">
      <change afterPath="$PROJECT_DIR$/src/main/java/appli/accueil/MotDePasseOublieController.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/appli/user/ModificationUserController.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/appli/user/TodoListController.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/model/Tache.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/model/Type.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/repository/ListeRepository.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/repository/TacheRepository.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/repository/TypeRepository.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/service/EmailService.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/resources/appli/accueil/MdpOublieView.fxml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/resources/appli/user/TodoListView.fxml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/resources/sql/tache.sql" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/pom.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/appli/StartApplication.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/appli/StartApplication.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/appli/accueil/AccueilController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/appli/accueil/AccueilController.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/appli/accueil/GestionUserController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/appli/accueil/GestionUserController.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/appli/accueil/InscriptionController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/appli/accueil/InscriptionController.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/appli/accueil/LoginController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/appli/accueil/LoginController.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/model/Liste.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/model/Liste.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/model/Utilisateur.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/model/Utilisateur.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/module-info.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/module-info.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/repository/UtilisateurRepository.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/repository/UtilisateurRepository.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/resources/appli.user/modificationUserView.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/appli/user/modificationUserView.fxml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/resources/appli/accueil/GestionUserView.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/appli/accueil/GestionUserView.fxml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
        <option value="FxmlFile" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;Eythannne&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/Eythannne/ToDoListFX.git&quot;,
    &quot;accountId&quot;: &quot;4e1d6b7d-cad3-49e7-809c-67989cd5b96c&quot;
  }
}</component>
  <component name="MavenImportPreferences">
    <option name="generalSettings">
      <MavenGeneralSettings>
        <option name="mavenHomeTypeForPersistence" value="WRAPPER" />
      </MavenGeneralSettings>
    </option>
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 2
}</component>
  <component name="ProjectId" id="2twcY7E8dm27oLfhYew0eBLjZvp" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;Application.Database.executor&quot;: &quot;Run&quot;,
    &quot;Application.HelloApplication.executor&quot;: &quot;Run&quot;,
    &quot;Application.StartApplication.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
    &quot;last_directory_selection&quot;: &quot;C:/Users/ethan/IdeaProjects/TodoListFX/src/main/java/appli/user&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/Users/ethan/Downloads/mysql-connector-j-9.2.0.jar&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,
    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,
    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\ethan\IdeaProjects\TodoListFX\src\main\resources\appli\user" />
      <recent name="C:\Users\ethan\IdeaProjects\TodoListFX\src\main\resources\appli" />
      <recent name="C:\Users\ethan\IdeaProjects\TodoListFX\src\main\resources\appli\accueil" />
      <recent name="C:\Users\ethan\IdeaProjects\TodoListFX\src\main\java\appli\todolistfx\accueil" />
    </key>
    <key name="MoveClassesOrPackagesDialog.RECENTS_KEY">
      <recent name="" />
    </key>
    <key name="CopyClassDialog.RECENTS_KEY">
      <recent name="appli.todolistfx.accueil" />
    </key>
  </component>
  <component name="RunManager" selected="Application.StartApplication">
    <configuration name="Database" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="database.Database" />
      <module name="TodoListFX" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="database.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="StartApplication" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="appli.StartApplication" />
      <module name="TodoListFX" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="appli.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Application.StartApplication" />
        <item itemvalue="Application.Database" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-jdk-9823dce3aa75-28b599e66164-intellij.indexing.shared.core-IU-242.23339.11" />
        <option value="bundled-js-predefined-d6986cc7102b-5c90d61e3bab-JavaScript-IU-242.23339.11" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="953897be-87b0-48c5-a21b-7b9470a6b6b1" name="Changes" comment="" />
      <created>1741266622594</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1741266622594</updated>
      <workItem from="1741266623506" duration="820000" />
      <workItem from="1741267454877" duration="10808000" />
      <workItem from="1741678704663" duration="6901000" />
      <workItem from="1741708770425" duration="1543000" />
      <workItem from="1741869875696" duration="7808000" />
      <workItem from="1742283754831" duration="11897000" />
      <workItem from="1742308797600" duration="6283000" />
      <workItem from="1742474108797" duration="8872000" />
      <workItem from="1743535149756" duration="529000" />
      <workItem from="1743680407557" duration="17477000" />
      <workItem from="1743713990222" duration="429000" />
      <workItem from="1743714452026" duration="47000" />
      <workItem from="1743745991655" duration="745000" />
      <workItem from="1744039098267" duration="1000" />
      <workItem from="1745840703094" duration="101000" />
      <workItem from="1745873340487" duration="951000" />
      <workItem from="1746165996479" duration="2915000" />
      <workItem from="1746168953391" duration="8123000" />
      <workItem from="1746177149139" duration="1048000" />
      <workItem from="1746532249944" duration="1000" />
      <workItem from="1746704134091" duration="1670000" />
      <workItem from="1746738687143" duration="3686000" />
      <workItem from="1746742389720" duration="790000" />
      <workItem from="1746770488465" duration="72000" />
    </task>
    <task id="LOCAL-00001" summary="init : initialisation du projet">
      <option name="closed" value="true" />
      <created>1741708958495</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1741708958495</updated>
    </task>
    <task id="LOCAL-00002" summary="feat (modification) bouton erreur">
      <option name="closed" value="true" />
      <created>1741710200474</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1741710200477</updated>
    </task>
    <task id="LOCAL-00003" summary="feat (modification) fin tp 2 debut tp 3">
      <option name="closed" value="true" />
      <created>1742482137715</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1742482137715</updated>
    </task>
    <task id="LOCAL-00004" summary="fin table view il manque suppression et modification">
      <option name="closed" value="true" />
      <created>1743691581064</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1743691581064</updated>
    </task>
    <task id="LOCAL-00005" summary="fin de suppression mais bug pour modification">
      <option name="closed" value="true" />
      <created>1743714490506</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1743714490506</updated>
    </task>
    <option name="localTasksCounter" value="6" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="init : initialisation du projet" />
    <MESSAGE value="feat (modification) bouton erreur" />
    <MESSAGE value="feat (modification) fin tp 2 debut tp 3" />
    <MESSAGE value="fin table view il manque suppression et modification" />
    <MESSAGE value="fin de suppression mais bug pour modification" />
    <option name="LAST_COMMIT_MESSAGE" value="fin de suppression mais bug pour modification" />
  </component>
  <component name="ai.zencoder.plugin.chat.state">
    <option name="activeChatId" value="6b64873e-059d-4a67-aa81-6465e3eb0665" />
    <option name="chatSessions" value="{&quot;0b1fd27e-c4fa-46d8-916e-7bf9fa099017&quot;:{&quot;id&quot;:&quot;0b1fd27e-c4fa-46d8-916e-7bf9fa099017&quot;,&quot;createdAt&quot;:1746738755861,&quot;updatedAt&quot;:1746738784069,&quot;title&quot;:&quot;Interface Todo List Utilisateur&quot;,&quot;messages&quot;:[{&quot;id&quot;:&quot;d52dd1d3-b376-4a05-8f5b-baf87687f270&quot;,&quot;role&quot;:&quot;user&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;peux tu m'aider a faire l'interface d'une application todo list sur la page gestion user&quot;}],&quot;context&quot;:{&quot;currentFile&quot;:{&quot;path&quot;:&quot;src\\main\\java\\appli\\accueil\\MotDePasseOublieController.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\appli\\accueil\\MotDePasseOublieController.java&quot;,&quot;sources&quot;:[&quot;opened_tab&quot;],&quot;content&quot;:&quot;package appli.accueil;\r\n\r\nimport javafx.fxml.FXML;\r\nimport javafx.scene.control.TextField;\r\nimport service.EmailService;\r\n\r\npublic class MotDePasseOublieController {\r\n    @FXML\r\n    private TextField emailField;\r\n\r\n    @FXML\r\n    private void emailMotDePasse() {\r\n        String email = emailField.getText();\r\n        if (email.isEmpty()) {\r\n            System.out.println(\&quot;Veuillez entrer une adresse e-mail.\&quot;);\r\n            return;\r\n        }\r\n        System.out.println(emailField.getText());\r\n    }\r\n\r\n    @FXML\r\n    private void envoyerCode() {\r\n        String email = emailField.getText();\r\n        if (email.isEmpty()) {\r\n            System.out.println(\&quot;Veuillez entrer une adresse e-mail.\&quot;);\r\n            return;\r\n        }\r\n\r\n        String code = EmailService.genererCode();\r\n        EmailService.envoyerEmail(email, \&quot;Réinitialisation de mot de passe\&quot;, \&quot;Votre code de réinitialisation est : \&quot; + code);\r\n        System.out.println(\&quot;Code envoyé à : \&quot; + email);\r\n    }\r\n}&quot;},&quot;codebaseEnabled&quot;:true,&quot;ragFiles&quot;:[{&quot;path&quot;:&quot;src/main/java/appli/StartApplication.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\appli\\StartApplication.java&quot;,&quot;sources&quot;:[&quot;keyword_search&quot;]},{&quot;path&quot;:&quot;src/main/java/appli/accueil/GestionUserController.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\appli\\accueil\\GestionUserController.java&quot;,&quot;sources&quot;:[&quot;keyword_search&quot;]},{&quot;path&quot;:&quot;src/main/java/module-info.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\module-info.java&quot;,&quot;sources&quot;:[&quot;keyword_search&quot;]},{&quot;path&quot;:&quot;src/main/java/appli/user/ModificationUserController.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\appli\\user\\ModificationUserController.java&quot;,&quot;sources&quot;:[&quot;keyword_search&quot;]},{&quot;path&quot;:&quot;src\\main\\java\\appli\\accueil\\GestionUserController.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\appli\\accueil\\GestionUserController.java&quot;,&quot;sources&quot;:[]},{&quot;path&quot;:&quot;src\\main\\java\\module-info.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\module-info.java&quot;,&quot;sources&quot;:[]},{&quot;path&quot;:&quot;src\\main\\java\\repository\\UtilisateurRepository.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\repository\\UtilisateurRepository.java&quot;,&quot;sources&quot;:[]},{&quot;path&quot;:&quot;src\\main\\resources\\appli\\accueil\\GestionUserView.fxml&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\resources\\appli\\accueil\\GestionUserView.fxml&quot;,&quot;sources&quot;:[]},{&quot;path&quot;:&quot;src\\main\\resources\\appli\\user\\modificationUserView.fxml&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\resources\\appli\\user\\modificationUserView.fxml&quot;,&quot;sources&quot;:[]},{&quot;path&quot;:&quot;pom.xml&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\pom.xml&quot;,&quot;sources&quot;:[]},{&quot;path&quot;:&quot;.gitignore&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\.gitignore&quot;,&quot;sources&quot;:[]},{&quot;path&quot;:&quot;.mvn\\wrapper\\maven-wrapper.properties&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\.mvn\\wrapper\\maven-wrapper.properties&quot;,&quot;sources&quot;:[]},{&quot;path&quot;:&quot;src/main/java/appli/accueil/GestionUserController.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\appli\\accueil\\GestionUserController.java&quot;,&quot;sources&quot;:[&quot;opened_tab&quot;]},{&quot;path&quot;:&quot;src/main/java/appli/accueil/MotDePasseOublieController.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\appli\\accueil\\MotDePasseOublieController.java&quot;,&quot;sources&quot;:[&quot;opened_tab&quot;]},{&quot;path&quot;:&quot;src/main/resources/appli/accueil/MdpOublieView.fxml&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\resources\\appli\\accueil\\MdpOublieView.fxml&quot;,&quot;sources&quot;:[&quot;opened_tab&quot;]},{&quot;path&quot;:&quot;src/main/java/appli/accueil/AccueilController.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\appli\\accueil\\AccueilController.java&quot;,&quot;sources&quot;:[&quot;opened_tab&quot;]},{&quot;path&quot;:&quot;src/main/resources/appli/accueil/AccueilView.fxml&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\resources\\appli\\accueil\\AccueilView.fxml&quot;,&quot;sources&quot;:[&quot;opened_tab&quot;]},{&quot;path&quot;:&quot;src/main/java/appli/accueil/LoginController.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\appli\\accueil\\LoginController.java&quot;,&quot;sources&quot;:[&quot;opened_tab&quot;]}],&quot;rerankedFiles&quot;:[{&quot;path&quot;:&quot;src\\main\\java\\appli\\accueil\\GestionUserController.java&quot;,&quot;fsPath&quot;:&quot;src\\main\\java\\appli\\accueil\\GestionUserController.java&quot;},{&quot;path&quot;:&quot;src\\main\\java\\appli\\user\\ModificationUserController.java&quot;,&quot;fsPath&quot;:&quot;src\\main\\java\\appli\\user\\ModificationUserController.java&quot;},{&quot;path&quot;:&quot;src\\main\\resources\\appli\\accueil\\AccueilView.fxml&quot;,&quot;fsPath&quot;:&quot;src\\main\\resources\\appli\\accueil\\AccueilView.fxml&quot;},{&quot;path&quot;:&quot;src\\main\\resources\\appli\\accueil\\GestionUserView.fxml&quot;,&quot;fsPath&quot;:&quot;src\\main\\resources\\appli\\accueil\\GestionUserView.fxml&quot;}],&quot;usedFilePaths&quot;:[{&quot;path&quot;:&quot;src\\main\\java\\appli\\accueil\\MotDePasseOublieController.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\appli\\accueil\\MotDePasseOublieController.java&quot;,&quot;sources&quot;:[&quot;opened_tab&quot;],&quot;content&quot;:&quot;package appli.accueil;\r\n\r\nimport javafx.fxml.FXML;\r\nimport javafx.scene.control.TextField;\r\nimport service.EmailService;\r\n\r\npublic class MotDePasseOublieController {\r\n    @FXML\r\n    private TextField emailField;\r\n\r\n    @FXML\r\n    private void emailMotDePasse() {\r\n        String email = emailField.getText();\r\n        if (email.isEmpty()) {\r\n            System.out.println(\&quot;Veuillez entrer une adresse e-mail.\&quot;);\r\n            return;\r\n        }\r\n        System.out.println(emailField.getText());\r\n    }\r\n\r\n    @FXML\r\n    private void envoyerCode() {\r\n        String email = emailField.getText();\r\n        if (email.isEmpty()) {\r\n            System.out.println(\&quot;Veuillez entrer une adresse e-mail.\&quot;);\r\n            return;\r\n        }\r\n\r\n        String code = EmailService.genererCode();\r\n        EmailService.envoyerEmail(email, \&quot;Réinitialisation de mot de passe\&quot;, \&quot;Votre code de réinitialisation est : \&quot; + code);\r\n        System.out.println(\&quot;Code envoyé à : \&quot; + email);\r\n    }\r\n}&quot;},{&quot;path&quot;:&quot;src\\main\\java\\appli\\accueil\\GestionUserController.java&quot;,&quot;fsPath&quot;:&quot;src\\main\\java\\appli\\accueil\\GestionUserController.java&quot;},{&quot;path&quot;:&quot;src\\main\\java\\appli\\user\\ModificationUserController.java&quot;,&quot;fsPath&quot;:&quot;src\\main\\java\\appli\\user\\ModificationUserController.java&quot;},{&quot;path&quot;:&quot;src\\main\\resources\\appli\\accueil\\AccueilView.fxml&quot;,&quot;fsPath&quot;:&quot;src\\main\\resources\\appli\\accueil\\AccueilView.fxml&quot;},{&quot;path&quot;:&quot;src\\main\\resources\\appli\\accueil\\GestionUserView.fxml&quot;,&quot;fsPath&quot;:&quot;src\\main\\resources\\appli\\accueil\\GestionUserView.fxml&quot;}]},&quot;createdAt&quot;:1746738755867,&quot;isInternal&quot;:false,&quot;rawContent&quot;:{&quot;type&quot;:&quot;doc&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;peux tu m'aider a faire l'interface d'une application todo list sur la page gestion user&quot;}]}]}},{&quot;id&quot;:&quot;95311681-627d-49e2-9a46-75e5e8f62ead&quot;,&quot;role&quot;:&quot;assistant&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Pour créer l'interface d'une application de gestion de liste de tâches (todo list) sur la page de gestion des utilisateurs, vous pouvez suivre les étapes suivantes en utilisant JavaFX. Voici un guide pour vous aider à structurer cette interface :\n\n### Étape 1: Créer le FXML pour la Vue\n\nVous pouvez créer un fichier FXML pour la vue de gestion des utilisateurs avec une table pour afficher les utilisateurs et des boutons pour les actions. Voici un exemple de ce à quoi cela pourrait ressembler :\n\n```xml\n&lt;?xml version=\&quot;1.0\&quot; encoding=\&quot;UTF-8\&quot;?&gt;\n\n&lt;?import javafx.scene.control.Button?&gt;\n&lt;?import javafx.scene.control.TableView?&gt;\n&lt;?import javafx.scene.control.TableColumn?&gt;\n&lt;?import javafx.scene.layout.AnchorPane?&gt;\n\n&lt;AnchorPane prefHeight=\&quot;400.0\&quot; prefWidth=\&quot;600.0\&quot; xmlns=\&quot;http://javafx.com/javafx/23.0.1\&quot; xmlns:fx=\&quot;http://javafx.com/fxml/1\&quot; fx:controller=\&quot;appli.accueil.GestionUserController\&quot;&gt;\n   &lt;children&gt;\n      &lt;TableView fx:id=\&quot;tableauUser\&quot; layoutX=\&quot;42.0\&quot; layoutY=\&quot;39.0\&quot; onMouseClicked=\&quot;#cliqueTableau\&quot; prefHeight=\&quot;323.0\&quot; prefWidth=\&quot;517.0\&quot;&gt;\n          &lt;columns&gt;\n              &lt;TableColumn fx:id=\&quot;colId\&quot; text=\&quot;Id Utilisateur\&quot; /&gt;\n              &lt;TableColumn fx:id=\&quot;colNom\&quot; text=\&quot;Nom\&quot; /&gt;\n              &lt;TableColumn fx:id=\&quot;colPrenom\&quot; text=\&quot;Prénom\&quot; /&gt;\n              &lt;TableColumn fx:id=\&quot;colEmail\&quot; text=\&quot;Email\&quot; /&gt;\n              &lt;TableColumn fx:id=\&quot;colRole\&quot; text=\&quot;Rôle\&quot; /&gt;\n          &lt;/columns&gt;\n      &lt;/TableView&gt;\n      &lt;Button fx:id=\&quot;userSupp\&quot; disable=\&quot;true\&quot; layoutX=\&quot;265.0\&quot; layoutY=\&quot;366.0\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#supprimer\&quot; text=\&quot;Supprimer\&quot; /&gt;\n      &lt;Button fx:id=\&quot;retour\&quot; layoutY=\&quot;2.0\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#retour\&quot; text=\&quot;Retour\&quot; /&gt;\n   &lt;/children&gt;\n&lt;/AnchorPane&gt;\n```\n\n### Étape 2: Configurer le Contrôleur\n\nAssurez-vous que votre contrôleur `GestionUserController` est correctement configuré pour gérer les actions de l'interface utilisateur. Voici un extrait de code qui montre comment initialiser la table et gérer les événements :\n\n```java\npublic class GestionUserController implements Initializable {\n    @FXML\n    private TableView&lt;Utilisateur&gt; tableauUser;\n\n    @FXML\n    private Button userSupp;\n\n    @Override\n    public void initialize(URL location, ResourceBundle resources) {\n        String[][] colonnes = {\n            {\&quot;Id Utilisateur\&quot;, \&quot;idUtilisateur\&quot;},\n            {\&quot;Nom\&quot;, \&quot;nom\&quot;},\n            {\&quot;Prénom\&quot;, \&quot;prenom\&quot;},\n            {\&quot;Email\&quot;, \&quot;email\&quot;},\n            {\&quot;Rôle\&quot;, \&quot;role\&quot;},\n        };\n\n        for (String[] colonne : colonnes) {\n            TableColumn&lt;Utilisateur, String&gt; maCol = new TableColumn&lt;&gt;(colonne[0]);\n            maCol.setCellValueFactory(new PropertyValueFactory&lt;&gt;(colonne[1]));\n            tableauUser.getColumns().add(maCol);\n        }\n\n        UtilisateurRepository us = new UtilisateurRepository();\n        tableauUser.getItems().addAll(us.getAllUtilisateurs());\n    }\n\n    @FXML\n    public void cliqueTableau(MouseEvent mouseEvent) throws IOException {\n        Utilisateur selection = tableauUser.getSelectionModel().getSelectedItem();\n        userSupp.setDisable(selection == null);\n\n        if (mouseEvent.getClickCount() == 2 &amp;&amp; selection != null) {\n            StartApplication.changeScene(\&quot;user/modificationUser\&quot;);\n            ModificationUserController controller = (ModificationUserController) StartApplication.getControllerFromStage();\n            controller.initData(selection);\n        }\n    }\n\n    @FXML\n    public void supprimer(ActionEvent actionEvent) {\n        Utilisateur utilisateurSelectionne = tableauUser.getSelectionModel().getSelectedItem();\n        if (utilisateurSelectionne != null) {\n            UtilisateurRepository rep = new UtilisateurRepository();\n            rep.supprimerUtilisateurParEmail(utilisateurSelectionne.getEmail());\n            tableauUser.getItems().remove(utilisateurSelectionne);\n        }\n    }\n\n    @FXML\n    public void retour(ActionEvent actionEvent) throws IOException {\n        StartApplication.changeScene(\&quot;accueil/Accueil\&quot;);\n    }\n}\n```\n\n### Étape 3: Intégrer la Gestion des Tâches\n\nPour intégrer une fonctionnalité de liste de tâches, vous pouvez ajouter une nouvelle table ou une liste dans la même vue ou dans une vue séparée pour gérer les tâches associées à chaque utilisateur. Vous devrez créer un modèle de données pour les tâches et un contrôleur pour gérer les interactions.\n\n### Étape 4: Tester l'Interface\n\nAssurez-vous de tester l'interface pour vérifier que toutes les fonctionnalités fonctionnent comme prévu, y compris l'ajout, la modification et la suppression des utilisateurs et des tâches.\n\nEn suivant ces étapes, vous devriez être en mesure de créer une interface utilisateur pour gérer une liste de tâches dans votre application JavaFX. Si vous avez besoin de plus d'aide ou de détails spécifiques, n'hésitez pas à demander !&quot;}],&quot;context&quot;:{&quot;currentFile&quot;:{&quot;path&quot;:&quot;src\\main\\java\\appli\\accueil\\MotDePasseOublieController.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\appli\\accueil\\MotDePasseOublieController.java&quot;,&quot;sources&quot;:[&quot;opened_tab&quot;],&quot;content&quot;:&quot;package appli.accueil;\r\n\r\nimport javafx.fxml.FXML;\r\nimport javafx.scene.control.TextField;\r\nimport service.EmailService;\r\n\r\npublic class MotDePasseOublieController {\r\n    @FXML\r\n    private TextField emailField;\r\n\r\n    @FXML\r\n    private void emailMotDePasse() {\r\n        String email = emailField.getText();\r\n        if (email.isEmpty()) {\r\n            System.out.println(\&quot;Veuillez entrer une adresse e-mail.\&quot;);\r\n            return;\r\n        }\r\n        System.out.println(emailField.getText());\r\n    }\r\n\r\n    @FXML\r\n    private void envoyerCode() {\r\n        String email = emailField.getText();\r\n        if (email.isEmpty()) {\r\n            System.out.println(\&quot;Veuillez entrer une adresse e-mail.\&quot;);\r\n            return;\r\n        }\r\n\r\n        String code = EmailService.genererCode();\r\n        EmailService.envoyerEmail(email, \&quot;Réinitialisation de mot de passe\&quot;, \&quot;Votre code de réinitialisation est : \&quot; + code);\r\n        System.out.println(\&quot;Code envoyé à : \&quot; + email);\r\n    }\r\n}&quot;},&quot;codebaseEnabled&quot;:true,&quot;ragFiles&quot;:[{&quot;path&quot;:&quot;src/main/java/appli/StartApplication.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\appli\\StartApplication.java&quot;,&quot;sources&quot;:[&quot;keyword_search&quot;]},{&quot;path&quot;:&quot;src/main/java/appli/accueil/GestionUserController.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\appli\\accueil\\GestionUserController.java&quot;,&quot;sources&quot;:[&quot;keyword_search&quot;]},{&quot;path&quot;:&quot;src/main/java/module-info.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\module-info.java&quot;,&quot;sources&quot;:[&quot;keyword_search&quot;]},{&quot;path&quot;:&quot;src/main/java/appli/user/ModificationUserController.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\appli\\user\\ModificationUserController.java&quot;,&quot;sources&quot;:[&quot;keyword_search&quot;]},{&quot;path&quot;:&quot;src\\main\\java\\appli\\accueil\\GestionUserController.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\appli\\accueil\\GestionUserController.java&quot;,&quot;sources&quot;:[]},{&quot;path&quot;:&quot;src\\main\\java\\module-info.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\module-info.java&quot;,&quot;sources&quot;:[]},{&quot;path&quot;:&quot;src\\main\\java\\repository\\UtilisateurRepository.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\repository\\UtilisateurRepository.java&quot;,&quot;sources&quot;:[]},{&quot;path&quot;:&quot;src\\main\\resources\\appli\\accueil\\GestionUserView.fxml&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\resources\\appli\\accueil\\GestionUserView.fxml&quot;,&quot;sources&quot;:[]},{&quot;path&quot;:&quot;src\\main\\resources\\appli\\user\\modificationUserView.fxml&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\resources\\appli\\user\\modificationUserView.fxml&quot;,&quot;sources&quot;:[]},{&quot;path&quot;:&quot;pom.xml&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\pom.xml&quot;,&quot;sources&quot;:[]},{&quot;path&quot;:&quot;.gitignore&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\.gitignore&quot;,&quot;sources&quot;:[]},{&quot;path&quot;:&quot;.mvn\\wrapper\\maven-wrapper.properties&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\.mvn\\wrapper\\maven-wrapper.properties&quot;,&quot;sources&quot;:[]},{&quot;path&quot;:&quot;src/main/java/appli/accueil/GestionUserController.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\appli\\accueil\\GestionUserController.java&quot;,&quot;sources&quot;:[&quot;opened_tab&quot;]},{&quot;path&quot;:&quot;src/main/java/appli/accueil/MotDePasseOublieController.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\appli\\accueil\\MotDePasseOublieController.java&quot;,&quot;sources&quot;:[&quot;opened_tab&quot;]},{&quot;path&quot;:&quot;src/main/resources/appli/accueil/MdpOublieView.fxml&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\resources\\appli\\accueil\\MdpOublieView.fxml&quot;,&quot;sources&quot;:[&quot;opened_tab&quot;]},{&quot;path&quot;:&quot;src/main/java/appli/accueil/AccueilController.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\appli\\accueil\\AccueilController.java&quot;,&quot;sources&quot;:[&quot;opened_tab&quot;]},{&quot;path&quot;:&quot;src/main/resources/appli/accueil/AccueilView.fxml&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\resources\\appli\\accueil\\AccueilView.fxml&quot;,&quot;sources&quot;:[&quot;opened_tab&quot;]},{&quot;path&quot;:&quot;src/main/java/appli/accueil/LoginController.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\appli\\accueil\\LoginController.java&quot;,&quot;sources&quot;:[&quot;opened_tab&quot;]}],&quot;rerankedFiles&quot;:[{&quot;path&quot;:&quot;src\\main\\java\\appli\\accueil\\GestionUserController.java&quot;,&quot;fsPath&quot;:&quot;src\\main\\java\\appli\\accueil\\GestionUserController.java&quot;},{&quot;path&quot;:&quot;src\\main\\java\\appli\\user\\ModificationUserController.java&quot;,&quot;fsPath&quot;:&quot;src\\main\\java\\appli\\user\\ModificationUserController.java&quot;},{&quot;path&quot;:&quot;src\\main\\resources\\appli\\accueil\\AccueilView.fxml&quot;,&quot;fsPath&quot;:&quot;src\\main\\resources\\appli\\accueil\\AccueilView.fxml&quot;},{&quot;path&quot;:&quot;src\\main\\resources\\appli\\accueil\\GestionUserView.fxml&quot;,&quot;fsPath&quot;:&quot;src\\main\\resources\\appli\\accueil\\GestionUserView.fxml&quot;}],&quot;usedFilePaths&quot;:[{&quot;path&quot;:&quot;src\\main\\java\\appli\\accueil\\MotDePasseOublieController.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\appli\\accueil\\MotDePasseOublieController.java&quot;,&quot;sources&quot;:[&quot;opened_tab&quot;],&quot;content&quot;:&quot;package appli.accueil;\r\n\r\nimport javafx.fxml.FXML;\r\nimport javafx.scene.control.TextField;\r\nimport service.EmailService;\r\n\r\npublic class MotDePasseOublieController {\r\n    @FXML\r\n    private TextField emailField;\r\n\r\n    @FXML\r\n    private void emailMotDePasse() {\r\n        String email = emailField.getText();\r\n        if (email.isEmpty()) {\r\n            System.out.println(\&quot;Veuillez entrer une adresse e-mail.\&quot;);\r\n            return;\r\n        }\r\n        System.out.println(emailField.getText());\r\n    }\r\n\r\n    @FXML\r\n    private void envoyerCode() {\r\n        String email = emailField.getText();\r\n        if (email.isEmpty()) {\r\n            System.out.println(\&quot;Veuillez entrer une adresse e-mail.\&quot;);\r\n            return;\r\n        }\r\n\r\n        String code = EmailService.genererCode();\r\n        EmailService.envoyerEmail(email, \&quot;Réinitialisation de mot de passe\&quot;, \&quot;Votre code de réinitialisation est : \&quot; + code);\r\n        System.out.println(\&quot;Code envoyé à : \&quot; + email);\r\n    }\r\n}&quot;},{&quot;path&quot;:&quot;src\\main\\java\\appli\\accueil\\GestionUserController.java&quot;,&quot;fsPath&quot;:&quot;src\\main\\java\\appli\\accueil\\GestionUserController.java&quot;},{&quot;path&quot;:&quot;src\\main\\java\\appli\\user\\ModificationUserController.java&quot;,&quot;fsPath&quot;:&quot;src\\main\\java\\appli\\user\\ModificationUserController.java&quot;},{&quot;path&quot;:&quot;src\\main\\resources\\appli\\accueil\\AccueilView.fxml&quot;,&quot;fsPath&quot;:&quot;src\\main\\resources\\appli\\accueil\\AccueilView.fxml&quot;},{&quot;path&quot;:&quot;src\\main\\resources\\appli\\accueil\\GestionUserView.fxml&quot;,&quot;fsPath&quot;:&quot;src\\main\\resources\\appli\\accueil\\GestionUserView.fxml&quot;}]},&quot;createdAt&quot;:1746738784069,&quot;isInternal&quot;:false}],&quot;isAgent&quot;:false,&quot;isNameGenerated&quot;:true,&quot;isCustomAgent&quot;:false,&quot;isUnitTestsAgent&quot;:false,&quot;autoApply&quot;:false},&quot;6b64873e-059d-4a67-aa81-6465e3eb0665&quot;:{&quot;id&quot;:&quot;6b64873e-059d-4a67-aa81-6465e3eb0665&quot;,&quot;createdAt&quot;:1746738797608,&quot;updatedAt&quot;:1746742261428,&quot;title&quot;:&quot;Interface Gestion Todo List&quot;,&quot;messages&quot;:[{&quot;id&quot;:&quot;36f0bd58-1564-45c9-a3a9-a1b3c798f85d&quot;,&quot;role&quot;:&quot;user&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;peux tu m'aider a faire l'interface d'une application todo list sur la page gestion user&quot;}],&quot;context&quot;:{&quot;currentFile&quot;:{&quot;path&quot;:&quot;src\\main\\java\\appli\\accueil\\MotDePasseOublieController.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\appli\\accueil\\MotDePasseOublieController.java&quot;,&quot;sources&quot;:[&quot;opened_tab&quot;],&quot;content&quot;:&quot;package appli.accueil;\r\n\r\nimport javafx.fxml.FXML;\r\nimport javafx.scene.control.TextField;\r\nimport service.EmailService;\r\n\r\npublic class MotDePasseOublieController {\r\n    @FXML\r\n    private TextField emailField;\r\n\r\n    @FXML\r\n    private void emailMotDePasse() {\r\n        String email = emailField.getText();\r\n        if (email.isEmpty()) {\r\n            System.out.println(\&quot;Veuillez entrer une adresse e-mail.\&quot;);\r\n            return;\r\n        }\r\n        System.out.println(emailField.getText());\r\n    }\r\n\r\n    @FXML\r\n    private void envoyerCode() {\r\n        String email = emailField.getText();\r\n        if (email.isEmpty()) {\r\n            System.out.println(\&quot;Veuillez entrer une adresse e-mail.\&quot;);\r\n            return;\r\n        }\r\n\r\n        String code = EmailService.genererCode();\r\n        EmailService.envoyerEmail(email, \&quot;Réinitialisation de mot de passe\&quot;, \&quot;Votre code de réinitialisation est : \&quot; + code);\r\n        System.out.println(\&quot;Code envoyé à : \&quot; + email);\r\n    }\r\n}&quot;},&quot;codebaseEnabled&quot;:true,&quot;ragFiles&quot;:[{&quot;path&quot;:&quot;src/main/java/appli/StartApplication.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\appli\\StartApplication.java&quot;,&quot;sources&quot;:[&quot;keyword_search&quot;]},{&quot;path&quot;:&quot;src/main/java/appli/accueil/GestionUserController.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\appli\\accueil\\GestionUserController.java&quot;,&quot;sources&quot;:[&quot;keyword_search&quot;]},{&quot;path&quot;:&quot;src/main/java/module-info.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\module-info.java&quot;,&quot;sources&quot;:[&quot;keyword_search&quot;]},{&quot;path&quot;:&quot;src/main/java/appli/user/ModificationUserController.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\appli\\user\\ModificationUserController.java&quot;,&quot;sources&quot;:[&quot;keyword_search&quot;]},{&quot;path&quot;:&quot;src\\main\\java\\appli\\accueil\\GestionUserController.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\appli\\accueil\\GestionUserController.java&quot;,&quot;sources&quot;:[]},{&quot;path&quot;:&quot;src\\main\\java\\module-info.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\module-info.java&quot;,&quot;sources&quot;:[]},{&quot;path&quot;:&quot;src\\main\\java\\repository\\UtilisateurRepository.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\repository\\UtilisateurRepository.java&quot;,&quot;sources&quot;:[]},{&quot;path&quot;:&quot;src\\main\\resources\\appli\\accueil\\GestionUserView.fxml&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\resources\\appli\\accueil\\GestionUserView.fxml&quot;,&quot;sources&quot;:[]},{&quot;path&quot;:&quot;src\\main\\resources\\appli\\user\\modificationUserView.fxml&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\resources\\appli\\user\\modificationUserView.fxml&quot;,&quot;sources&quot;:[]},{&quot;path&quot;:&quot;pom.xml&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\pom.xml&quot;,&quot;sources&quot;:[]},{&quot;path&quot;:&quot;.gitignore&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\.gitignore&quot;,&quot;sources&quot;:[]},{&quot;path&quot;:&quot;.mvn\\wrapper\\maven-wrapper.properties&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\.mvn\\wrapper\\maven-wrapper.properties&quot;,&quot;sources&quot;:[]},{&quot;path&quot;:&quot;src/main/java/appli/accueil/GestionUserController.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\appli\\accueil\\GestionUserController.java&quot;,&quot;sources&quot;:[&quot;opened_tab&quot;]},{&quot;path&quot;:&quot;src/main/java/appli/accueil/MotDePasseOublieController.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\appli\\accueil\\MotDePasseOublieController.java&quot;,&quot;sources&quot;:[&quot;opened_tab&quot;]},{&quot;path&quot;:&quot;src/main/resources/appli/accueil/MdpOublieView.fxml&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\resources\\appli\\accueil\\MdpOublieView.fxml&quot;,&quot;sources&quot;:[&quot;opened_tab&quot;]},{&quot;path&quot;:&quot;src/main/java/appli/accueil/AccueilController.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\appli\\accueil\\AccueilController.java&quot;,&quot;sources&quot;:[&quot;opened_tab&quot;]},{&quot;path&quot;:&quot;src/main/resources/appli/accueil/AccueilView.fxml&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\resources\\appli\\accueil\\AccueilView.fxml&quot;,&quot;sources&quot;:[&quot;opened_tab&quot;]},{&quot;path&quot;:&quot;src/main/java/appli/accueil/LoginController.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\appli\\accueil\\LoginController.java&quot;,&quot;sources&quot;:[&quot;opened_tab&quot;]}],&quot;rerankedFiles&quot;:[{&quot;path&quot;:&quot;src\\main\\java\\appli\\accueil\\GestionUserController.java&quot;,&quot;fsPath&quot;:&quot;src\\main\\java\\appli\\accueil\\GestionUserController.java&quot;},{&quot;path&quot;:&quot;src\\main\\java\\appli\\user\\ModificationUserController.java&quot;,&quot;fsPath&quot;:&quot;src\\main\\java\\appli\\user\\ModificationUserController.java&quot;},{&quot;path&quot;:&quot;src\\main\\resources\\appli\\accueil\\AccueilView.fxml&quot;,&quot;fsPath&quot;:&quot;src\\main\\resources\\appli\\accueil\\AccueilView.fxml&quot;},{&quot;path&quot;:&quot;src\\main\\resources\\appli\\accueil\\GestionUserView.fxml&quot;,&quot;fsPath&quot;:&quot;src\\main\\resources\\appli\\accueil\\GestionUserView.fxml&quot;}],&quot;usedFilePaths&quot;:[{&quot;path&quot;:&quot;src\\main\\java\\appli\\accueil\\MotDePasseOublieController.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\appli\\accueil\\MotDePasseOublieController.java&quot;,&quot;sources&quot;:[&quot;opened_tab&quot;],&quot;content&quot;:&quot;package appli.accueil;\r\n\r\nimport javafx.fxml.FXML;\r\nimport javafx.scene.control.TextField;\r\nimport service.EmailService;\r\n\r\npublic class MotDePasseOublieController {\r\n    @FXML\r\n    private TextField emailField;\r\n\r\n    @FXML\r\n    private void emailMotDePasse() {\r\n        String email = emailField.getText();\r\n        if (email.isEmpty()) {\r\n            System.out.println(\&quot;Veuillez entrer une adresse e-mail.\&quot;);\r\n            return;\r\n        }\r\n        System.out.println(emailField.getText());\r\n    }\r\n\r\n    @FXML\r\n    private void envoyerCode() {\r\n        String email = emailField.getText();\r\n        if (email.isEmpty()) {\r\n            System.out.println(\&quot;Veuillez entrer une adresse e-mail.\&quot;);\r\n            return;\r\n        }\r\n\r\n        String code = EmailService.genererCode();\r\n        EmailService.envoyerEmail(email, \&quot;Réinitialisation de mot de passe\&quot;, \&quot;Votre code de réinitialisation est : \&quot; + code);\r\n        System.out.println(\&quot;Code envoyé à : \&quot; + email);\r\n    }\r\n}&quot;},{&quot;path&quot;:&quot;src\\main\\java\\appli\\accueil\\GestionUserController.java&quot;,&quot;fsPath&quot;:&quot;src\\main\\java\\appli\\accueil\\GestionUserController.java&quot;},{&quot;path&quot;:&quot;src\\main\\java\\appli\\user\\ModificationUserController.java&quot;,&quot;fsPath&quot;:&quot;src\\main\\java\\appli\\user\\ModificationUserController.java&quot;},{&quot;path&quot;:&quot;src\\main\\resources\\appli\\accueil\\AccueilView.fxml&quot;,&quot;fsPath&quot;:&quot;src\\main\\resources\\appli\\accueil\\AccueilView.fxml&quot;},{&quot;path&quot;:&quot;src\\main\\resources\\appli\\accueil\\GestionUserView.fxml&quot;,&quot;fsPath&quot;:&quot;src\\main\\resources\\appli\\accueil\\GestionUserView.fxml&quot;}]},&quot;createdAt&quot;:1746738797608,&quot;isInternal&quot;:false,&quot;rawContent&quot;:{&quot;type&quot;:&quot;doc&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;peux tu m'aider a faire l'interface d'une application todo list sur la page gestion user&quot;}]}]}},{&quot;id&quot;:&quot;52f4dc32-8567-4811-8503-189c078bc152&quot;,&quot;role&quot;:&quot;assistant&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Je serais ravi de vous aider à créer une interface pour la gestion des utilisateurs dans votre application de liste de tâches. Pour mieux comprendre vos besoins, j'ai besoin de quelques informations supplémentaires sur votre projet.&quot;},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_01Jn9X7BeoxRieArgy9VQppp&quot;,&quot;statusText&quot;:&quot;Viewed root folder&quot;,&quot;status&quot;:&quot;SUCCESS&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Examinons la structure de votre projet pour mieux comprendre son organisation :&quot;},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_01M5o2kFB4NBouhi6YLJYtTf&quot;,&quot;statusText&quot;:&quot;Viewed folder&quot;,&quot;status&quot;:&quot;SUCCESS&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Avant de créer l'interface de gestion des utilisateurs, je voudrais comprendre la structure actuelle de votre application et voir si vous avez déjà des modèles d'utilisateurs ou des contrôleurs existants.&quot;},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_01X3Voqw1mZ5hs1NaNmnL7eB&quot;,&quot;statusText&quot;:&quot;Viewed folder&quot;,&quot;status&quot;:&quot;SUCCESS&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main/java/model&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\model&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Examinons le modèle d'utilisateur pour comprendre sa structure :&quot;},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_01YFxW5ZrQEWc4ozxEjuiKR4&quot;,&quot;statusText&quot;:&quot;Viewed file&quot;,&quot;status&quot;:&quot;SUCCESS&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main/java/model/Utilisateur.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\model\\Utilisateur.java&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Vérifions également le repository des utilisateurs pour comprendre comment ils sont gérés :&quot;},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_014JT4tM29J2jsnE3CqtrxwV&quot;,&quot;statusText&quot;:&quot;Viewed folder&quot;,&quot;status&quot;:&quot;SUCCESS&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main/java/repository&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\repository&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_01YTAjyBJtqiVyhsBGf94Ayi&quot;,&quot;statusText&quot;:&quot;Viewed file&quot;,&quot;status&quot;:&quot;SUCCESS&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main/java/repository/UtilisateurRepository.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\repository\\UtilisateurRepository.java&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Maintenant, vérifions s'il existe déjà des interfaces utilisateur pour comprendre le style et la structure de votre application :&quot;},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_0158vyBuQpZbQzuG7oJTe4PF&quot;,&quot;statusText&quot;:&quot;Viewed folder&quot;,&quot;status&quot;:&quot;SUCCESS&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main/resources/appli&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\resources\\appli&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Je vois qu'il existe déjà un fichier GestionUserView.fxml. Vérifions son contenu pour voir s'il s'agit de l'interface que vous souhaitez modifier ou si nous devons en créer une nouvelle :&quot;},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_01A28ENHmKuo6zsBHLhV2qJc&quot;,&quot;statusText&quot;:&quot;Viewed file&quot;,&quot;status&quot;:&quot;SUCCESS&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main/resources/appli/accueil/GestionUserView.fxml&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\resources\\appli\\accueil\\GestionUserView.fxml&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Vérifions également le contrôleur associé :&quot;},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_01Uk6w3aoM1Dw6F6QpZXvFgf&quot;,&quot;statusText&quot;:&quot;Viewed file&quot;,&quot;status&quot;:&quot;SUCCESS&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main/java/appli/accueil/GestionUserController.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\appli\\accueil\\GestionUserController.java&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Vérifions également la vue de modification d'utilisateur pour comprendre comment elle est structurée :&quot;},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_016uxVnR9kbqDXtw1APVJPkd&quot;,&quot;statusText&quot;:&quot;Viewed file&quot;,&quot;status&quot;:&quot;SUCCESS&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main/resources/appli/user/modificationUserView.fxml&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\resources\\appli\\user\\modificationUserView.fxml&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_01FtnijrmfRVwxmLiWBH1SPn&quot;,&quot;statusText&quot;:&quot;Viewed file&quot;,&quot;status&quot;:&quot;SUCCESS&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main/java/appli/user/ModificationUserController.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\appli\\user\\ModificationUserController.java&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Maintenant que j'ai une meilleure compréhension de votre application, je vais améliorer l'interface de gestion des utilisateurs pour en faire une interface plus complète de type \&quot;todo list\&quot; avec des fonctionnalités de gestion des utilisateurs.\n\nVoici ce que je propose de faire :\n\n1. Améliorer l'interface GestionUserView.fxml pour inclure plus de fonctionnalités\n2. Mettre à jour le contrôleur GestionUserController.java pour gérer ces nouvelles fonctionnalités\n\nCommençons par améliorer l'interface GestionUserView.fxml :&quot;},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_01CPmQZC6WkYyoxerNrQzGHj&quot;,&quot;statusText&quot;:&quot;Change generated&quot;,&quot;status&quot;:&quot;SUCCESS&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main/resources/appli/accueil/GestionUserView.fxml&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\resources\\appli\\accueil\\GestionUserView.fxml&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;codeHunk&quot;,&quot;lineBasedDiff&quot;:&quot;--- src/main/resources/appli/accueil/GestionUserView.fxml\n+++ src/main/resources/appli/accueil/GestionUserView.fxml\n@@ -1,13 +1,98 @@\n &lt;?xml version=\&quot;1.0\&quot; encoding=\&quot;UTF-8\&quot;?&gt;\n \n+&lt;?import javafx.geometry.Insets?&gt;\n &lt;?import javafx.scene.control.Button?&gt;\n+&lt;?import javafx.scene.control.Label?&gt;\n &lt;?import javafx.scene.control.TableView?&gt;\n+&lt;?import javafx.scene.control.TextField?&gt;\n &lt;?import javafx.scene.layout.AnchorPane?&gt;\n+&lt;?import javafx.scene.layout.HBox?&gt;\n+&lt;?import javafx.scene.layout.VBox?&gt;\n+&lt;?import javafx.scene.text.Font?&gt;\n \n-&lt;AnchorPane prefHeight=\&quot;400.0\&quot; prefWidth=\&quot;600.0\&quot; xmlns=\&quot;http://javafx.com/javafx/23.0.1\&quot; xmlns:fx=\&quot;http://javafx.com/fxml/1\&quot; fx:controller=\&quot;appli.accueil.GestionUserController\&quot;&gt;\n+&lt;AnchorPane prefHeight=\&quot;600.0\&quot; prefWidth=\&quot;800.0\&quot; xmlns=\&quot;http://javafx.com/javafx/23.0.1\&quot; xmlns:fx=\&quot;http://javafx.com/fxml/1\&quot; fx:controller=\&quot;appli.accueil.GestionUserController\&quot;&gt;\n    &lt;children&gt;\n-      &lt;TableView fx:id=\&quot;tableauUser\&quot; layoutX=\&quot;42.0\&quot; layoutY=\&quot;39.0\&quot; onMouseClicked=\&quot;#cliqueTableau\&quot; prefHeight=\&quot;323.0\&quot; prefWidth=\&quot;517.0\&quot; /&gt;\n-      &lt;Button fx:id=\&quot;userSupp\&quot; disable=\&quot;true\&quot; layoutX=\&quot;265.0\&quot; layoutY=\&quot;366.0\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#supprimer\&quot; text=\&quot;supprimer\&quot; /&gt;\n-      &lt;Button fx:id=\&quot;retour\&quot; layoutY=\&quot;2.0\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#retour\&quot; text=\&quot;retour\&quot; /&gt;\n+      &lt;VBox alignment=\&quot;TOP_CENTER\&quot; layoutX=\&quot;0.0\&quot; layoutY=\&quot;0.0\&quot; prefHeight=\&quot;600.0\&quot; prefWidth=\&quot;800.0\&quot; spacing=\&quot;10.0\&quot;&gt;\n+         &lt;children&gt;\n+            &lt;HBox alignment=\&quot;CENTER_LEFT\&quot; spacing=\&quot;10.0\&quot;&gt;\n+               &lt;children&gt;\n+                  &lt;Button fx:id=\&quot;retour\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#retour\&quot; style=\&quot;-fx-background-color: #4a90e2;\&quot; text=\&quot;Retour\&quot; textFill=\&quot;WHITE\&quot;&gt;\n+                     &lt;font&gt;\n+                        &lt;Font name=\&quot;System Bold\&quot; size=\&quot;12.0\&quot; /&gt;\n+                     &lt;/font&gt;\n+                  &lt;/Button&gt;\n+                  &lt;Label alignment=\&quot;CENTER\&quot; contentDisplay=\&quot;CENTER\&quot; text=\&quot;Gestion des Utilisateurs\&quot; textAlignment=\&quot;CENTER\&quot; HBox.hgrow=\&quot;ALWAYS\&quot;&gt;\n+                     &lt;font&gt;\n+                        &lt;Font name=\&quot;System Bold\&quot; size=\&quot;24.0\&quot; /&gt;\n+                     &lt;/font&gt;\n+                     &lt;HBox.margin&gt;\n+                        &lt;Insets left=\&quot;220.0\&quot; /&gt;\n+                     &lt;/HBox.margin&gt;\n+                  &lt;/Label&gt;\n+               &lt;/children&gt;\n+               &lt;padding&gt;\n+                  &lt;Insets bottom=\&quot;10.0\&quot; left=\&quot;10.0\&quot; right=\&quot;10.0\&quot; top=\&quot;10.0\&quot; /&gt;\n+               &lt;/padding&gt;\n+            &lt;/HBox&gt;\n+            \n+            &lt;HBox alignment=\&quot;CENTER\&quot; spacing=\&quot;10.0\&quot;&gt;\n+               &lt;children&gt;\n+                  &lt;TextField fx:id=\&quot;rechercheField\&quot; prefHeight=\&quot;30.0\&quot; prefWidth=\&quot;300.0\&quot; promptText=\&quot;Rechercher un utilisateur...\&quot;&gt;\n+                     &lt;font&gt;\n+                        &lt;Font size=\&quot;14.0\&quot; /&gt;\n+                     &lt;/font&gt;\n+                  &lt;/TextField&gt;\n+                  &lt;Button fx:id=\&quot;rechercheBtn\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#rechercher\&quot; style=\&quot;-fx-background-color: #4a90e2;\&quot; text=\&quot;Rechercher\&quot; textFill=\&quot;WHITE\&quot;&gt;\n+                     &lt;font&gt;\n+                        &lt;Font size=\&quot;14.0\&quot; /&gt;\n+                     &lt;/font&gt;\n+                  &lt;/Button&gt;\n+                  &lt;Button fx:id=\&quot;resetBtn\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#resetRecherche\&quot; style=\&quot;-fx-background-color: #7f8c8d;\&quot; text=\&quot;Réinitialiser\&quot; textFill=\&quot;WHITE\&quot;&gt;\n+                     &lt;font&gt;\n+                        &lt;Font size=\&quot;14.0\&quot; /&gt;\n+                     &lt;/font&gt;\n+                  &lt;/Button&gt;\n+               &lt;/children&gt;\n+               &lt;padding&gt;\n+                  &lt;Insets bottom=\&quot;10.0\&quot; left=\&quot;10.0\&quot; right=\&quot;10.0\&quot; top=\&quot;10.0\&quot; /&gt;\n+               &lt;/padding&gt;\n+            &lt;/HBox&gt;\n+            \n+            &lt;TableView fx:id=\&quot;tableauUser\&quot; onMouseClicked=\&quot;#cliqueTableau\&quot; prefHeight=\&quot;400.0\&quot; prefWidth=\&quot;780.0\&quot; style=\&quot;-fx-border-color: #e0e0e0; -fx-border-width: 1px;\&quot;&gt;\n+               &lt;VBox.margin&gt;\n+                  &lt;Insets left=\&quot;10.0\&quot; right=\&quot;10.0\&quot; /&gt;\n+               &lt;/VBox.margin&gt;\n+            &lt;/TableView&gt;\n+            \n+            &lt;HBox alignment=\&quot;CENTER\&quot; spacing=\&quot;20.0\&quot;&gt;\n+               &lt;children&gt;\n+                  &lt;Button fx:id=\&quot;ajouterBtn\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#ajouterUtilisateur\&quot; style=\&quot;-fx-background-color: #2ecc71;\&quot; text=\&quot;Ajouter\&quot; textFill=\&quot;WHITE\&quot;&gt;\n+                     &lt;font&gt;\n+                        &lt;Font name=\&quot;System Bold\&quot; size=\&quot;14.0\&quot; /&gt;\n+                     &lt;/font&gt;\n+                  &lt;/Button&gt;\n+                  &lt;Button fx:id=\&quot;modifierBtn\&quot; disable=\&quot;true\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#modifierUtilisateur\&quot; style=\&quot;-fx-background-color: #f39c12;\&quot; text=\&quot;Modifier\&quot; textFill=\&quot;WHITE\&quot;&gt;\n+                     &lt;font&gt;\n+                        &lt;Font name=\&quot;System Bold\&quot; size=\&quot;14.0\&quot; /&gt;\n+                     &lt;/font&gt;\n+                  &lt;/Button&gt;\n+                  &lt;Button fx:id=\&quot;userSupp\&quot; disable=\&quot;true\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#supprimer\&quot; style=\&quot;-fx-background-color: #e74c3c;\&quot; text=\&quot;Supprimer\&quot; textFill=\&quot;WHITE\&quot;&gt;\n+                     &lt;font&gt;\n+                        &lt;Font name=\&quot;System Bold\&quot; size=\&quot;14.0\&quot; /&gt;\n+                     &lt;/font&gt;\n+                  &lt;/Button&gt;\n+               &lt;/children&gt;\n+               &lt;padding&gt;\n+                  &lt;Insets bottom=\&quot;10.0\&quot; left=\&quot;10.0\&quot; right=\&quot;10.0\&quot; top=\&quot;10.0\&quot; /&gt;\n+               &lt;/padding&gt;\n+            &lt;/HBox&gt;\n+            \n+            &lt;Label fx:id=\&quot;messageLabel\&quot; alignment=\&quot;CENTER\&quot; textFill=\&quot;#2ecc71\&quot;&gt;\n+               &lt;font&gt;\n+                  &lt;Font size=\&quot;14.0\&quot; /&gt;\n+               &lt;/font&gt;\n+            &lt;/Label&gt;\n+         &lt;/children&gt;\n+      &lt;/VBox&gt;\n    &lt;/children&gt;\n &lt;/AnchorPane&gt;&quot;,&quot;refToolCallId&quot;:&quot;toolu_01CPmQZC6WkYyoxerNrQzGHj&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Maintenant, mettons à jour le contrôleur GestionUserController.java pour gérer les nouvelles fonctionnalités :&quot;},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_01Ka7ot1Xo4J9YELxj2qhMSD&quot;,&quot;statusText&quot;:&quot;Change generated&quot;,&quot;status&quot;:&quot;SUCCESS&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main/java/appli/accueil/GestionUserController.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\appli\\accueil\\GestionUserController.java&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;codeHunk&quot;,&quot;lineBasedDiff&quot;:&quot;--- src/main/java/appli/accueil/GestionUserController.java\n+++ src/main/java/appli/accueil/GestionUserController.java\n@@ -1,6 +1,8 @@\n package appli.accueil;\n import appli.StartApplication;\n import appli.user.ModificationUserController;\n+import javafx.collections.FXCollections;\n+import javafx.collections.ObservableList;\n import javafx.event.ActionEvent;\n import javafx.fxml.FXML;\n import javafx.fxml.Initializable;\n@@ -8,6 +10,7 @@\n import javafx.scene.control.Label;\n import javafx.scene.control.TableColumn;\n import javafx.scene.control.TableView;\n+import javafx.scene.control.TextField;\n import javafx.scene.control.cell.PropertyValueFactory;\n import javafx.scene.input.MouseEvent;\n import model.Utilisateur;\n@@ -16,7 +19,9 @@\n \n import java.io.IOException;\n import java.net.URL;\n+import java.util.ArrayList;\n import java.util.ResourceBundle;\n+import java.util.stream.Collectors;\n \n public class GestionUserController implements Initializable {\n     @FXML\n@@ -24,55 +29,171 @@\n \n     @FXML\n     private Button userSupp;\n+    \n+    @FXML\n+    private Button modifierBtn;\n+    \n+    @FXML\n+    private TextField rechercheField;\n+    \n+    @FXML\n+    private Label messageLabel;\n+    \n+    private ObservableList&lt;Utilisateur&gt; listeUtilisateurs;\n+    private UtilisateurRepository utilisateurRepository;\n \n     @Override\n     public void initialize(URL location, ResourceBundle resources) {\n-        String [][] colonnes = {\n-                { \&quot;Id Utilisateur\&quot;,\&quot;idUtilisateur\&quot; },\n-                { \&quot;Nom\&quot;,\&quot;nom\&quot; },\n-                { \&quot;Prénom\&quot;,\&quot;prenom\&quot; },\n-                { \&quot;Email\&quot;,\&quot;email\&quot; },\n-                { \&quot;Rôle\&quot;,\&quot;role\&quot; },\n+        utilisateurRepository = new UtilisateurRepository();\n+        \n+        // Configuration des colonnes du tableau\n+        String[][] colonnes = {\n+                {\&quot;Id Utilisateur\&quot;, \&quot;idUtilisateur\&quot;},\n+                {\&quot;Nom\&quot;, \&quot;nom\&quot;},\n+                {\&quot;Prénom\&quot;, \&quot;prenom\&quot;},\n+                {\&quot;Email\&quot;, \&quot;email\&quot;},\n+                {\&quot;Rôle\&quot;, \&quot;role\&quot;},\n         };\n \n-        for ( int i = 0 ; i &lt; colonnes.length ; i ++ ){\n-            TableColumn&lt;Utilisateur,String&gt; maCol = new TableColumn&lt;&gt;(colonnes[i][0]);\n+        for (int i = 0; i &lt; colonnes.length; i++) {\n+            TableColumn&lt;Utilisateur, String&gt; maCol = new TableColumn&lt;&gt;(colonnes[i][0]);\n             maCol.setCellValueFactory(\n-                    new PropertyValueFactory&lt;Utilisateur,String&gt;(colonnes[i][1]));\n+                    new PropertyValueFactory&lt;Utilisateur, String&gt;(colonnes[i][1]));\n+            maCol.setPrefWidth(150); // Définir une largeur pour chaque colonne\n             tableauUser.getColumns().add(maCol);\n         }\n-        UtilisateurRepository us = new UtilisateurRepository();\n-        tableauUser.getItems().addAll(us.getAllUtilisateurs());\n-\n-    }\n+        \n+        // Chargement des utilisateurs\n+        chargerUtilisateurs();\n+        \n+        // Effacer le message après 3 secondes\n+        messageLabel.textProperty().addListener((observable, oldValue, newValue) -&gt; {\n+            if (newValue != null &amp;&amp; !newValue.isEmpty()) {\n+                new Thread(() -&gt; {\n+                    try {\n+                        Thread.sleep(3000);\n+                        javafx.application.Platform.runLater(() -&gt; messageLabel.setText(\&quot;\&quot;));\n+                    } catch (InterruptedException e) {\n+                        e.printStackTrace();\n+                    }\n+                }).start();\n+            }\n+        });\n+    }\n+    \n+    /**\n+     * Charge tous les utilisateurs depuis la base de données\n+     */\n+    private void chargerUtilisateurs() {\n+        ArrayList&lt;Utilisateur&gt; utilisateurs = utilisateurRepository.getAllUtilisateurs();\n+        listeUtilisateurs = FXCollections.observableArrayList(utilisateurs);\n+        tableauUser.setItems(listeUtilisateurs);\n+    }\n+    \n     @FXML\n     public void cliqueTableau(MouseEvent mouseEvent) throws IOException {\n         Utilisateur selection = tableauUser.getSelectionModel().getSelectedItem();\n         if (selection != null) {\n             userSupp.setDisable(false);\n-        }else{\n+            modifierBtn.setDisable(false);\n+        } else {\n             userSupp.setDisable(true);\n-        }\n+            modifierBtn.setDisable(true);\n+        }\n+        \n+        // Double-clic pour modifier un utilisateur\n         if (mouseEvent.getClickCount() == 2) {\n             if (selection != null) {\n+                modifierUtilisateur();\n+            }\n+        }\n+    }\n+\n+    @FXML\n+    public void supprimer(ActionEvent actionEvent) {\n+        Utilisateur utilisateurSelectionne = tableauUser.getSelectionModel().getSelectedItem();\n+\n+        if (utilisateurSelectionne != null) {\n+            boolean supprime = utilisateurRepository.supprimerUtilisateurParEmail(utilisateurSelectionne.getEmail());\n+            \n+            if (supprime) {\n+                tableauUser.getItems().remove(utilisateurSelectionne);\n+                messageLabel.setText(\&quot;Utilisateur supprimé avec succès !\&quot;);\n+                messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);\n+            } else {\n+                messageLabel.setText(\&quot;Erreur lors de la suppression de l'utilisateur.\&quot;);\n+                messageLabel.setTextFill(javafx.scene.paint.Color.RED);\n+            }\n+            \n+            // Réinitialiser les boutons\n+            userSupp.setDisable(true);\n+            modifierBtn.setDisable(true);\n+        }\n+    }\n+    \n+    @FXML\n+    public void modifierUtilisateur() {\n+        Utilisateur utilisateurSelectionne = tableauUser.getSelectionModel().getSelectedItem();\n+        \n+        if (utilisateurSelectionne != null) {\n+            try {\n                 StartApplication.changeScene(\&quot;user/modificationUser\&quot;);\n                 ModificationUserController controller = (ModificationUserController)\n-                        StartApplication. getControllerFromStage();\n-                controller.initData(selection);\n-            }\n-        }\n-    }\n-\n-    @FXML\n-    public void supprimer(ActionEvent actionEvent) {\n-        Utilisateur utilisateurSelectionne = tableauUser.getSelectionModel().getSelectedItem();\n-\n-        if (utilisateurSelectionne != null) {\n-            UtilisateurRepository rep = new UtilisateurRepository();\n-            rep.supprimerUtilisateurParEmail(utilisateurSelectionne.getEmail());\n-\n-        }\n-        tableauUser.getItems().remove(utilisateurSelectionne);\n+                        StartApplication.getControllerFromStage();\n+                controller.initData(utilisateurSelectionne);\n+            } catch (IOException e) {\n+                messageLabel.setText(\&quot;Erreur lors de l'ouverture de la page de modification.\&quot;);\n+                messageLabel.setTextFill(javafx.scene.paint.Color.RED);\n+                e.printStackTrace();\n+            }\n+        }\n+    }\n+    \n+    @FXML\n+    public void ajouterUtilisateur() {\n+        try {\n+            StartApplication.changeScene(\&quot;accueil/Inscription\&quot;);\n+        } catch (IOException e) {\n+            messageLabel.setText(\&quot;Erreur lors de l'ouverture de la page d'inscription.\&quot;);\n+            messageLabel.setTextFill(javafx.scene.paint.Color.RED);\n+            e.printStackTrace();\n+        }\n+    }\n+    \n+    @FXML\n+    public void rechercher() {\n+        String recherche = rechercheField.getText().toLowerCase().trim();\n+        \n+        if (recherche.isEmpty()) {\n+            tableauUser.setItems(listeUtilisateurs);\n+            return;\n+        }\n+        \n+        // Filtrer les utilisateurs selon le texte de recherche\n+        ObservableList&lt;Utilisateur&gt; utilisateursFiltres = listeUtilisateurs.stream()\n+                .filter(u -&gt; u.getNom().toLowerCase().contains(recherche) ||\n+                        u.getPrenom().toLowerCase().contains(recherche) ||\n+                        u.getEmail().toLowerCase().contains(recherche) ||\n+                        (u.getRole() != null &amp;&amp; u.getRole().toLowerCase().contains(recherche)))\n+                .collect(Collectors.toCollection(FXCollections::observableArrayList));\n+        \n+        tableauUser.setItems(utilisateursFiltres);\n+        \n+        if (utilisateursFiltres.isEmpty()) {\n+            messageLabel.setText(\&quot;Aucun utilisateur trouvé pour cette recherche.\&quot;);\n+            messageLabel.setTextFill(javafx.scene.paint.Color.ORANGE);\n+        } else {\n+            messageLabel.setText(utilisateursFiltres.size() + \&quot; utilisateur(s) trouvé(s).\&quot;);\n+            messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);\n+        }\n+    }\n+    \n+    @FXML\n+    public void resetRecherche() {\n+        rechercheField.clear();\n+        tableauUser.setItems(listeUtilisateurs);\n+        messageLabel.setText(\&quot;Recherche réinitialisée.\&quot;);\n+        messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);\n     }\n \n     @FXML&quot;,&quot;refToolCallId&quot;:&quot;toolu_01Ka7ot1Xo4J9YELxj2qhMSD&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Maintenant, créons une interface pour la gestion des tâches (todo list) qui sera accessible depuis la page de gestion des utilisateurs. Commençons par créer le fichier FXML pour la vue des tâches :&quot;},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_0138QjzZYmU4wZ8EPm2dFh3L&quot;,&quot;statusText&quot;:&quot;Change generated&quot;,&quot;status&quot;:&quot;SUCCESS&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main/resources/appli/user/TodoListView.fxml&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\resources\\appli\\user\\TodoListView.fxml&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;codeHunk&quot;,&quot;lineBasedDiff&quot;:&quot;--- src/main/resources/appli/user/TodoListView.fxml\n+++ src/main/resources/appli/user/TodoListView.fxml\n@@ -0,0 +1,181 @@\n+&lt;?xml version=\&quot;1.0\&quot; encoding=\&quot;UTF-8\&quot;?&gt;\n+\n+&lt;?import javafx.geometry.Insets?&gt;\n+&lt;?import javafx.scene.control.Button?&gt;\n+&lt;?import javafx.scene.control.ComboBox?&gt;\n+&lt;?import javafx.scene.control.DatePicker?&gt;\n+&lt;?import javafx.scene.control.Label?&gt;\n+&lt;?import javafx.scene.control.TableView?&gt;\n+&lt;?import javafx.scene.control.TextArea?&gt;\n+&lt;?import javafx.scene.control.TextField?&gt;\n+&lt;?import javafx.scene.layout.AnchorPane?&gt;\n+&lt;?import javafx.scene.layout.HBox?&gt;\n+&lt;?import javafx.scene.layout.VBox?&gt;\n+&lt;?import javafx.scene.text.Font?&gt;\n+\n+&lt;AnchorPane prefHeight=\&quot;600.0\&quot; prefWidth=\&quot;800.0\&quot; xmlns=\&quot;http://javafx.com/javafx/23.0.1\&quot; xmlns:fx=\&quot;http://javafx.com/fxml/1\&quot; fx:controller=\&quot;appli.user.TodoListController\&quot;&gt;\n+   &lt;children&gt;\n+      &lt;VBox alignment=\&quot;TOP_CENTER\&quot; layoutX=\&quot;0.0\&quot; layoutY=\&quot;0.0\&quot; prefHeight=\&quot;600.0\&quot; prefWidth=\&quot;800.0\&quot; spacing=\&quot;10.0\&quot;&gt;\n+         &lt;children&gt;\n+            &lt;HBox alignment=\&quot;CENTER_LEFT\&quot; spacing=\&quot;10.0\&quot;&gt;\n+               &lt;children&gt;\n+                  &lt;Button fx:id=\&quot;retourBtn\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#retour\&quot; style=\&quot;-fx-background-color: #4a90e2;\&quot; text=\&quot;Retour\&quot; textFill=\&quot;WHITE\&quot;&gt;\n+                     &lt;font&gt;\n+                        &lt;Font name=\&quot;System Bold\&quot; size=\&quot;12.0\&quot; /&gt;\n+                     &lt;/font&gt;\n+                  &lt;/Button&gt;\n+                  &lt;Label alignment=\&quot;CENTER\&quot; contentDisplay=\&quot;CENTER\&quot; text=\&quot;Gestion des Tâches\&quot; textAlignment=\&quot;CENTER\&quot; HBox.hgrow=\&quot;ALWAYS\&quot;&gt;\n+                     &lt;font&gt;\n+                        &lt;Font name=\&quot;System Bold\&quot; size=\&quot;24.0\&quot; /&gt;\n+                     &lt;/font&gt;\n+                     &lt;HBox.margin&gt;\n+                        &lt;Insets left=\&quot;250.0\&quot; /&gt;\n+                     &lt;/HBox.margin&gt;\n+                  &lt;/Label&gt;\n+               &lt;/children&gt;\n+               &lt;padding&gt;\n+                  &lt;Insets bottom=\&quot;10.0\&quot; left=\&quot;10.0\&quot; right=\&quot;10.0\&quot; top=\&quot;10.0\&quot; /&gt;\n+               &lt;/padding&gt;\n+            &lt;/HBox&gt;\n+            \n+            &lt;HBox spacing=\&quot;10.0\&quot;&gt;\n+               &lt;children&gt;\n+                  &lt;!-- Panneau de gauche pour la liste des tâches --&gt;\n+                  &lt;VBox prefHeight=\&quot;500.0\&quot; prefWidth=\&quot;400.0\&quot; spacing=\&quot;10.0\&quot;&gt;\n+                     &lt;children&gt;\n+                        &lt;HBox alignment=\&quot;CENTER_LEFT\&quot; spacing=\&quot;10.0\&quot;&gt;\n+                           &lt;children&gt;\n+                              &lt;Label text=\&quot;Tâches de l'utilisateur :\&quot;&gt;\n+                                 &lt;font&gt;\n+                                    &lt;Font name=\&quot;System Bold\&quot; size=\&quot;14.0\&quot; /&gt;\n+                                 &lt;/font&gt;\n+                              &lt;/Label&gt;\n+                              &lt;Label fx:id=\&quot;nomUtilisateurLabel\&quot; text=\&quot;[Nom de l'utilisateur]\&quot;&gt;\n+                                 &lt;font&gt;\n+                                    &lt;Font size=\&quot;14.0\&quot; /&gt;\n+                                 &lt;/font&gt;\n+                              &lt;/Label&gt;\n+                           &lt;/children&gt;\n+                        &lt;/HBox&gt;\n+                        \n+                        &lt;HBox alignment=\&quot;CENTER_LEFT\&quot; spacing=\&quot;10.0\&quot;&gt;\n+                           &lt;children&gt;\n+                              &lt;TextField fx:id=\&quot;rechercheField\&quot; prefHeight=\&quot;30.0\&quot; prefWidth=\&quot;250.0\&quot; promptText=\&quot;Rechercher une tâche...\&quot;&gt;\n+                                 &lt;font&gt;\n+                                    &lt;Font size=\&quot;12.0\&quot; /&gt;\n+                                 &lt;/font&gt;\n+                              &lt;/TextField&gt;\n+                              &lt;Button fx:id=\&quot;rechercheBtn\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#rechercher\&quot; style=\&quot;-fx-background-color: #4a90e2;\&quot; text=\&quot;Rechercher\&quot; textFill=\&quot;WHITE\&quot; /&gt;\n+                           &lt;/children&gt;\n+                        &lt;/HBox&gt;\n+                        \n+                        &lt;TableView fx:id=\&quot;tableauTaches\&quot; onMouseClicked=\&quot;#cliqueTache\&quot; prefHeight=\&quot;400.0\&quot; prefWidth=\&quot;400.0\&quot; style=\&quot;-fx-border-color: #e0e0e0; -fx-border-width: 1px;\&quot; /&gt;\n+                     &lt;/children&gt;\n+                  &lt;/VBox&gt;\n+                  \n+                  &lt;!-- Panneau de droite pour les détails et l'ajout de tâches --&gt;\n+                  &lt;VBox prefHeight=\&quot;500.0\&quot; prefWidth=\&quot;380.0\&quot; spacing=\&quot;15.0\&quot; style=\&quot;-fx-background-color: #f8f9fa; -fx-border-color: #e0e0e0; -fx-border-width: 1px; -fx-border-radius: 5px;\&quot;&gt;\n+                     &lt;children&gt;\n+                        &lt;Label text=\&quot;Détails de la tâche\&quot; textAlignment=\&quot;CENTER\&quot;&gt;\n+                           &lt;font&gt;\n+                              &lt;Font name=\&quot;System Bold\&quot; size=\&quot;16.0\&quot; /&gt;\n+                           &lt;/font&gt;\n+                        &lt;/Label&gt;\n+                        \n+                        &lt;HBox alignment=\&quot;CENTER_LEFT\&quot; spacing=\&quot;10.0\&quot;&gt;\n+                           &lt;children&gt;\n+                              &lt;Label prefWidth=\&quot;80.0\&quot; text=\&quot;Titre :\&quot;&gt;\n+                                 &lt;font&gt;\n+                                    &lt;Font name=\&quot;System Bold\&quot; size=\&quot;12.0\&quot; /&gt;\n+                                 &lt;/font&gt;\n+                              &lt;/Label&gt;\n+                              &lt;TextField fx:id=\&quot;titreField\&quot; prefHeight=\&quot;25.0\&quot; prefWidth=\&quot;250.0\&quot; /&gt;\n+                           &lt;/children&gt;\n+                        &lt;/HBox&gt;\n+                        \n+                        &lt;HBox alignment=\&quot;CENTER_LEFT\&quot; spacing=\&quot;10.0\&quot;&gt;\n+                           &lt;children&gt;\n+                              &lt;Label prefWidth=\&quot;80.0\&quot; text=\&quot;Description :\&quot;&gt;\n+                                 &lt;font&gt;\n+                                    &lt;Font name=\&quot;System Bold\&quot; size=\&quot;12.0\&quot; /&gt;\n+                                 &lt;/font&gt;\n+                              &lt;/Label&gt;\n+                              &lt;TextArea fx:id=\&quot;descriptionArea\&quot; prefHeight=\&quot;100.0\&quot; prefWidth=\&quot;250.0\&quot; wrapText=\&quot;true\&quot; /&gt;\n+                           &lt;/children&gt;\n+                        &lt;/HBox&gt;\n+                        \n+                        &lt;HBox alignment=\&quot;CENTER_LEFT\&quot; spacing=\&quot;10.0\&quot;&gt;\n+                           &lt;children&gt;\n+                              &lt;Label prefWidth=\&quot;80.0\&quot; text=\&quot;Date limite :\&quot;&gt;\n+                                 &lt;font&gt;\n+                                    &lt;Font name=\&quot;System Bold\&quot; size=\&quot;12.0\&quot; /&gt;\n+                                 &lt;/font&gt;\n+                              &lt;/Label&gt;\n+                              &lt;DatePicker fx:id=\&quot;dateEcheancePicker\&quot; prefHeight=\&quot;25.0\&quot; prefWidth=\&quot;250.0\&quot; /&gt;\n+                           &lt;/children&gt;\n+                        &lt;/HBox&gt;\n+                        \n+                        &lt;HBox alignment=\&quot;CENTER_LEFT\&quot; spacing=\&quot;10.0\&quot;&gt;\n+                           &lt;children&gt;\n+                              &lt;Label prefWidth=\&quot;80.0\&quot; text=\&quot;Priorité :\&quot;&gt;\n+                                 &lt;font&gt;\n+                                    &lt;Font name=\&quot;System Bold\&quot; size=\&quot;12.0\&quot; /&gt;\n+                                 &lt;/font&gt;\n+                              &lt;/Label&gt;\n+                              &lt;ComboBox fx:id=\&quot;prioriteComboBox\&quot; prefHeight=\&quot;25.0\&quot; prefWidth=\&quot;250.0\&quot; /&gt;\n+                           &lt;/children&gt;\n+                        &lt;/HBox&gt;\n+                        \n+                        &lt;HBox alignment=\&quot;CENTER_LEFT\&quot; spacing=\&quot;10.0\&quot;&gt;\n+                           &lt;children&gt;\n+                              &lt;Label prefWidth=\&quot;80.0\&quot; text=\&quot;Statut :\&quot;&gt;\n+                                 &lt;font&gt;\n+                                    &lt;Font name=\&quot;System Bold\&quot; size=\&quot;12.0\&quot; /&gt;\n+                                 &lt;/font&gt;\n+                              &lt;/Label&gt;\n+                              &lt;ComboBox fx:id=\&quot;statutComboBox\&quot; prefHeight=\&quot;25.0\&quot; prefWidth=\&quot;250.0\&quot; /&gt;\n+                           &lt;/children&gt;\n+                        &lt;/HBox&gt;\n+                        \n+                        &lt;HBox alignment=\&quot;CENTER\&quot; spacing=\&quot;20.0\&quot;&gt;\n+                           &lt;children&gt;\n+                              &lt;Button fx:id=\&quot;ajouterBtn\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#ajouterTache\&quot; style=\&quot;-fx-background-color: #2ecc71;\&quot; text=\&quot;Ajouter\&quot; textFill=\&quot;WHITE\&quot;&gt;\n+                                 &lt;font&gt;\n+                                    &lt;Font name=\&quot;System Bold\&quot; size=\&quot;12.0\&quot; /&gt;\n+                                 &lt;/font&gt;\n+                              &lt;/Button&gt;\n+                              &lt;Button fx:id=\&quot;modifierBtn\&quot; disable=\&quot;true\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#modifierTache\&quot; style=\&quot;-fx-background-color: #f39c12;\&quot; text=\&quot;Modifier\&quot; textFill=\&quot;WHITE\&quot;&gt;\n+                                 &lt;font&gt;\n+                                    &lt;Font name=\&quot;System Bold\&quot; size=\&quot;12.0\&quot; /&gt;\n+                                 &lt;/font&gt;\n+                              &lt;/Button&gt;\n+                              &lt;Button fx:id=\&quot;supprimerBtn\&quot; disable=\&quot;true\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#supprimerTache\&quot; style=\&quot;-fx-background-color: #e74c3c;\&quot; text=\&quot;Supprimer\&quot; textFill=\&quot;WHITE\&quot;&gt;\n+                                 &lt;font&gt;\n+                                    &lt;Font name=\&quot;System Bold\&quot; size=\&quot;12.0\&quot; /&gt;\n+                                 &lt;/font&gt;\n+                              &lt;/Button&gt;\n+                           &lt;/children&gt;\n+                           &lt;VBox.margin&gt;\n+                              &lt;Insets top=\&quot;10.0\&quot; /&gt;\n+                           &lt;/VBox.margin&gt;\n+                        &lt;/HBox&gt;\n+                        \n+                        &lt;Label fx:id=\&quot;messageLabel\&quot; alignment=\&quot;CENTER\&quot; textFill=\&quot;#2ecc71\&quot;&gt;\n+                           &lt;font&gt;\n+                              &lt;Font size=\&quot;12.0\&quot; /&gt;\n+                           &lt;/font&gt;\n+                        &lt;/Label&gt;\n+                     &lt;/children&gt;\n+                     &lt;padding&gt;\n+                        &lt;Insets bottom=\&quot;10.0\&quot; left=\&quot;10.0\&quot; right=\&quot;10.0\&quot; top=\&quot;10.0\&quot; /&gt;\n+                     &lt;/padding&gt;\n+                  &lt;/VBox&gt;\n+               &lt;/children&gt;\n+               &lt;padding&gt;\n+                  &lt;Insets left=\&quot;10.0\&quot; right=\&quot;10.0\&quot; /&gt;\n+               &lt;/padding&gt;\n+            &lt;/HBox&gt;\n+         &lt;/children&gt;\n+      &lt;/VBox&gt;\n+   &lt;/children&gt;\n+&lt;/AnchorPane&gt;&quot;,&quot;refToolCallId&quot;:&quot;toolu_0138QjzZYmU4wZ8EPm2dFh3L&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Maintenant, créons le modèle pour les tâches (Liste.java) :&quot;},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_01W7DcubjEF74mHcyDxqdrBt&quot;,&quot;statusText&quot;:&quot;Viewed file&quot;,&quot;status&quot;:&quot;SUCCESS&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main/java/model/Liste.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\model\\Liste.java&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Créons maintenant un modèle plus complet pour les tâches (Tache.java) :&quot;},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_014HM8K2pnUG6ctfQFjR7YWb&quot;,&quot;statusText&quot;:&quot;Change generated&quot;,&quot;status&quot;:&quot;SUCCESS&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main/java/model/Tache.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\model\\Tache.java&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;codeHunk&quot;,&quot;lineBasedDiff&quot;:&quot;--- src/main/java/model/Tache.java\n+++ src/main/java/model/Tache.java\n@@ -0,0 +1,104 @@\n+package model;\n+\n+import java.time.LocalDate;\n+\n+public class Tache {\n+    private int idTache;\n+    private String titre;\n+    private String description;\n+    private LocalDate dateEcheance;\n+    private String priorite;\n+    private String statut;\n+    private int idUtilisateur;\n+\n+    // Constructeur complet\n+    public Tache(int idTache, String titre, String description, LocalDate dateEcheance, String priorite, String statut, int idUtilisateur) {\n+        this.idTache = idTache;\n+        this.titre = titre;\n+        this.description = description;\n+        this.dateEcheance = dateEcheance;\n+        this.priorite = priorite;\n+        this.statut = statut;\n+        this.idUtilisateur = idUtilisateur;\n+    }\n+\n+    // Constructeur sans ID (pour la création)\n+    public Tache(String titre, String description, LocalDate dateEcheance, String priorite, String statut, int idUtilisateur) {\n+        this.titre = titre;\n+        this.description = description;\n+        this.dateEcheance = dateEcheance;\n+        this.priorite = priorite;\n+        this.statut = statut;\n+        this.idUtilisateur = idUtilisateur;\n+    }\n+\n+    // Getters et Setters\n+    public int getIdTache() {\n+        return idTache;\n+    }\n+\n+    public void setIdTache(int idTache) {\n+        this.idTache = idTache;\n+    }\n+\n+    public String getTitre() {\n+        return titre;\n+    }\n+\n+    public void setTitre(String titre) {\n+        this.titre = titre;\n+    }\n+\n+    public String getDescription() {\n+        return description;\n+    }\n+\n+    public void setDescription(String description) {\n+        this.description = description;\n+    }\n+\n+    public LocalDate getDateEcheance() {\n+        return dateEcheance;\n+    }\n+\n+    public void setDateEcheance(LocalDate dateEcheance) {\n+        this.dateEcheance = dateEcheance;\n+    }\n+\n+    public String getPriorite() {\n+        return priorite;\n+    }\n+\n+    public void setPriorite(String priorite) {\n+        this.priorite = priorite;\n+    }\n+\n+    public String getStatut() {\n+        return statut;\n+    }\n+\n+    public void setStatut(String statut) {\n+        this.statut = statut;\n+    }\n+\n+    public int getIdUtilisateur() {\n+        return idUtilisateur;\n+    }\n+\n+    public void setIdUtilisateur(int idUtilisateur) {\n+        this.idUtilisateur = idUtilisateur;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \&quot;Tache{\&quot; +\n+                \&quot;idTache=\&quot; + idTache +\n+                \&quot;, titre='\&quot; + titre + '\\'' +\n+                \&quot;, description='\&quot; + description + '\\'' +\n+                \&quot;, dateEcheance=\&quot; + dateEcheance +\n+                \&quot;, priorite='\&quot; + priorite + '\\'' +\n+                \&quot;, statut='\&quot; + statut + '\\'' +\n+                \&quot;, idUtilisateur=\&quot; + idUtilisateur +\n+                '}';\n+    }\n+}&quot;,&quot;refToolCallId&quot;:&quot;toolu_014HM8K2pnUG6ctfQFjR7YWb&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Créons maintenant le repository pour les tâches :&quot;},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_01CAqusfRdYgRQBwP3ZGUBA3&quot;,&quot;statusText&quot;:&quot;Change generated&quot;,&quot;status&quot;:&quot;SUCCESS&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main/java/repository/TacheRepository.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\repository\\TacheRepository.java&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;codeHunk&quot;,&quot;lineBasedDiff&quot;:&quot;--- src/main/java/repository/TacheRepository.java\n+++ src/main/java/repository/TacheRepository.java\n@@ -0,0 +1,194 @@\n+package repository;\n+\n+import database.Database;\n+import model.Tache;\n+\n+import java.sql.*;\n+import java.time.LocalDate;\n+import java.util.ArrayList;\n+\n+public class TacheRepository {\n+    private Connection connection;\n+\n+    public TacheRepository() {\n+        connection = Database.getConnexion();\n+    }\n+\n+    /**\n+     * Ajoute une nouvelle tâche dans la base de données\n+     * @param tache La tâche à ajouter\n+     * @return L'ID de la tâche créée, ou -1 en cas d'erreur\n+     */\n+    public int ajouterTache(Tache tache) {\n+        String sql = \&quot;INSERT INTO tache (titre, description, date_echeance, priorite, statut, id_utilisateur) VALUES (?, ?, ?, ?, ?, ?)\&quot;;\n+        try {\n+            PreparedStatement stmt = connection.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);\n+            stmt.setString(1, tache.getTitre());\n+            stmt.setString(2, tache.getDescription());\n+            stmt.setDate(3, tache.getDateEcheance() != null ? Date.valueOf(tache.getDateEcheance()) : null);\n+            stmt.setString(4, tache.getPriorite());\n+            stmt.setString(5, tache.getStatut());\n+            stmt.setInt(6, tache.getIdUtilisateur());\n+            \n+            int affectedRows = stmt.executeUpdate();\n+            \n+            if (affectedRows &gt; 0) {\n+                ResultSet generatedKeys = stmt.getGeneratedKeys();\n+                if (generatedKeys.next()) {\n+                    return generatedKeys.getInt(1);\n+                }\n+            }\n+        } catch (SQLException e) {\n+            System.out.println(\&quot;Erreur lors de l'ajout de la tâche : \&quot; + e.getMessage());\n+        }\n+        return -1;\n+    }\n+\n+    /**\n+     * Récupère toutes les tâches d'un utilisateur\n+     * @param idUtilisateur L'ID de l'utilisateur\n+     * @return Une liste de tâches\n+     */\n+    public ArrayList&lt;Tache&gt; getTachesParUtilisateur(int idUtilisateur) {\n+        ArrayList&lt;Tache&gt; taches = new ArrayList&lt;&gt;();\n+        String sql = \&quot;SELECT * FROM tache WHERE id_utilisateur = ? ORDER BY date_echeance ASC\&quot;;\n+        \n+        try {\n+            PreparedStatement stmt = connection.prepareStatement(sql);\n+            stmt.setInt(1, idUtilisateur);\n+            ResultSet rs = stmt.executeQuery();\n+            \n+            while (rs.next()) {\n+                Date dateSQL = rs.getDate(\&quot;date_echeance\&quot;);\n+                LocalDate dateEcheance = dateSQL != null ? dateSQL.toLocalDate() : null;\n+                \n+                Tache tache = new Tache(\n+                        rs.getInt(\&quot;id_tache\&quot;),\n+                        rs.getString(\&quot;titre\&quot;),\n+                        rs.getString(\&quot;description\&quot;),\n+                        dateEcheance,\n+                        rs.getString(\&quot;priorite\&quot;),\n+                        rs.getString(\&quot;statut\&quot;),\n+                        rs.getInt(\&quot;id_utilisateur\&quot;)\n+                );\n+                taches.add(tache);\n+            }\n+        } catch (SQLException e) {\n+            System.out.println(\&quot;Erreur lors de la récupération des tâches : \&quot; + e.getMessage());\n+        }\n+        return taches;\n+    }\n+\n+    /**\n+     * Met à jour une tâche existante\n+     * @param tache La tâche à mettre à jour\n+     * @return true si la mise à jour a réussi, false sinon\n+     */\n+    public boolean mettreAJourTache(Tache tache) {\n+        String sql = \&quot;UPDATE tache SET titre = ?, description = ?, date_echeance = ?, priorite = ?, statut = ? WHERE id_tache = ?\&quot;;\n+        try {\n+            PreparedStatement stmt = connection.prepareStatement(sql);\n+            stmt.setString(1, tache.getTitre());\n+            stmt.setString(2, tache.getDescription());\n+            stmt.setDate(3, tache.getDateEcheance() != null ? Date.valueOf(tache.getDateEcheance()) : null);\n+            stmt.setString(4, tache.getPriorite());\n+            stmt.setString(5, tache.getStatut());\n+            stmt.setInt(6, tache.getIdTache());\n+            \n+            int rowsUpdated = stmt.executeUpdate();\n+            return rowsUpdated &gt; 0;\n+        } catch (SQLException e) {\n+            System.out.println(\&quot;Erreur lors de la mise à jour de la tâche : \&quot; + e.getMessage());\n+            return false;\n+        }\n+    }\n+\n+    /**\n+     * Supprime une tâche\n+     * @param idTache L'ID de la tâche à supprimer\n+     * @return true si la suppression a réussi, false sinon\n+     */\n+    public boolean supprimerTache(int idTache) {\n+        String sql = \&quot;DELETE FROM tache WHERE id_tache = ?\&quot;;\n+        try {\n+            PreparedStatement stmt = connection.prepareStatement(sql);\n+            stmt.setInt(1, idTache);\n+            \n+            int rowsDeleted = stmt.executeUpdate();\n+            return rowsDeleted &gt; 0;\n+        } catch (SQLException e) {\n+            System.out.println(\&quot;Erreur lors de la suppression de la tâche : \&quot; + e.getMessage());\n+            return false;\n+        }\n+    }\n+\n+    /**\n+     * Récupère une tâche par son ID\n+     * @param idTache L'ID de la tâche\n+     * @return La tâche ou null si non trouvée\n+     */\n+    public Tache getTacheParId(int idTache) {\n+        String sql = \&quot;SELECT * FROM tache WHERE id_tache = ?\&quot;;\n+        try {\n+            PreparedStatement stmt = connection.prepareStatement(sql);\n+            stmt.setInt(1, idTache);\n+            ResultSet rs = stmt.executeQuery();\n+            \n+            if (rs.next()) {\n+                Date dateSQL = rs.getDate(\&quot;date_echeance\&quot;);\n+                LocalDate dateEcheance = dateSQL != null ? dateSQL.toLocalDate() : null;\n+                \n+                return new Tache(\n+                        rs.getInt(\&quot;id_tache\&quot;),\n+                        rs.getString(\&quot;titre\&quot;),\n+                        rs.getString(\&quot;description\&quot;),\n+                        dateEcheance,\n+                        rs.getString(\&quot;priorite\&quot;),\n+                        rs.getString(\&quot;statut\&quot;),\n+                        rs.getInt(\&quot;id_utilisateur\&quot;)\n+                );\n+            }\n+        } catch (SQLException e) {\n+            System.out.println(\&quot;Erreur lors de la récupération de la tâche : \&quot; + e.getMessage());\n+        }\n+        return null;\n+    }\n+    \n+    /**\n+     * Recherche des tâches par mot-clé pour un utilisateur spécifique\n+     * @param idUtilisateur L'ID de l'utilisateur\n+     * @param motCle Le mot-clé à rechercher\n+     * @return Une liste de tâches correspondant à la recherche\n+     */\n+    public ArrayList&lt;Tache&gt; rechercherTaches(int idUtilisateur, String motCle) {\n+        ArrayList&lt;Tache&gt; taches = new ArrayList&lt;&gt;();\n+        String sql = \&quot;SELECT * FROM tache WHERE id_utilisateur = ? AND (titre LIKE ? OR description LIKE ?) ORDER BY date_echeance ASC\&quot;;\n+        \n+        try {\n+            PreparedStatement stmt = connection.prepareStatement(sql);\n+            stmt.setInt(1, idUtilisateur);\n+            stmt.setString(2, \&quot;%\&quot; + motCle + \&quot;%\&quot;);\n+            stmt.setString(3, \&quot;%\&quot; + motCle + \&quot;%\&quot;);\n+            ResultSet rs = stmt.executeQuery();\n+            \n+            while (rs.next()) {\n+                Date dateSQL = rs.getDate(\&quot;date_echeance\&quot;);\n+                LocalDate dateEcheance = dateSQL != null ? dateSQL.toLocalDate() : null;\n+                \n+                Tache tache = new Tache(\n+                        rs.getInt(\&quot;id_tache\&quot;),\n+                        rs.getString(\&quot;titre\&quot;),\n+                        rs.getString(\&quot;description\&quot;),\n+                        dateEcheance,\n+                        rs.getString(\&quot;priorite\&quot;),\n+                        rs.getString(\&quot;statut\&quot;),\n+                        rs.getInt(\&quot;id_utilisateur\&quot;)\n+                );\n+                taches.add(tache);\n+            }\n+        } catch (SQLException e) {\n+            System.out.println(\&quot;Erreur lors de la recherche des tâches : \&quot; + e.getMessage());\n+        }\n+        return taches;\n+    }\n+}&quot;,&quot;refToolCallId&quot;:&quot;toolu_01CAqusfRdYgRQBwP3ZGUBA3&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Enfin, créons le contrôleur pour la vue des tâches :&quot;},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_01SP72UA6KM8B9ztfPmx3Mgo&quot;,&quot;statusText&quot;:&quot;Change generated&quot;,&quot;status&quot;:&quot;SUCCESS&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main/java/appli/user/TodoListController.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\appli\\user\\TodoListController.java&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;codeHunk&quot;,&quot;lineBasedDiff&quot;:&quot;--- src/main/java/appli/user/TodoListController.java\n+++ src/main/java/appli/user/TodoListController.java\n@@ -0,0 +1,309 @@\n+package appli.user;\n+\n+import appli.StartApplication;\n+import javafx.collections.FXCollections;\n+import javafx.collections.ObservableList;\n+import javafx.event.ActionEvent;\n+import javafx.fxml.FXML;\n+import javafx.fxml.Initializable;\n+import javafx.scene.control.*;\n+import javafx.scene.control.cell.PropertyValueFactory;\n+import javafx.scene.input.MouseEvent;\n+import model.Tache;\n+import model.Utilisateur;\n+import repository.TacheRepository;\n+\n+import java.io.IOException;\n+import java.net.URL;\n+import java.time.LocalDate;\n+import java.util.ArrayList;\n+import java.util.ResourceBundle;\n+\n+public class TodoListController implements Initializable {\n+\n+    @FXML\n+    private TableView&lt;Tache&gt; tableauTaches;\n+\n+    @FXML\n+    private TextField titreField;\n+\n+    @FXML\n+    private TextArea descriptionArea;\n+\n+    @FXML\n+    private DatePicker dateEcheancePicker;\n+\n+    @FXML\n+    private ComboBox&lt;String&gt; prioriteComboBox;\n+\n+    @FXML\n+    private ComboBox&lt;String&gt; statutComboBox;\n+\n+    @FXML\n+    private Button ajouterBtn;\n+\n+    @FXML\n+    private Button modifierBtn;\n+\n+    @FXML\n+    private Button supprimerBtn;\n+\n+    @FXML\n+    private TextField rechercheField;\n+\n+    @FXML\n+    private Label messageLabel;\n+\n+    @FXML\n+    private Label nomUtilisateurLabel;\n+\n+    private Utilisateur utilisateur;\n+    private TacheRepository tacheRepository;\n+    private ObservableList&lt;Tache&gt; listeTaches;\n+    private Tache tacheSelectionnee;\n+\n+    @Override\n+    public void initialize(URL location, ResourceBundle resources) {\n+        tacheRepository = new TacheRepository();\n+\n+        // Configuration des colonnes du tableau\n+        TableColumn&lt;Tache, String&gt; colTitre = new TableColumn&lt;&gt;(\&quot;Titre\&quot;);\n+        colTitre.setCellValueFactory(new PropertyValueFactory&lt;&gt;(\&quot;titre\&quot;));\n+        colTitre.setPrefWidth(150);\n+\n+        TableColumn&lt;Tache, String&gt; colPriorite = new TableColumn&lt;&gt;(\&quot;Priorité\&quot;);\n+        colPriorite.setCellValueFactory(new PropertyValueFactory&lt;&gt;(\&quot;priorite\&quot;));\n+        colPriorite.setPrefWidth(80);\n+\n+        TableColumn&lt;Tache, LocalDate&gt; colDate = new TableColumn&lt;&gt;(\&quot;Date limite\&quot;);\n+        colDate.setCellValueFactory(new PropertyValueFactory&lt;&gt;(\&quot;dateEcheance\&quot;));\n+        colDate.setPrefWidth(100);\n+\n+        TableColumn&lt;Tache, String&gt; colStatut = new TableColumn&lt;&gt;(\&quot;Statut\&quot;);\n+        colStatut.setCellValueFactory(new PropertyValueFactory&lt;&gt;(\&quot;statut\&quot;));\n+        colStatut.setPrefWidth(80);\n+\n+        tableauTaches.getColumns().addAll(colTitre, colPriorite, colDate, colStatut);\n+\n+        // Configuration des ComboBox\n+        prioriteComboBox.setItems(FXCollections.observableArrayList(\&quot;Haute\&quot;, \&quot;Moyenne\&quot;, \&quot;Basse\&quot;));\n+        statutComboBox.setItems(FXCollections.observableArrayList(\&quot;À faire\&quot;, \&quot;En cours\&quot;, \&quot;Terminée\&quot;));\n+\n+        // Initialisation de la date à aujourd'hui\n+        dateEcheancePicker.setValue(LocalDate.now());\n+\n+        // Effacer le message après 3 secondes\n+        messageLabel.textProperty().addListener((observable, oldValue, newValue) -&gt; {\n+            if (newValue != null &amp;&amp; !newValue.isEmpty()) {\n+                new Thread(() -&gt; {\n+                    try {\n+                        Thread.sleep(3000);\n+                        javafx.application.Platform.runLater(() -&gt; messageLabel.setText(\&quot;\&quot;));\n+                    } catch (InterruptedException e) {\n+                        e.printStackTrace();\n+                    }\n+                }).start();\n+            }\n+        });\n+    }\n+\n+    /**\n+     * Initialise les données de l'utilisateur et charge ses tâches\n+     * @param utilisateur L'utilisateur dont on veut afficher les tâches\n+     */\n+    public void initData(Utilisateur utilisateur) {\n+        this.utilisateur = utilisateur;\n+        nomUtilisateurLabel.setText(utilisateur.getNom() + \&quot; \&quot; + utilisateur.getPrenom());\n+        chargerTaches();\n+    }\n+\n+    /**\n+     * Charge les tâches de l'utilisateur depuis la base de données\n+     */\n+    private void chargerTaches() {\n+        if (utilisateur != null) {\n+            ArrayList&lt;Tache&gt; taches = tacheRepository.getTachesParUtilisateur(utilisateur.getIdUtilisateur());\n+            listeTaches = FXCollections.observableArrayList(taches);\n+            tableauTaches.setItems(listeTaches);\n+        }\n+    }\n+\n+    /**\n+     * Gère le clic sur une tâche dans le tableau\n+     */\n+    @FXML\n+    public void cliqueTache(MouseEvent event) {\n+        tacheSelectionnee = tableauTaches.getSelectionModel().getSelectedItem();\n+        \n+        if (tacheSelectionnee != null) {\n+            // Activer les boutons de modification et suppression\n+            modifierBtn.setDisable(false);\n+            supprimerBtn.setDisable(false);\n+            \n+            // Remplir les champs avec les données de la tâche sélectionnée\n+            titreField.setText(tacheSelectionnee.getTitre());\n+            descriptionArea.setText(tacheSelectionnee.getDescription());\n+            dateEcheancePicker.setValue(tacheSelectionnee.getDateEcheance());\n+            prioriteComboBox.setValue(tacheSelectionnee.getPriorite());\n+            statutComboBox.setValue(tacheSelectionnee.getStatut());\n+        } else {\n+            // Désactiver les boutons si aucune tâche n'est sélectionnée\n+            modifierBtn.setDisable(true);\n+            supprimerBtn.setDisable(true);\n+            \n+            // Vider les champs\n+            viderChamps();\n+        }\n+    }\n+\n+    /**\n+     * Ajoute une nouvelle tâche\n+     */\n+    @FXML\n+    public void ajouterTache() {\n+        if (validerChamps()) {\n+            Tache nouvelleTache = new Tache(\n+                    titreField.getText(),\n+                    descriptionArea.getText(),\n+                    dateEcheancePicker.getValue(),\n+                    prioriteComboBox.getValue(),\n+                    statutComboBox.getValue(),\n+                    utilisateur.getIdUtilisateur()\n+            );\n+            \n+            int idTache = tacheRepository.ajouterTache(nouvelleTache);\n+            \n+            if (idTache &gt; 0) {\n+                nouvelleTache.setIdTache(idTache);\n+                listeTaches.add(nouvelleTache);\n+                messageLabel.setText(\&quot;Tâche ajoutée avec succès !\&quot;);\n+                messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);\n+                viderChamps();\n+            } else {\n+                messageLabel.setText(\&quot;Erreur lors de l'ajout de la tâche.\&quot;);\n+                messageLabel.setTextFill(javafx.scene.paint.Color.RED);\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Modifie la tâche sélectionnée\n+     */\n+    @FXML\n+    public void modifierTache() {\n+        if (tacheSelectionnee != null &amp;&amp; validerChamps()) {\n+            tacheSelectionnee.setTitre(titreField.getText());\n+            tacheSelectionnee.setDescription(descriptionArea.getText());\n+            tacheSelectionnee.setDateEcheance(dateEcheancePicker.getValue());\n+            tacheSelectionnee.setPriorite(prioriteComboBox.getValue());\n+            tacheSelectionnee.setStatut(statutComboBox.getValue());\n+            \n+            boolean succes = tacheRepository.mettreAJourTache(tacheSelectionnee);\n+            \n+            if (succes) {\n+                // Rafraîchir le tableau\n+                tableauTaches.refresh();\n+                messageLabel.setText(\&quot;Tâche modifiée avec succès !\&quot;);\n+                messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);\n+                viderChamps();\n+                modifierBtn.setDisable(true);\n+                supprimerBtn.setDisable(true);\n+            } else {\n+                messageLabel.setText(\&quot;Erreur lors de la modification de la tâche.\&quot;);\n+                messageLabel.setTextFill(javafx.scene.paint.Color.RED);\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Supprime la tâche sélectionnée\n+     */\n+    @FXML\n+    public void supprimerTache() {\n+        if (tacheSelectionnee != null) {\n+            boolean succes = tacheRepository.supprimerTache(tacheSelectionnee.getIdTache());\n+            \n+            if (succes) {\n+                listeTaches.remove(tacheSelectionnee);\n+                messageLabel.setText(\&quot;Tâche supprimée avec succès !\&quot;);\n+                messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);\n+                viderChamps();\n+                modifierBtn.setDisable(true);\n+                supprimerBtn.setDisable(true);\n+            } else {\n+                messageLabel.setText(\&quot;Erreur lors de la suppression de la tâche.\&quot;);\n+                messageLabel.setTextFill(javafx.scene.paint.Color.RED);\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Recherche des tâches par mot-clé\n+     */\n+    @FXML\n+    public void rechercher() {\n+        String motCle = rechercheField.getText().trim();\n+        \n+        if (motCle.isEmpty()) {\n+            tableauTaches.setItems(listeTaches);\n+            return;\n+        }\n+        \n+        ArrayList&lt;Tache&gt; tachesRecherchees = tacheRepository.rechercherTaches(utilisateur.getIdUtilisateur(), motCle);\n+        tableauTaches.setItems(FXCollections.observableArrayList(tachesRecherchees));\n+        \n+        if (tachesRecherchees.isEmpty()) {\n+            messageLabel.setText(\&quot;Aucune tâche trouvée pour cette recherche.\&quot;);\n+            messageLabel.setTextFill(javafx.scene.paint.Color.ORANGE);\n+        } else {\n+            messageLabel.setText(tachesRecherchees.size() + \&quot; tâche(s) trouvée(s).\&quot;);\n+            messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);\n+        }\n+    }\n+\n+    /**\n+     * Valide les champs du formulaire\n+     * @return true si tous les champs sont valides, false sinon\n+     */\n+    private boolean validerChamps() {\n+        if (titreField.getText().trim().isEmpty()) {\n+            messageLabel.setText(\&quot;Le titre est obligatoire.\&quot;);\n+            messageLabel.setTextFill(javafx.scene.paint.Color.RED);\n+            return false;\n+        }\n+        \n+        if (prioriteComboBox.getValue() == null) {\n+            messageLabel.setText(\&quot;Veuillez sélectionner une priorité.\&quot;);\n+            messageLabel.setTextFill(javafx.scene.paint.Color.RED);\n+            return false;\n+        }\n+        \n+        if (statutComboBox.getValue() == null) {\n+            messageLabel.setText(\&quot;Veuillez sélectionner un statut.\&quot;);\n+            messageLabel.setTextFill(javafx.scene.paint.Color.RED);\n+            return false;\n+        }\n+        \n+        return true;\n+    }\n+\n+    /**\n+     * Vide les champs du formulaire\n+     */\n+    private void viderChamps() {\n+        titreField.clear();\n+        descriptionArea.clear();\n+        dateEcheancePicker.setValue(LocalDate.now());\n+        prioriteComboBox.getSelectionModel().clearSelection();\n+        statutComboBox.getSelectionModel().clearSelection();\n+        tableauTaches.getSelectionModel().clearSelection();\n+    }\n+\n+    /**\n+     * Retourne à la page de gestion des utilisateurs\n+     */\n+    @FXML\n+    public void retour() throws IOException {\n+        StartApplication.changeScene(\&quot;accueil/GestionUser\&quot;);\n+    }\n+}&quot;,&quot;refToolCallId&quot;:&quot;toolu_01SP72UA6KM8B9ztfPmx3Mgo&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Maintenant, modifions le contrôleur GestionUserController.java pour ajouter la fonctionnalité permettant d'accéder à la liste des tâches d'un utilisateur :&quot;},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_01RivvFYrvSsYGosFFWXoxre&quot;,&quot;statusText&quot;:&quot;Change generated&quot;,&quot;status&quot;:&quot;SUCCESS&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main/java/appli/accueil/GestionUserController.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\appli\\accueil\\GestionUserController.java&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;codeHunk&quot;,&quot;lineBasedDiff&quot;:&quot;--- src/main/java/appli/accueil/GestionUserController.java\n+++ src/main/java/appli/accueil/GestionUserController.java\n@@ -1,6 +1,7 @@\n package appli.accueil;\n import appli.StartApplication;\n import appli.user.ModificationUserController;\n+import appli.user.TodoListController;\n import javafx.collections.FXCollections;\n import javafx.collections.ObservableList;\n import javafx.event.ActionEvent;&quot;,&quot;refToolCallId&quot;:&quot;toolu_01RivvFYrvSsYGosFFWXoxre&quot;},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_01XgGfMRNF8xiLKG1F7PzSqw&quot;,&quot;statusText&quot;:&quot;Change generated&quot;,&quot;status&quot;:&quot;SUCCESS&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main/java/appli/accueil/GestionUserController.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\appli\\accueil\\GestionUserController.java&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;codeHunk&quot;,&quot;lineBasedDiff&quot;:&quot;--- src/main/java/appli/accueil/GestionUserController.java\n+++ src/main/java/appli/accueil/GestionUserController.java\n@@ -40,6 +40,9 @@\n     @FXML\n     private Label messageLabel;\n     \n+    @FXML\n+    private Button tachesBtn;\n+    \n     private ObservableList&lt;Utilisateur&gt; listeUtilisateurs;\n     private UtilisateurRepository utilisateurRepository;\n &quot;,&quot;refToolCallId&quot;:&quot;toolu_01XgGfMRNF8xiLKG1F7PzSqw&quot;},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_01P2ubAKh4shjmhDtnLoQZiz&quot;,&quot;statusText&quot;:&quot;Change generated&quot;,&quot;status&quot;:&quot;SUCCESS&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main/resources/appli/accueil/GestionUserView.fxml&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\resources\\appli\\accueil\\GestionUserView.fxml&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;codeHunk&quot;,&quot;lineBasedDiff&quot;:&quot;--- src/main/resources/appli/accueil/GestionUserView.fxml\n+++ src/main/resources/appli/accueil/GestionUserView.fxml\n@@ -76,6 +76,11 @@\n                         &lt;Font name=\&quot;System Bold\&quot; size=\&quot;14.0\&quot; /&gt;\n                      &lt;/font&gt;\n                   &lt;/Button&gt;\n+                  &lt;Button fx:id=\&quot;tachesBtn\&quot; disable=\&quot;true\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#gererTaches\&quot; style=\&quot;-fx-background-color: #3498db;\&quot; text=\&quot;Tâches\&quot; textFill=\&quot;WHITE\&quot;&gt;\n+                     &lt;font&gt;\n+                        &lt;Font name=\&quot;System Bold\&quot; size=\&quot;14.0\&quot; /&gt;\n+                     &lt;/font&gt;\n+                  &lt;/Button&gt;\n                   &lt;Button fx:id=\&quot;userSupp\&quot; disable=\&quot;true\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#supprimer\&quot; style=\&quot;-fx-background-color: #e74c3c;\&quot; text=\&quot;Supprimer\&quot; textFill=\&quot;WHITE\&quot;&gt;\n                      &lt;font&gt;\n                         &lt;Font name=\&quot;System Bold\&quot; size=\&quot;14.0\&quot; /&gt;&quot;,&quot;refToolCallId&quot;:&quot;toolu_01P2ubAKh4shjmhDtnLoQZiz&quot;},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_012f5MdDDH9N1XG3Lr4JjqHW&quot;,&quot;statusText&quot;:&quot;Change generated&quot;,&quot;status&quot;:&quot;SUCCESS&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main/java/appli/accueil/GestionUserController.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\appli\\accueil\\GestionUserController.java&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;codeHunk&quot;,&quot;lineBasedDiff&quot;:&quot;--- src/main/java/appli/accueil/GestionUserController.java\n+++ src/main/java/appli/accueil/GestionUserController.java\n@@ -100,9 +100,11 @@\n         if (selection != null) {\n             userSupp.setDisable(false);\n             modifierBtn.setDisable(false);\n+            tachesBtn.setDisable(false);\n         } else {\n             userSupp.setDisable(true);\n             modifierBtn.setDisable(true);\n+            tachesBtn.setDisable(true);\n         }\n         \n         // Double-clic pour modifier un utilisateur&quot;,&quot;refToolCallId&quot;:&quot;toolu_012f5MdDDH9N1XG3Lr4JjqHW&quot;},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_01LKdADvnxNqQw1ZPuUfiHvS&quot;,&quot;statusText&quot;:&quot;Change generated&quot;,&quot;status&quot;:&quot;SUCCESS&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main/java/appli/accueil/GestionUserController.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\appli\\accueil\\GestionUserController.java&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;codeHunk&quot;,&quot;lineBasedDiff&quot;:&quot;--- src/main/java/appli/accueil/GestionUserController.java\n+++ src/main/java/appli/accueil/GestionUserController.java\n@@ -134,6 +134,27 @@\n             // Réinitialiser les boutons\n             userSupp.setDisable(true);\n             modifierBtn.setDisable(true);\n+            tachesBtn.setDisable(true);\n+        }\n+    }\n+    \n+    @FXML\n+    public void gererTaches() {\n+        Utilisateur utilisateurSelectionne = tableauUser.getSelectionModel().getSelectedItem();\n+        \n+        if (utilisateurSelectionne != null) {\n+            try {\n+                StartApplication.changeScene(\&quot;user/TodoList\&quot;);\n+                TodoListController controller = (TodoListController)\n+                        StartApplication.getControllerFromStage();\n+                controller.initData(utilisateurSelectionne);\n+                messageLabel.setText(\&quot;Chargement des tâches de l'utilisateur...\&quot;);\n+                messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);\n+            } catch (IOException e) {\n+                messageLabel.setText(\&quot;Erreur lors de l'ouverture de la page des tâches.\&quot;);\n+                messageLabel.setTextFill(javafx.scene.paint.Color.RED);\n+                e.printStackTrace();\n+            }\n         }\n     }\n     &quot;,&quot;refToolCallId&quot;:&quot;toolu_01LKdADvnxNqQw1ZPuUfiHvS&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Enfin, créons le script SQL pour la table des tâches :&quot;},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_01SD1HELnKnTNF4n5jMVymX3&quot;,&quot;statusText&quot;:&quot;Change generated&quot;,&quot;status&quot;:&quot;SUCCESS&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main/resources/sql/tache.sql&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\resources\\sql\\tache.sql&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;codeHunk&quot;,&quot;lineBasedDiff&quot;:&quot;--- src/main/resources/sql/tache.sql\n+++ src/main/resources/sql/tache.sql\n@@ -0,0 +1,20 @@\n+-- Création de la table tache\n+CREATE TABLE IF NOT EXISTS tache (\n+    id_tache INT AUTO_INCREMENT PRIMARY KEY,\n+    titre VARCHAR(100) NOT NULL,\n+    description TEXT,\n+    date_echeance DATE,\n+    priorite VARCHAR(20) NOT NULL,\n+    statut VARCHAR(20) NOT NULL,\n+    id_utilisateur INT NOT NULL,\n+    FOREIGN KEY (id_utilisateur) REFERENCES utilisateur(id_utilisateur) ON DELETE CASCADE\n+);\n+\n+-- Insertion de quelques tâches de test\n+INSERT INTO tache (titre, description, date_echeance, priorite, statut, id_utilisateur)\n+VALUES \n+    ('Préparer la présentation', 'Préparer la présentation pour la réunion de lundi', '2023-12-15', 'Haute', 'À faire', 1),\n+    ('Envoyer les emails', 'Envoyer les emails de confirmation aux clients', '2023-12-10', 'Moyenne', 'En cours', 1),\n+    ('Mettre à jour la documentation', 'Mettre à jour la documentation du projet', '2023-12-20', 'Basse', 'À faire', 2),\n+    ('Corriger les bugs', 'Corriger les bugs signalés par les utilisateurs', '2023-12-05', 'Haute', 'Terminée', 2),\n+    ('Planifier la réunion', 'Planifier la réunion d\\'équipe pour la semaine prochaine', '2023-12-08', 'Moyenne', 'En cours', 3);&quot;,&quot;refToolCallId&quot;:&quot;toolu_01SD1HELnKnTNF4n5jMVymX3&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Voilà ! J'ai créé une interface complète pour la gestion des utilisateurs et des tâches dans votre application TodoListFX. Voici un résumé des modifications et ajouts effectués :\n\n1. **Interface de gestion des utilisateurs améliorée** :\n   - Design moderne avec des couleurs et une mise en page améliorée\n   - Fonctionnalité de recherche d'utilisateurs\n   - Boutons d'action (Ajouter, Modifier, Supprimer, Tâches)\n   - Messages de confirmation et d'erreur\n\n2. **Interface de gestion des tâches** :\n   - Vue divisée en deux parties : liste des tâches et formulaire de détails\n   - Tableau des tâches avec colonnes pertinentes\n   - Formulaire pour ajouter/modifier des tâches avec validation\n   - Fonctionnalités de recherche, ajout, modification et suppression\n   - Gestion des priorités et des statuts\n\n3. **Modèles et repositories** :\n   - Modèle Tache pour représenter les tâches\n   - TacheRepository pour gérer les opérations CRUD sur les tâches\n   - Script SQL pour créer la table des tâches et ajouter des données de test\n\n4. **Contrôleurs** :\n   - TodoListController pour gérer l'interface des tâches\n   - Mise à jour de GestionUserController pour accéder à la gestion des tâches\n\nPour utiliser cette nouvelle fonctionnalité :\n1. Exécutez le script SQL pour créer la table des tâches\n2. Accédez à la page de gestion des utilisateurs\n3. Sélectionnez un utilisateur et cliquez sur le bouton \&quot;Tâches\&quot;\n4. Vous pourrez alors gérer les tâches de cet utilisateur\n\nCette implémentation offre une interface utilisateur intuitive et fonctionnelle pour gérer à la fois les utilisateurs et leurs tâches, tout en respectant l'architecture existante de votre application.&quot;},{&quot;type&quot;:&quot;codePatch&quot;,&quot;diffs&quot;:[{&quot;path&quot;:&quot;src/main/java/repository/TacheRepository.java&quot;,&quot;patch&quot;:&quot;@@ -0,0 +1,7551 @@\n+package repository;%0A%0Aimport database.Database;%0Aimport model.Tache;%0A%0Aimport java.sql.*;%0Aimport java.time.LocalDate;%0Aimport java.util.ArrayList;%0A%0Apublic class TacheRepository %7B%0A    private Connection connection;%0A%0A    public TacheRepository() %7B%0A        connection = Database.getConnexion();%0A    %7D%0A%0A    /**%0A     * Ajoute une nouvelle t%C3%A2che dans la base de donn%C3%A9es%0A     * @param tache La t%C3%A2che %C3%A0 ajouter%0A     * @return L'ID de la t%C3%A2che cr%C3%A9%C3%A9e, ou -1 en cas d'erreur%0A     */%0A    public int ajouterTache(Tache tache) %7B%0A        String sql = %22INSERT INTO tache (titre, description, date_echeance, priorite, statut, id_utilisateur) VALUES (?, ?, ?, ?, ?, ?)%22;%0A        try %7B%0A            PreparedStatement stmt = connection.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);%0A            stmt.setString(1, tache.getTitre());%0A            stmt.setString(2, tache.getDescription());%0A            stmt.setDate(3, tache.getDateEcheance() != null ? Date.valueOf(tache.getDateEcheance()) : null);%0A            stmt.setString(4, tache.getPriorite());%0A            stmt.setString(5, tache.getStatut());%0A            stmt.setInt(6, tache.getIdUtilisateur());%0A            %0A            int affectedRows = stmt.executeUpdate();%0A            %0A            if (affectedRows %3E 0) %7B%0A                ResultSet generatedKeys = stmt.getGeneratedKeys();%0A                if (generatedKeys.next()) %7B%0A                    return generatedKeys.getInt(1);%0A                %7D%0A            %7D%0A        %7D catch (SQLException e) %7B%0A            System.out.println(%22Erreur lors de l'ajout de la t%C3%A2che : %22 + e.getMessage());%0A        %7D%0A        return -1;%0A    %7D%0A%0A    /**%0A     * R%C3%A9cup%C3%A8re toutes les t%C3%A2ches d'un utilisateur%0A     * @param idUtilisateur L'ID de l'utilisateur%0A     * @return Une liste de t%C3%A2ches%0A     */%0A    public ArrayList%3CTache%3E getTachesParUtilisateur(int idUtilisateur) %7B%0A        ArrayList%3CTache%3E taches = new ArrayList%3C%3E();%0A        String sql = %22SELECT * FROM tache WHERE id_utilisateur = ? ORDER BY date_echeance ASC%22;%0A        %0A        try %7B%0A            PreparedStatement stmt = connection.prepareStatement(sql);%0A            stmt.setInt(1, idUtilisateur);%0A            ResultSet rs = stmt.executeQuery();%0A            %0A            while (rs.next()) %7B%0A                Date dateSQL = rs.getDate(%22date_echeance%22);%0A                LocalDate dateEcheance = dateSQL != null ? dateSQL.toLocalDate() : null;%0A                %0A                Tache tache = new Tache(%0A                        rs.getInt(%22id_tache%22),%0A                        rs.getString(%22titre%22),%0A                        rs.getString(%22description%22),%0A                        dateEcheance,%0A                        rs.getString(%22priorite%22),%0A                        rs.getString(%22statut%22),%0A                        rs.getInt(%22id_utilisateur%22)%0A                );%0A                taches.add(tache);%0A            %7D%0A        %7D catch (SQLException e) %7B%0A            System.out.println(%22Erreur lors de la r%C3%A9cup%C3%A9ration des t%C3%A2ches : %22 + e.getMessage());%0A        %7D%0A        return taches;%0A    %7D%0A%0A    /**%0A     * Met %C3%A0 jour une t%C3%A2che existante%0A     * @param tache La t%C3%A2che %C3%A0 mettre %C3%A0 jour%0A     * @return true si la mise %C3%A0 jour a r%C3%A9ussi, false sinon%0A     */%0A    public boolean mettreAJourTache(Tache tache) %7B%0A        String sql = %22UPDATE tache SET titre = ?, description = ?, date_echeance = ?, priorite = ?, statut = ? WHERE id_tache = ?%22;%0A        try %7B%0A            PreparedStatement stmt = connection.prepareStatement(sql);%0A            stmt.setString(1, tache.getTitre());%0A            stmt.setString(2, tache.getDescription());%0A            stmt.setDate(3, tache.getDateEcheance() != null ? Date.valueOf(tache.getDateEcheance()) : null);%0A            stmt.setString(4, tache.getPriorite());%0A            stmt.setString(5, tache.getStatut());%0A            stmt.setInt(6, tache.getIdTache());%0A            %0A            int rowsUpdated = stmt.executeUpdate();%0A            return rowsUpdated %3E 0;%0A        %7D catch (SQLException e) %7B%0A            System.out.println(%22Erreur lors de la mise %C3%A0 jour de la t%C3%A2che : %22 + e.getMessage());%0A            return false;%0A        %7D%0A    %7D%0A%0A    /**%0A     * Supprime une t%C3%A2che%0A     * @param idTache L'ID de la t%C3%A2che %C3%A0 supprimer%0A     * @return true si la suppression a r%C3%A9ussi, false sinon%0A     */%0A    public boolean supprimerTache(int idTache) %7B%0A        String sql = %22DELETE FROM tache WHERE id_tache = ?%22;%0A        try %7B%0A            PreparedStatement stmt = connection.prepareStatement(sql);%0A            stmt.setInt(1, idTache);%0A            %0A            int rowsDeleted = stmt.executeUpdate();%0A            return rowsDeleted %3E 0;%0A        %7D catch (SQLException e) %7B%0A            System.out.println(%22Erreur lors de la suppression de la t%C3%A2che : %22 + e.getMessage());%0A            return false;%0A        %7D%0A    %7D%0A%0A    /**%0A     * R%C3%A9cup%C3%A8re une t%C3%A2che par son ID%0A     * @param idTache L'ID de la t%C3%A2che%0A     * @return La t%C3%A2che ou null si non trouv%C3%A9e%0A     */%0A    public Tache getTacheParId(int idTache) %7B%0A        String sql = %22SELECT * FROM tache WHERE id_tache = ?%22;%0A        try %7B%0A            PreparedStatement stmt = connection.prepareStatement(sql);%0A            stmt.setInt(1, idTache);%0A            ResultSet rs = stmt.executeQuery();%0A            %0A            if (rs.next()) %7B%0A                Date dateSQL = rs.getDate(%22date_echeance%22);%0A                LocalDate dateEcheance = dateSQL != null ? dateSQL.toLocalDate() : null;%0A                %0A                return new Tache(%0A                        rs.getInt(%22id_tache%22),%0A                        rs.getString(%22titre%22),%0A                        rs.getString(%22description%22),%0A                        dateEcheance,%0A                        rs.getString(%22priorite%22),%0A                        rs.getString(%22statut%22),%0A                        rs.getInt(%22id_utilisateur%22)%0A                );%0A            %7D%0A        %7D catch (SQLException e) %7B%0A            System.out.println(%22Erreur lors de la r%C3%A9cup%C3%A9ration de la t%C3%A2che : %22 + e.getMessage());%0A        %7D%0A        return null;%0A    %7D%0A    %0A    /**%0A     * Recherche des t%C3%A2ches par mot-cl%C3%A9 pour un utilisateur sp%C3%A9cifique%0A     * @param idUtilisateur L'ID de l'utilisateur%0A     * @param motCle Le mot-cl%C3%A9 %C3%A0 rechercher%0A     * @return Une liste de t%C3%A2ches correspondant %C3%A0 la recherche%0A     */%0A    public ArrayList%3CTache%3E rechercherTaches(int idUtilisateur, String motCle) %7B%0A        ArrayList%3CTache%3E taches = new ArrayList%3C%3E();%0A        String sql = %22SELECT * FROM tache WHERE id_utilisateur = ? AND (titre LIKE ? OR description LIKE ?) ORDER BY date_echeance ASC%22;%0A        %0A        try %7B%0A            PreparedStatement stmt = connection.prepareStatement(sql);%0A            stmt.setInt(1, idUtilisateur);%0A            stmt.setString(2, %22%25%22 + motCle + %22%25%22);%0A            stmt.setString(3, %22%25%22 + motCle + %22%25%22);%0A            ResultSet rs = stmt.executeQuery();%0A            %0A            while (rs.next()) %7B%0A                Date dateSQL = rs.getDate(%22date_echeance%22);%0A                LocalDate dateEcheance = dateSQL != null ? dateSQL.toLocalDate() : null;%0A                %0A                Tache tache = new Tache(%0A                        rs.getInt(%22id_tache%22),%0A                        rs.getString(%22titre%22),%0A                        rs.getString(%22description%22),%0A                        dateEcheance,%0A                        rs.getString(%22priorite%22),%0A                        rs.getString(%22statut%22),%0A                        rs.getInt(%22id_utilisateur%22)%0A                );%0A                taches.add(tache);%0A            %7D%0A        %7D catch (SQLException e) %7B%0A            System.out.println(%22Erreur lors de la recherche des t%C3%A2ches : %22 + e.getMessage());%0A        %7D%0A        return taches;%0A    %7D%0A%7D\n&quot;,&quot;isNew&quot;:true,&quot;isApplied&quot;:true},{&quot;path&quot;:&quot;src/main/java/appli/user/TodoListController.java&quot;,&quot;patch&quot;:&quot;@@ -0,0 +1,10668 @@\n+package appli.user;%0A%0Aimport appli.StartApplication;%0Aimport javafx.collections.FXCollections;%0Aimport javafx.collections.ObservableList;%0Aimport javafx.event.ActionEvent;%0Aimport javafx.fxml.FXML;%0Aimport javafx.fxml.Initializable;%0Aimport javafx.scene.control.*;%0Aimport javafx.scene.control.cell.PropertyValueFactory;%0Aimport javafx.scene.input.MouseEvent;%0Aimport model.Tache;%0Aimport model.Utilisateur;%0Aimport repository.TacheRepository;%0A%0Aimport java.io.IOException;%0Aimport java.net.URL;%0Aimport java.time.LocalDate;%0Aimport java.util.ArrayList;%0Aimport java.util.ResourceBundle;%0A%0Apublic class TodoListController implements Initializable %7B%0A%0A    @FXML%0A    private TableView%3CTache%3E tableauTaches;%0A%0A    @FXML%0A    private TextField titreField;%0A%0A    @FXML%0A    private TextArea descriptionArea;%0A%0A    @FXML%0A    private DatePicker dateEcheancePicker;%0A%0A    @FXML%0A    private ComboBox%3CString%3E prioriteComboBox;%0A%0A    @FXML%0A    private ComboBox%3CString%3E statutComboBox;%0A%0A    @FXML%0A    private Button ajouterBtn;%0A%0A    @FXML%0A    private Button modifierBtn;%0A%0A    @FXML%0A    private Button supprimerBtn;%0A%0A    @FXML%0A    private TextField rechercheField;%0A%0A    @FXML%0A    private Label messageLabel;%0A%0A    @FXML%0A    private Label nomUtilisateurLabel;%0A%0A    private Utilisateur utilisateur;%0A    private TacheRepository tacheRepository;%0A    private ObservableList%3CTache%3E listeTaches;%0A    private Tache tacheSelectionnee;%0A%0A    @Override%0A    public void initialize(URL location, ResourceBundle resources) %7B%0A        tacheRepository = new TacheRepository();%0A%0A        // Configuration des colonnes du tableau%0A        TableColumn%3CTache, String%3E colTitre = new TableColumn%3C%3E(%22Titre%22);%0A        colTitre.setCellValueFactory(new PropertyValueFactory%3C%3E(%22titre%22));%0A        colTitre.setPrefWidth(150);%0A%0A        TableColumn%3CTache, String%3E colPriorite = new TableColumn%3C%3E(%22Priorit%C3%A9%22);%0A        colPriorite.setCellValueFactory(new PropertyValueFactory%3C%3E(%22priorite%22));%0A        colPriorite.setPrefWidth(80);%0A%0A        TableColumn%3CTache, LocalDate%3E colDate = new TableColumn%3C%3E(%22Date limite%22);%0A        colDate.setCellValueFactory(new PropertyValueFactory%3C%3E(%22dateEcheance%22));%0A        colDate.setPrefWidth(100);%0A%0A        TableColumn%3CTache, String%3E colStatut = new TableColumn%3C%3E(%22Statut%22);%0A        colStatut.setCellValueFactory(new PropertyValueFactory%3C%3E(%22statut%22));%0A        colStatut.setPrefWidth(80);%0A%0A        tableauTaches.getColumns().addAll(colTitre, colPriorite, colDate, colStatut);%0A%0A        // Configuration des ComboBox%0A        prioriteComboBox.setItems(FXCollections.observableArrayList(%22Haute%22, %22Moyenne%22, %22Basse%22));%0A        statutComboBox.setItems(FXCollections.observableArrayList(%22%C3%80 faire%22, %22En cours%22, %22Termin%C3%A9e%22));%0A%0A        // Initialisation de la date %C3%A0 aujourd'hui%0A        dateEcheancePicker.setValue(LocalDate.now());%0A%0A        // Effacer le message apr%C3%A8s 3 secondes%0A        messageLabel.textProperty().addListener((observable, oldValue, newValue) -%3E %7B%0A            if (newValue != null &amp;&amp; !newValue.isEmpty()) %7B%0A                new Thread(() -%3E %7B%0A                    try %7B%0A                        Thread.sleep(3000);%0A                        javafx.application.Platform.runLater(() -%3E messageLabel.setText(%22%22));%0A                    %7D catch (InterruptedException e) %7B%0A                        e.printStackTrace();%0A                    %7D%0A                %7D).start();%0A            %7D%0A        %7D);%0A    %7D%0A%0A    /**%0A     * Initialise les donn%C3%A9es de l'utilisateur et charge ses t%C3%A2ches%0A     * @param utilisateur L'utilisateur dont on veut afficher les t%C3%A2ches%0A     */%0A    public void initData(Utilisateur utilisateur) %7B%0A        this.utilisateur = utilisateur;%0A        nomUtilisateurLabel.setText(utilisateur.getNom() + %22 %22 + utilisateur.getPrenom());%0A        chargerTaches();%0A    %7D%0A%0A    /**%0A     * Charge les t%C3%A2ches de l'utilisateur depuis la base de donn%C3%A9es%0A     */%0A    private void chargerTaches() %7B%0A        if (utilisateur != null) %7B%0A            ArrayList%3CTache%3E taches = tacheRepository.getTachesParUtilisateur(utilisateur.getIdUtilisateur());%0A            listeTaches = FXCollections.observableArrayList(taches);%0A            tableauTaches.setItems(listeTaches);%0A        %7D%0A    %7D%0A%0A    /**%0A     * G%C3%A8re le clic sur une t%C3%A2che dans le tableau%0A     */%0A    @FXML%0A    public void cliqueTache(MouseEvent event) %7B%0A        tacheSelectionnee = tableauTaches.getSelectionModel().getSelectedItem();%0A        %0A        if (tacheSelectionnee != null) %7B%0A            // Activer les boutons de modification et suppression%0A            modifierBtn.setDisable(false);%0A            supprimerBtn.setDisable(false);%0A            %0A            // Remplir les champs avec les donn%C3%A9es de la t%C3%A2che s%C3%A9lectionn%C3%A9e%0A            titreField.setText(tacheSelectionnee.getTitre());%0A            descriptionArea.setText(tacheSelectionnee.getDescription());%0A            dateEcheancePicker.setValue(tacheSelectionnee.getDateEcheance());%0A            prioriteComboBox.setValue(tacheSelectionnee.getPriorite());%0A            statutComboBox.setValue(tacheSelectionnee.getStatut());%0A        %7D else %7B%0A            // D%C3%A9sactiver les boutons si aucune t%C3%A2che n'est s%C3%A9lectionn%C3%A9e%0A            modifierBtn.setDisable(true);%0A            supprimerBtn.setDisable(true);%0A            %0A            // Vider les champs%0A            viderChamps();%0A        %7D%0A    %7D%0A%0A    /**%0A     * Ajoute une nouvelle t%C3%A2che%0A     */%0A    @FXML%0A    public void ajouterTache() %7B%0A        if (validerChamps()) %7B%0A            Tache nouvelleTache = new Tache(%0A                    titreField.getText(),%0A                    descriptionArea.getText(),%0A                    dateEcheancePicker.getValue(),%0A                    prioriteComboBox.getValue(),%0A                    statutComboBox.getValue(),%0A                    utilisateur.getIdUtilisateur()%0A            );%0A            %0A            int idTache = tacheRepository.ajouterTache(nouvelleTache);%0A            %0A            if (idTache %3E 0) %7B%0A                nouvelleTache.setIdTache(idTache);%0A                listeTaches.add(nouvelleTache);%0A                messageLabel.setText(%22T%C3%A2che ajout%C3%A9e avec succ%C3%A8s !%22);%0A                messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);%0A                viderChamps();%0A            %7D else %7B%0A                messageLabel.setText(%22Erreur lors de l'ajout de la t%C3%A2che.%22);%0A                messageLabel.setTextFill(javafx.scene.paint.Color.RED);%0A            %7D%0A        %7D%0A    %7D%0A%0A    /**%0A     * Modifie la t%C3%A2che s%C3%A9lectionn%C3%A9e%0A     */%0A    @FXML%0A    public void modifierTache() %7B%0A        if (tacheSelectionnee != null &amp;&amp; validerChamps()) %7B%0A            tacheSelectionnee.setTitre(titreField.getText());%0A            tacheSelectionnee.setDescription(descriptionArea.getText());%0A            tacheSelectionnee.setDateEcheance(dateEcheancePicker.getValue());%0A            tacheSelectionnee.setPriorite(prioriteComboBox.getValue());%0A            tacheSelectionnee.setStatut(statutComboBox.getValue());%0A            %0A            boolean succes = tacheRepository.mettreAJourTache(tacheSelectionnee);%0A            %0A            if (succes) %7B%0A                // Rafra%C3%AEchir le tableau%0A                tableauTaches.refresh();%0A                messageLabel.setText(%22T%C3%A2che modifi%C3%A9e avec succ%C3%A8s !%22);%0A                messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);%0A                viderChamps();%0A                modifierBtn.setDisable(true);%0A                supprimerBtn.setDisable(true);%0A            %7D else %7B%0A                messageLabel.setText(%22Erreur lors de la modification de la t%C3%A2che.%22);%0A                messageLabel.setTextFill(javafx.scene.paint.Color.RED);%0A            %7D%0A        %7D%0A    %7D%0A%0A    /**%0A     * Supprime la t%C3%A2che s%C3%A9lectionn%C3%A9e%0A     */%0A    @FXML%0A    public void supprimerTache() %7B%0A        if (tacheSelectionnee != null) %7B%0A            boolean succes = tacheRepository.supprimerTache(tacheSelectionnee.getIdTache());%0A            %0A            if (succes) %7B%0A                listeTaches.remove(tacheSelectionnee);%0A                messageLabel.setText(%22T%C3%A2che supprim%C3%A9e avec succ%C3%A8s !%22);%0A                messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);%0A                viderChamps();%0A                modifierBtn.setDisable(true);%0A                supprimerBtn.setDisable(true);%0A            %7D else %7B%0A                messageLabel.setText(%22Erreur lors de la suppression de la t%C3%A2che.%22);%0A                messageLabel.setTextFill(javafx.scene.paint.Color.RED);%0A            %7D%0A        %7D%0A    %7D%0A%0A    /**%0A     * Recherche des t%C3%A2ches par mot-cl%C3%A9%0A     */%0A    @FXML%0A    public void rechercher() %7B%0A        String motCle = rechercheField.getText().trim();%0A        %0A        if (motCle.isEmpty()) %7B%0A            tableauTaches.setItems(listeTaches);%0A            return;%0A        %7D%0A        %0A        ArrayList%3CTache%3E tachesRecherchees = tacheRepository.rechercherTaches(utilisateur.getIdUtilisateur(), motCle);%0A        tableauTaches.setItems(FXCollections.observableArrayList(tachesRecherchees));%0A        %0A        if (tachesRecherchees.isEmpty()) %7B%0A            messageLabel.setText(%22Aucune t%C3%A2che trouv%C3%A9e pour cette recherche.%22);%0A            messageLabel.setTextFill(javafx.scene.paint.Color.ORANGE);%0A        %7D else %7B%0A            messageLabel.setText(tachesRecherchees.size() + %22 t%C3%A2che(s) trouv%C3%A9e(s).%22);%0A            messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);%0A        %7D%0A    %7D%0A%0A    /**%0A     * Valide les champs du formulaire%0A     * @return true si tous les champs sont valides, false sinon%0A     */%0A    private boolean validerChamps() %7B%0A        if (titreField.getText().trim().isEmpty()) %7B%0A            messageLabel.setText(%22Le titre est obligatoire.%22);%0A            messageLabel.setTextFill(javafx.scene.paint.Color.RED);%0A            return false;%0A        %7D%0A        %0A        if (prioriteComboBox.getValue() == null) %7B%0A            messageLabel.setText(%22Veuillez s%C3%A9lectionner une priorit%C3%A9.%22);%0A            messageLabel.setTextFill(javafx.scene.paint.Color.RED);%0A            return false;%0A        %7D%0A        %0A        if (statutComboBox.getValue() == null) %7B%0A            messageLabel.setText(%22Veuillez s%C3%A9lectionner un statut.%22);%0A            messageLabel.setTextFill(javafx.scene.paint.Color.RED);%0A            return false;%0A        %7D%0A        %0A        return true;%0A    %7D%0A%0A    /**%0A     * Vide les champs du formulaire%0A     */%0A    private void viderChamps() %7B%0A        titreField.clear();%0A        descriptionArea.clear();%0A        dateEcheancePicker.setValue(LocalDate.now());%0A        prioriteComboBox.getSelectionModel().clearSelection();%0A        statutComboBox.getSelectionModel().clearSelection();%0A        tableauTaches.getSelectionModel().clearSelection();%0A    %7D%0A%0A    /**%0A     * Retourne %C3%A0 la page de gestion des utilisateurs%0A     */%0A    @FXML%0A    public void retour() throws IOException %7B%0A        StartApplication.changeScene(%22accueil/GestionUser%22);%0A    %7D%0A%7D\n&quot;,&quot;isNew&quot;:true,&quot;isApplied&quot;:true},{&quot;path&quot;:&quot;src/main/resources/appli/user/TodoListView.fxml&quot;,&quot;patch&quot;:&quot;@@ -0,0 +1,9416 @@\n+%3C?xml version=%221.0%22 encoding=%22UTF-8%22?%3E%0A%0A%3C?import javafx.geometry.Insets?%3E%0A%3C?import javafx.scene.control.Button?%3E%0A%3C?import javafx.scene.control.ComboBox?%3E%0A%3C?import javafx.scene.control.DatePicker?%3E%0A%3C?import javafx.scene.control.Label?%3E%0A%3C?import javafx.scene.control.TableView?%3E%0A%3C?import javafx.scene.control.TextArea?%3E%0A%3C?import javafx.scene.control.TextField?%3E%0A%3C?import javafx.scene.layout.AnchorPane?%3E%0A%3C?import javafx.scene.layout.HBox?%3E%0A%3C?import javafx.scene.layout.VBox?%3E%0A%3C?import javafx.scene.text.Font?%3E%0A%0A%3CAnchorPane prefHeight=%22600.0%22 prefWidth=%22800.0%22 xmlns=%22http://javafx.com/javafx/23.0.1%22 xmlns:fx=%22http://javafx.com/fxml/1%22 fx:controller=%22appli.user.TodoListController%22%3E%0A   %3Cchildren%3E%0A      %3CVBox alignment=%22TOP_CENTER%22 layoutX=%220.0%22 layoutY=%220.0%22 prefHeight=%22600.0%22 prefWidth=%22800.0%22 spacing=%2210.0%22%3E%0A         %3Cchildren%3E%0A            %3CHBox alignment=%22CENTER_LEFT%22 spacing=%2210.0%22%3E%0A               %3Cchildren%3E%0A                  %3CButton fx:id=%22retourBtn%22 mnemonicParsing=%22false%22 onAction=%22#retour%22 style=%22-fx-background-color: #4a90e2;%22 text=%22Retour%22 textFill=%22WHITE%22%3E%0A                     %3Cfont%3E%0A                        %3CFont name=%22System Bold%22 size=%2212.0%22 /%3E%0A                     %3C/font%3E%0A                  %3C/Button%3E%0A                  %3CLabel alignment=%22CENTER%22 contentDisplay=%22CENTER%22 text=%22Gestion des T%C3%A2ches%22 textAlignment=%22CENTER%22 HBox.hgrow=%22ALWAYS%22%3E%0A                     %3Cfont%3E%0A                        %3CFont name=%22System Bold%22 size=%2224.0%22 /%3E%0A                     %3C/font%3E%0A                     %3CHBox.margin%3E%0A                        %3CInsets left=%22250.0%22 /%3E%0A                     %3C/HBox.margin%3E%0A                  %3C/Label%3E%0A               %3C/children%3E%0A               %3Cpadding%3E%0A                  %3CInsets bottom=%2210.0%22 left=%2210.0%22 right=%2210.0%22 top=%2210.0%22 /%3E%0A               %3C/padding%3E%0A            %3C/HBox%3E%0A            %0A            %3CHBox spacing=%2210.0%22%3E%0A               %3Cchildren%3E%0A                  %3C!-- Panneau de gauche pour la liste des t%C3%A2ches --%3E%0A                  %3CVBox prefHeight=%22500.0%22 prefWidth=%22400.0%22 spacing=%2210.0%22%3E%0A                     %3Cchildren%3E%0A                        %3CHBox alignment=%22CENTER_LEFT%22 spacing=%2210.0%22%3E%0A                           %3Cchildren%3E%0A                              %3CLabel text=%22T%C3%A2ches de l'utilisateur :%22%3E%0A                                 %3Cfont%3E%0A                                    %3CFont name=%22System Bold%22 size=%2214.0%22 /%3E%0A                                 %3C/font%3E%0A                              %3C/Label%3E%0A                              %3CLabel fx:id=%22nomUtilisateurLabel%22 text=%22%5BNom de l'utilisateur%5D%22%3E%0A                                 %3Cfont%3E%0A                                    %3CFont size=%2214.0%22 /%3E%0A                                 %3C/font%3E%0A                              %3C/Label%3E%0A                           %3C/children%3E%0A                        %3C/HBox%3E%0A                        %0A                        %3CHBox alignment=%22CENTER_LEFT%22 spacing=%2210.0%22%3E%0A                           %3Cchildren%3E%0A                              %3CTextField fx:id=%22rechercheField%22 prefHeight=%2230.0%22 prefWidth=%22250.0%22 promptText=%22Rechercher une t%C3%A2che...%22%3E%0A                                 %3Cfont%3E%0A                                    %3CFont size=%2212.0%22 /%3E%0A                                 %3C/font%3E%0A                              %3C/TextField%3E%0A                              %3CButton fx:id=%22rechercheBtn%22 mnemonicParsing=%22false%22 onAction=%22#rechercher%22 style=%22-fx-background-color: #4a90e2;%22 text=%22Rechercher%22 textFill=%22WHITE%22 /%3E%0A                           %3C/children%3E%0A                        %3C/HBox%3E%0A                        %0A                        %3CTableView fx:id=%22tableauTaches%22 onMouseClicked=%22#cliqueTache%22 prefHeight=%22400.0%22 prefWidth=%22400.0%22 style=%22-fx-border-color: #e0e0e0; -fx-border-width: 1px;%22 /%3E%0A                     %3C/children%3E%0A                  %3C/VBox%3E%0A                  %0A                  %3C!-- Panneau de droite pour les d%C3%A9tails et l'ajout de t%C3%A2ches --%3E%0A                  %3CVBox prefHeight=%22500.0%22 prefWidth=%22380.0%22 spacing=%2215.0%22 style=%22-fx-background-color: #f8f9fa; -fx-border-color: #e0e0e0; -fx-border-width: 1px; -fx-border-radius: 5px;%22%3E%0A                     %3Cchildren%3E%0A                        %3CLabel text=%22D%C3%A9tails de la t%C3%A2che%22 textAlignment=%22CENTER%22%3E%0A                           %3Cfont%3E%0A                              %3CFont name=%22System Bold%22 size=%2216.0%22 /%3E%0A                           %3C/font%3E%0A                        %3C/Label%3E%0A                        %0A                        %3CHBox alignment=%22CENTER_LEFT%22 spacing=%2210.0%22%3E%0A                           %3Cchildren%3E%0A                              %3CLabel prefWidth=%2280.0%22 text=%22Titre :%22%3E%0A                                 %3Cfont%3E%0A                                    %3CFont name=%22System Bold%22 size=%2212.0%22 /%3E%0A                                 %3C/font%3E%0A                              %3C/Label%3E%0A                              %3CTextField fx:id=%22titreField%22 prefHeight=%2225.0%22 prefWidth=%22250.0%22 /%3E%0A                           %3C/children%3E%0A                        %3C/HBox%3E%0A                        %0A                        %3CHBox alignment=%22CENTER_LEFT%22 spacing=%2210.0%22%3E%0A                           %3Cchildren%3E%0A                              %3CLabel prefWidth=%2280.0%22 text=%22Description :%22%3E%0A                                 %3Cfont%3E%0A                                    %3CFont name=%22System Bold%22 size=%2212.0%22 /%3E%0A                                 %3C/font%3E%0A                              %3C/Label%3E%0A                              %3CTextArea fx:id=%22descriptionArea%22 prefHeight=%22100.0%22 prefWidth=%22250.0%22 wrapText=%22true%22 /%3E%0A                           %3C/children%3E%0A                        %3C/HBox%3E%0A                        %0A                        %3CHBox alignment=%22CENTER_LEFT%22 spacing=%2210.0%22%3E%0A                           %3Cchildren%3E%0A                              %3CLabel prefWidth=%2280.0%22 text=%22Date limite :%22%3E%0A                                 %3Cfont%3E%0A                                    %3CFont name=%22System Bold%22 size=%2212.0%22 /%3E%0A                                 %3C/font%3E%0A                              %3C/Label%3E%0A                              %3CDatePicker fx:id=%22dateEcheancePicker%22 prefHeight=%2225.0%22 prefWidth=%22250.0%22 /%3E%0A                           %3C/children%3E%0A                        %3C/HBox%3E%0A                        %0A                        %3CHBox alignment=%22CENTER_LEFT%22 spacing=%2210.0%22%3E%0A                           %3Cchildren%3E%0A                              %3CLabel prefWidth=%2280.0%22 text=%22Priorit%C3%A9 :%22%3E%0A                                 %3Cfont%3E%0A                                    %3CFont name=%22System Bold%22 size=%2212.0%22 /%3E%0A                                 %3C/font%3E%0A                              %3C/Label%3E%0A                              %3CComboBox fx:id=%22prioriteComboBox%22 prefHeight=%2225.0%22 prefWidth=%22250.0%22 /%3E%0A                           %3C/children%3E%0A                        %3C/HBox%3E%0A                        %0A                        %3CHBox alignment=%22CENTER_LEFT%22 spacing=%2210.0%22%3E%0A                           %3Cchildren%3E%0A                              %3CLabel prefWidth=%2280.0%22 text=%22Statut :%22%3E%0A                                 %3Cfont%3E%0A                                    %3CFont name=%22System Bold%22 size=%2212.0%22 /%3E%0A                                 %3C/font%3E%0A                              %3C/Label%3E%0A                              %3CComboBox fx:id=%22statutComboBox%22 prefHeight=%2225.0%22 prefWidth=%22250.0%22 /%3E%0A                           %3C/children%3E%0A                        %3C/HBox%3E%0A                        %0A                        %3CHBox alignment=%22CENTER%22 spacing=%2220.0%22%3E%0A                           %3Cchildren%3E%0A                              %3CButton fx:id=%22ajouterBtn%22 mnemonicParsing=%22false%22 onAction=%22#ajouterTache%22 style=%22-fx-background-color: #2ecc71;%22 text=%22Ajouter%22 textFill=%22WHITE%22%3E%0A                                 %3Cfont%3E%0A                                    %3CFont name=%22System Bold%22 size=%2212.0%22 /%3E%0A                                 %3C/font%3E%0A                              %3C/Button%3E%0A                              %3CButton fx:id=%22modifierBtn%22 disable=%22true%22 mnemonicParsing=%22false%22 onAction=%22#modifierTache%22 style=%22-fx-background-color: #f39c12;%22 text=%22Modifier%22 textFill=%22WHITE%22%3E%0A                                 %3Cfont%3E%0A                                    %3CFont name=%22System Bold%22 size=%2212.0%22 /%3E%0A                                 %3C/font%3E%0A                              %3C/Button%3E%0A                              %3CButton fx:id=%22supprimerBtn%22 disable=%22true%22 mnemonicParsing=%22false%22 onAction=%22#supprimerTache%22 style=%22-fx-background-color: #e74c3c;%22 text=%22Supprimer%22 textFill=%22WHITE%22%3E%0A                                 %3Cfont%3E%0A                                    %3CFont name=%22System Bold%22 size=%2212.0%22 /%3E%0A                                 %3C/font%3E%0A                              %3C/Button%3E%0A                           %3C/children%3E%0A                           %3CVBox.margin%3E%0A                              %3CInsets top=%2210.0%22 /%3E%0A                           %3C/VBox.margin%3E%0A                        %3C/HBox%3E%0A                        %0A                        %3CLabel fx:id=%22messageLabel%22 alignment=%22CENTER%22 textFill=%22#2ecc71%22%3E%0A                           %3Cfont%3E%0A                              %3CFont size=%2212.0%22 /%3E%0A                           %3C/font%3E%0A                        %3C/Label%3E%0A                     %3C/children%3E%0A                     %3Cpadding%3E%0A                        %3CInsets bottom=%2210.0%22 left=%2210.0%22 right=%2210.0%22 top=%2210.0%22 /%3E%0A                     %3C/padding%3E%0A                  %3C/VBox%3E%0A               %3C/children%3E%0A               %3Cpadding%3E%0A                  %3CInsets left=%2210.0%22 right=%2210.0%22 /%3E%0A               %3C/padding%3E%0A            %3C/HBox%3E%0A         %3C/children%3E%0A      %3C/VBox%3E%0A   %3C/children%3E%0A%3C/AnchorPane%3E\n&quot;,&quot;isNew&quot;:true,&quot;isApplied&quot;:true},{&quot;path&quot;:&quot;src/main/resources/sql/tache.sql&quot;,&quot;patch&quot;:&quot;@@ -0,0 +1,1128 @@\n+-- Cr%C3%A9ation de la table tache%0ACREATE TABLE IF NOT EXISTS tache (%0A    id_tache INT AUTO_INCREMENT PRIMARY KEY,%0A    titre VARCHAR(100) NOT NULL,%0A    description TEXT,%0A    date_echeance DATE,%0A    priorite VARCHAR(20) NOT NULL,%0A    statut VARCHAR(20) NOT NULL,%0A    id_utilisateur INT NOT NULL,%0A    FOREIGN KEY (id_utilisateur) REFERENCES utilisateur(id_utilisateur) ON DELETE CASCADE%0A);%0A%0A-- Insertion de quelques t%C3%A2ches de test%0AINSERT INTO tache (titre, description, date_echeance, priorite, statut, id_utilisateur)%0AVALUES %0A    ('Pr%C3%A9parer la pr%C3%A9sentation', 'Pr%C3%A9parer la pr%C3%A9sentation pour la r%C3%A9union de lundi', '2023-12-15', 'Haute', '%C3%80 faire', 1),%0A    ('Envoyer les emails', 'Envoyer les emails de confirmation aux clients', '2023-12-10', 'Moyenne', 'En cours', 1),%0A    ('Mettre %C3%A0 jour la documentation', 'Mettre %C3%A0 jour la documentation du projet', '2023-12-20', 'Basse', '%C3%80 faire', 2),%0A    ('Corriger les bugs', 'Corriger les bugs signal%C3%A9s par les utilisateurs', '2023-12-05', 'Haute', 'Termin%C3%A9e', 2),%0A    ('Planifier la r%C3%A9union', 'Planifier la r%C3%A9union d%5C'%C3%A9quipe pour la semaine prochaine', '2023-12-08', 'Moyenne', 'En cours', 3);\n&quot;,&quot;isNew&quot;:true,&quot;isApplied&quot;:true},{&quot;path&quot;:&quot;src/main/resources/appli/accueil/GestionUserView.fxml&quot;,&quot;patch&quot;:&quot;@@ -33,16 +33,50 @@\n F-8%22?%3E%0A%0A\n+%3C?import javafx.geometry.Insets?%3E%0A\n %3C?import\n@@ -140,59 +140,245 @@\n rol.\n-TableView?%3E%0A%3C?import javafx.scene.layout.AnchorPane\n+Label?%3E%0A%3C?import javafx.scene.control.TableView?%3E%0A%3C?import javafx.scene.control.TextField?%3E%0A%3C?import javafx.scene.layout.AnchorPane?%3E%0A%3C?import javafx.scene.layout.HBox?%3E%0A%3C?import javafx.scene.layout.VBox?%3E%0A%3C?import javafx.scene.text.Font\n ?%3E%0A%0A\n@@ -401,17 +401,17 @@\n Height=%22\n-4\n+6\n 00.0%22 pr\n@@ -419,17 +419,17 @@\n fWidth=%22\n-6\n+8\n 00.0%22 xm\n@@ -580,66 +580,2301 @@\n    %3C\n-TableView fx:id=%22tableauUser%22 layoutX=%2242.0%22 layoutY=%2239.0\n+VBox alignment=%22TOP_CENTER%22 layoutX=%220.0%22 layoutY=%220.0%22 prefHeight=%22600.0%22 prefWidth=%22800.0%22 spacing=%2210.0%22%3E%0A         %3Cchildren%3E%0A            %3CHBox alignment=%22CENTER_LEFT%22 spacing=%2210.0%22%3E%0A               %3Cchildren%3E%0A                  %3CButton fx:id=%22retour%22 mnemonicParsing=%22false%22 onAction=%22#retour%22 style=%22-fx-background-color: #4a90e2;%22 text=%22Retour%22 textFill=%22WHITE%22%3E%0A                     %3Cfont%3E%0A                        %3CFont name=%22System Bold%22 size=%2212.0%22 /%3E%0A                     %3C/font%3E%0A                  %3C/Button%3E%0A                  %3CLabel alignment=%22CENTER%22 contentDisplay=%22CENTER%22 text=%22Gestion des Utilisateurs%22 textAlignment=%22CENTER%22 HBox.hgrow=%22ALWAYS%22%3E%0A                     %3Cfont%3E%0A                        %3CFont name=%22System Bold%22 size=%2224.0%22 /%3E%0A                     %3C/font%3E%0A                     %3CHBox.margin%3E%0A                        %3CInsets left=%22220.0%22 /%3E%0A                     %3C/HBox.margin%3E%0A                  %3C/Label%3E%0A               %3C/children%3E%0A               %3Cpadding%3E%0A                  %3CInsets bottom=%2210.0%22 left=%2210.0%22 right=%2210.0%22 top=%2210.0%22 /%3E%0A               %3C/padding%3E%0A            %3C/HBox%3E%0A            %0A            %3CHBox alignment=%22CENTER%22 spacing=%2210.0%22%3E%0A               %3Cchildren%3E%0A                  %3CTextField fx:id=%22rechercheField%22 prefHeight=%2230.0%22 prefWidth=%22300.0%22 promptText=%22Rechercher un utilisateur...%22%3E%0A                     %3Cfont%3E%0A                        %3CFont size=%2214.0%22 /%3E%0A                     %3C/font%3E%0A                  %3C/TextField%3E%0A                  %3CButton fx:id=%22rechercheBtn%22 mnemonicParsing=%22false%22 onAction=%22#rechercher%22 style=%22-fx-background-color: #4a90e2;%22 text=%22Rechercher%22 textFill=%22WHITE%22%3E%0A                     %3Cfont%3E%0A                        %3CFont size=%2214.0%22 /%3E%0A                     %3C/font%3E%0A                  %3C/Button%3E%0A                  %3CButton fx:id=%22resetBtn%22 mnemonicParsing=%22false%22 onAction=%22#resetRecherche%22 style=%22-fx-background-color: #7f8c8d;%22 text=%22R%C3%A9initialiser%22 textFill=%22WHITE%22%3E%0A                     %3Cfont%3E%0A                        %3CFont size=%2214.0%22 /%3E%0A                     %3C/font%3E%0A                  %3C/Button%3E%0A               %3C/children%3E%0A               %3Cpadding%3E%0A                  %3CInsets bottom=%2210.0%22 left=%2210.0%22 right=%2210.0%22 top=%2210.0%22 /%3E%0A               %3C/padding%3E%0A            %3C/HBox%3E%0A            %0A            %3CTableView fx:id=%22tableauUser\n %22 on\n@@ -2919,11 +2919,11 @@\n ht=%22\n-323\n+400\n .0%22 \n@@ -2937,263 +2937,2025 @@\n th=%22\n-517.0%22 /%3E%0A      %3CButton fx:id=%22userSupp%22 disable=%22true%22 layoutX=%22265.0%22 layoutY=%22366.0%22 mnemonicParsing=%22false%22 onAction=%22#supprimer%22 text=%22supprimer%22 /%3E%0A      %3CButton fx:id=%22retour%22 layoutY=%222.0%22 mnemonicParsing=%22false%22 onAction=%22#retour%22 text=%22retour%22 /\n+780.0%22 style=%22-fx-border-color: #e0e0e0; -fx-border-width: 1px;%22%3E%0A               %3CVBox.margin%3E%0A                  %3CInsets left=%2210.0%22 right=%2210.0%22 /%3E%0A               %3C/VBox.margin%3E%0A            %3C/TableView%3E%0A            %0A            %3CHBox alignment=%22CENTER%22 spacing=%2220.0%22%3E%0A               %3Cchildren%3E%0A                  %3CButton fx:id=%22ajouterBtn%22 mnemonicParsing=%22false%22 onAction=%22#ajouterUtilisateur%22 style=%22-fx-background-color: #2ecc71;%22 text=%22Ajouter%22 textFill=%22WHITE%22%3E%0A                     %3Cfont%3E%0A                        %3CFont name=%22System Bold%22 size=%2214.0%22 /%3E%0A                     %3C/font%3E%0A                  %3C/Button%3E%0A                  %3CButton fx:id=%22modifierBtn%22 disable=%22true%22 mnemonicParsing=%22false%22 onAction=%22#modifierUtilisateur%22 style=%22-fx-background-color: #f39c12;%22 text=%22Modifier%22 textFill=%22WHITE%22%3E%0A                     %3Cfont%3E%0A                        %3CFont name=%22System Bold%22 size=%2214.0%22 /%3E%0A                     %3C/font%3E%0A                  %3C/Button%3E%0A                  %3CButton fx:id=%22tachesBtn%22 disable=%22true%22 mnemonicParsing=%22false%22 onAction=%22#gererTaches%22 style=%22-fx-background-color: #3498db;%22 text=%22T%C3%A2ches%22 textFill=%22WHITE%22%3E%0A                     %3Cfont%3E%0A                        %3CFont name=%22System Bold%22 size=%2214.0%22 /%3E%0A                     %3C/font%3E%0A                  %3C/Button%3E%0A                  %3CButton fx:id=%22userSupp%22 disable=%22true%22 mnemonicParsing=%22false%22 onAction=%22#supprimer%22 style=%22-fx-background-color: #e74c3c;%22 text=%22Supprimer%22 textFill=%22WHITE%22%3E%0A                     %3Cfont%3E%0A                        %3CFont name=%22System Bold%22 size=%2214.0%22 /%3E%0A                     %3C/font%3E%0A                  %3C/Button%3E%0A               %3C/children%3E%0A               %3Cpadding%3E%0A                  %3CInsets bottom=%2210.0%22 left=%2210.0%22 right=%2210.0%22 top=%2210.0%22 /%3E%0A               %3C/padding%3E%0A            %3C/HBox%3E%0A            %0A            %3CLabel fx:id=%22messageLabel%22 alignment=%22CENTER%22 textFill=%22#2ecc71%22%3E%0A               %3Cfont%3E%0A                  %3CFont size=%2214.0%22 /%3E%0A               %3C/font%3E%0A            %3C/Label%3E%0A         %3C/children%3E%0A      %3C/VBox\n %3E%0A  \n&quot;,&quot;isNew&quot;:false,&quot;isApplied&quot;:true},{&quot;path&quot;:&quot;src/main/java/model/Tache.java&quot;,&quot;patch&quot;:&quot;@@ -0,0 +1,2675 @@\n+package model;%0A%0Aimport java.time.LocalDate;%0A%0Apublic class Tache %7B%0A    private int idTache;%0A    private String titre;%0A    private String description;%0A    private LocalDate dateEcheance;%0A    private String priorite;%0A    private String statut;%0A    private int idUtilisateur;%0A%0A    // Constructeur complet%0A    public Tache(int idTache, String titre, String description, LocalDate dateEcheance, String priorite, String statut, int idUtilisateur) %7B%0A        this.idTache = idTache;%0A        this.titre = titre;%0A        this.description = description;%0A        this.dateEcheance = dateEcheance;%0A        this.priorite = priorite;%0A        this.statut = statut;%0A        this.idUtilisateur = idUtilisateur;%0A    %7D%0A%0A    // Constructeur sans ID (pour la cr%C3%A9ation)%0A    public Tache(String titre, String description, LocalDate dateEcheance, String priorite, String statut, int idUtilisateur) %7B%0A        this.titre = titre;%0A        this.description = description;%0A        this.dateEcheance = dateEcheance;%0A        this.priorite = priorite;%0A        this.statut = statut;%0A        this.idUtilisateur = idUtilisateur;%0A    %7D%0A%0A    // Getters et Setters%0A    public int getIdTache() %7B%0A        return idTache;%0A    %7D%0A%0A    public void setIdTache(int idTache) %7B%0A        this.idTache = idTache;%0A    %7D%0A%0A    public String getTitre() %7B%0A        return titre;%0A    %7D%0A%0A    public void setTitre(String titre) %7B%0A        this.titre = titre;%0A    %7D%0A%0A    public String getDescription() %7B%0A        return description;%0A    %7D%0A%0A    public void setDescription(String description) %7B%0A        this.description = description;%0A    %7D%0A%0A    public LocalDate getDateEcheance() %7B%0A        return dateEcheance;%0A    %7D%0A%0A    public void setDateEcheance(LocalDate dateEcheance) %7B%0A        this.dateEcheance = dateEcheance;%0A    %7D%0A%0A    public String getPriorite() %7B%0A        return priorite;%0A    %7D%0A%0A    public void setPriorite(String priorite) %7B%0A        this.priorite = priorite;%0A    %7D%0A%0A    public String getStatut() %7B%0A        return statut;%0A    %7D%0A%0A    public void setStatut(String statut) %7B%0A        this.statut = statut;%0A    %7D%0A%0A    public int getIdUtilisateur() %7B%0A        return idUtilisateur;%0A    %7D%0A%0A    public void setIdUtilisateur(int idUtilisateur) %7B%0A        this.idUtilisateur = idUtilisateur;%0A    %7D%0A%0A    @Override%0A    public String toString() %7B%0A        return %22Tache%7B%22 +%0A                %22idTache=%22 + idTache +%0A                %22, titre='%22 + titre + '%5C'' +%0A                %22, description='%22 + description + '%5C'' +%0A                %22, dateEcheance=%22 + dateEcheance +%0A                %22, priorite='%22 + priorite + '%5C'' +%0A                %22, statut='%22 + statut + '%5C'' +%0A                %22, idUtilisateur=%22 + idUtilisateur +%0A                '%7D';%0A    %7D%0A%7D\n&quot;,&quot;isNew&quot;:true,&quot;isApplied&quot;:true},{&quot;path&quot;:&quot;src/main/java/appli/accueil/GestionUserController.java&quot;,&quot;patch&quot;:&quot;@@ -92,24 +92,148 @@\n ontroller;%0D%0A\n+import appli.user.TodoListController;%0D%0Aimport javafx.collections.FXCollections;%0D%0Aimport javafx.collections.ObservableList;%0D%0A\n import javaf\n@@ -470,16 +470,56 @@\n eView;%0D%0A\n+import javafx.scene.control.TextField;%0D%0A\n import j\n@@ -759,24 +759,53 @@\n a.net.URL;%0D%0A\n+import java.util.ArrayList;%0D%0A\n import java.\n@@ -825,16 +825,53 @@\n Bundle;%0D\n+%0Aimport java.util.stream.Collectors;%0D\n %0A%0D%0Apubli\n@@ -1035,1960 +1035,7612 @@\n p;%0D%0A\n-%0D%0A    @Override%0D%0A    public void initialize(URL location, ResourceBundle resources) %7B%0D%0A        String %5B%5D%5B%5D colonnes = %7B%0D%0A                %7B %22Id Utilisateur%22,%22idUtilisateur%22 %7D,%0D%0A                %7B %22Nom%22,%22nom%22 %7D,%0D%0A                %7B %22Pr%C3%A9nom%22,%22prenom%22 %7D,%0D%0A                %7B %22Email%22,%22email%22 %7D,%0D%0A                %7B %22R%C3%B4le%22,%22role%22 %7D,%0D%0A        %7D;%0D%0A%0D%0A        for ( int i = 0 ; i %3C colonnes.length ; i ++ )%7B%0D%0A            TableColumn%3CUtilisateur,String%3E maCol = new TableColumn%3C%3E(colonnes%5Bi%5D%5B0%5D);%0D%0A            maCol.setCellValueFactory(%0D%0A                    new PropertyValueFactory%3CUtilisateur,String%3E(colonnes%5Bi%5D%5B1%5D));%0D%0A            tableauUser.getColumns().add(maCol);%0D%0A        %7D%0D%0A        UtilisateurRepository us = new UtilisateurRepository();%0D%0A        tableauUser.getItems().addAll(us.getAllUtilisateurs());%0D%0A%0D%0A    %7D%0D%0A    @FXML%0D%0A    public void cliqueTableau(MouseEvent mouseEvent) throws IOException %7B%0D%0A        Utilisateur selection = tableauUser.getSelectionModel().getSelectedItem();%0D%0A        if (selection != null) %7B%0D%0A            userSupp.setDisable(false);%0D%0A        %7Delse%7B%0D%0A            userSupp.setDisable(true);%0D%0A        %7D%0D%0A        if (mouseEvent.getClickCount() == 2) %7B%0D%0A            if (selection != null) %7B%0D%0A                StartApplication.changeScene(%22user/modificationUser%22);%0D%0A                ModificationUserController controller = (ModificationUserController)%0D%0A                        StartApplication. getControllerFromStage();%0D%0A                controller.initData(selection);%0D%0A            %7D%0D%0A        %7D%0D%0A    %7D%0D%0A%0D%0A    @FXML%0D%0A    public void supprimer(ActionEvent actionEvent) %7B%0D%0A        Utilisateur utilisateurSelectionne = tableauUser.getSelectionModel().getSelectedItem();%0D%0A%0D%0A        if (utilisateurSelectionne != null) %7B%0D%0A            UtilisateurRepository rep = new UtilisateurRepository();%0D%0A            rep.supprimerUtilisateurParEmail(utilisateurSelectionne.getEmail());%0D%0A%0D%0A        %7D%0D%0A        tableauUser.getItems().remove(utilisateurSelectionne\n+    %0D%0A    @FXML%0D%0A    private Button modifierBtn;%0D%0A    %0D%0A    @FXML%0D%0A    private TextField rechercheField;%0D%0A    %0D%0A    @FXML%0D%0A    private Label messageLabel;%0D%0A    %0D%0A    @FXML%0D%0A    private Button tachesBtn;%0D%0A    %0D%0A    private ObservableList%3CUtilisateur%3E listeUtilisateurs;%0D%0A    private UtilisateurRepository utilisateurRepository;%0D%0A%0D%0A    @Override%0D%0A    public void initialize(URL location, ResourceBundle resources) %7B%0D%0A        utilisateurRepository = new UtilisateurRepository();%0D%0A        %0D%0A        // Configuration des colonnes du tableau%0D%0A        String%5B%5D%5B%5D colonnes = %7B%0D%0A                %7B%22Id Utilisateur%22, %22idUtilisateur%22%7D,%0D%0A                %7B%22Nom%22, %22nom%22%7D,%0D%0A                %7B%22Pr%C3%A9nom%22, %22prenom%22%7D,%0D%0A                %7B%22Email%22, %22email%22%7D,%0D%0A                %7B%22R%C3%B4le%22, %22role%22%7D,%0D%0A        %7D;%0D%0A%0D%0A        for (int i = 0; i %3C colonnes.length; i++) %7B%0D%0A            TableColumn%3CUtilisateur, String%3E maCol = new TableColumn%3C%3E(colonnes%5Bi%5D%5B0%5D);%0D%0A            maCol.setCellValueFactory(%0D%0A                    new PropertyValueFactory%3CUtilisateur, String%3E(colonnes%5Bi%5D%5B1%5D));%0D%0A            maCol.setPrefWidth(150); // D%C3%A9finir une largeur pour chaque colonne%0D%0A            tableauUser.getColumns().add(maCol);%0D%0A        %7D%0D%0A        %0D%0A        // Chargement des utilisateurs%0D%0A        chargerUtilisateurs();%0D%0A        %0D%0A        // Effacer le message apr%C3%A8s 3 secondes%0D%0A        messageLabel.textProperty().addListener((observable, oldValue, newValue) -%3E %7B%0D%0A            if (newValue != null &amp;&amp; !newValue.isEmpty()) %7B%0D%0A                new Thread(() -%3E %7B%0D%0A                    try %7B%0D%0A                        Thread.sleep(3000);%0D%0A                        javafx.application.Platform.runLater(() -%3E messageLabel.setText(%22%22));%0D%0A                    %7D catch (InterruptedException e) %7B%0D%0A                        e.printStackTrace();%0D%0A                    %7D%0D%0A                %7D).start();%0D%0A            %7D%0D%0A        %7D);%0D%0A    %7D%0D%0A    %0D%0A    /**%0D%0A     * Charge tous les utilisateurs depuis la base de donn%C3%A9es%0D%0A     */%0D%0A    private void chargerUtilisateurs() %7B%0D%0A        ArrayList%3CUtilisateur%3E utilisateurs = utilisateurRepository.getAllUtilisateurs();%0D%0A        listeUtilisateurs = FXCollections.observableArrayList(utilisateurs);%0D%0A        tableauUser.setItems(listeUtilisateurs);%0D%0A    %7D%0D%0A    %0D%0A    @FXML%0D%0A    public void cliqueTableau(MouseEvent mouseEvent) throws IOException %7B%0D%0A        Utilisateur selection = tableauUser.getSelectionModel().getSelectedItem();%0D%0A        if (selection != null) %7B%0D%0A            userSupp.setDisable(false);%0D%0A            modifierBtn.setDisable(false);%0D%0A            tachesBtn.setDisable(false);%0D%0A        %7D else %7B%0D%0A            userSupp.setDisable(true);%0D%0A            modifierBtn.setDisable(true);%0D%0A            tachesBtn.setDisable(true);%0D%0A        %7D%0D%0A        %0D%0A        // Double-clic pour modifier un utilisateur%0D%0A        if (mouseEvent.getClickCount() == 2) %7B%0D%0A            if (selection != null) %7B%0D%0A                modifierUtilisateur();%0D%0A            %7D%0D%0A        %7D%0D%0A    %7D%0D%0A%0D%0A    @FXML%0D%0A    public void supprimer(ActionEvent actionEvent) %7B%0D%0A        Utilisateur utilisateurSelectionne = tableauUser.getSelectionModel().getSelectedItem();%0D%0A%0D%0A        if (utilisateurSelectionne != null) %7B%0D%0A            boolean supprime = utilisateurRepository.supprimerUtilisateurParEmail(utilisateurSelectionne.getEmail());%0D%0A            %0D%0A            if (supprime) %7B%0D%0A                tableauUser.getItems().remove(utilisateurSelectionne);%0D%0A                messageLabel.setText(%22Utilisateur supprim%C3%A9 avec succ%C3%A8s !%22);%0D%0A                messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);%0D%0A            %7D else %7B%0D%0A                messageLabel.setText(%22Erreur lors de la suppression de l'utilisateur.%22);%0D%0A                messageLabel.setTextFill(javafx.scene.paint.Color.RED);%0D%0A            %7D%0D%0A            %0D%0A            // R%C3%A9initialiser les boutons%0D%0A            userSupp.setDisable(true);%0D%0A            modifierBtn.setDisable(true);%0D%0A            tachesBtn.setDisable(true);%0D%0A        %7D%0D%0A    %7D%0D%0A    %0D%0A    @FXML%0D%0A    public void gererTaches() %7B%0D%0A        Utilisateur utilisateurSelectionne = tableauUser.getSelectionModel().getSelectedItem();%0D%0A        %0D%0A        if (utilisateurSelectionne != null) %7B%0D%0A            try %7B%0D%0A                StartApplication.changeScene(%22user/TodoList%22);%0D%0A                TodoListController controller = (TodoListController)%0D%0A                        StartApplication.getControllerFromStage();%0D%0A                controller.initData(utilisateurSelectionne);%0D%0A                messageLabel.setText(%22Chargement des t%C3%A2ches de l'utilisateur...%22);%0D%0A                messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);%0D%0A            %7D catch (IOException e) %7B%0D%0A                messageLabel.setText(%22Erreur lors de l'ouverture de la page des t%C3%A2ches.%22);%0D%0A                messageLabel.setTextFill(javafx.scene.paint.Color.RED);%0D%0A                e.printStackTrace();%0D%0A            %7D%0D%0A        %7D%0D%0A    %7D%0D%0A    %0D%0A    @FXML%0D%0A    public void modifierUtilisateur() %7B%0D%0A        Utilisateur utilisateurSelectionne = tableauUser.getSelectionModel().getSelectedItem();%0D%0A        %0D%0A        if (utilisateurSelectionne != null) %7B%0D%0A            try %7B%0D%0A                StartApplication.changeScene(%22user/modificationUser%22);%0D%0A                ModificationUserController controller = (ModificationUserController)%0D%0A                        StartApplication.getControllerFromStage();%0D%0A                controller.initData(utilisateurSelectionne);%0D%0A            %7D catch (IOException e) %7B%0D%0A                messageLabel.setText(%22Erreur lors de l'ouverture de la page de modification.%22);%0D%0A                messageLabel.setTextFill(javafx.scene.paint.Color.RED);%0D%0A                e.printStackTrace();%0D%0A            %7D%0D%0A        %7D%0D%0A    %7D%0D%0A    %0D%0A    @FXML%0D%0A    public void ajouterUtilisateur() %7B%0D%0A        try %7B%0D%0A            StartApplication.changeScene(%22accueil/Inscription%22);%0D%0A        %7D catch (IOException e) %7B%0D%0A            messageLabel.setText(%22Erreur lors de l'ouverture de la page d'inscription.%22);%0D%0A            messageLabel.setTextFill(javafx.scene.paint.Color.RED);%0D%0A            e.printStackTrace();%0D%0A        %7D%0D%0A    %7D%0D%0A    %0D%0A    @FXML%0D%0A    public void rechercher() %7B%0D%0A        String recherche = rechercheField.getText().toLowerCase().trim();%0D%0A        %0D%0A        if (recherche.isEmpty()) %7B%0D%0A            tableauUser.setItems(listeUtilisateurs);%0D%0A            return;%0D%0A        %7D%0D%0A        %0D%0A        // Filtrer les utilisateurs selon le texte de recherche%0D%0A        ObservableList%3CUtilisateur%3E utilisateursFiltres = listeUtilisateurs.stream()%0D%0A                .filter(u -%3E u.getNom().toLowerCase().contains(recherche) %7C%7C%0D%0A                        u.getPrenom().toLowerCase().contains(recherche) %7C%7C%0D%0A                        u.getEmail().toLowerCase().contains(recherche) %7C%7C%0D%0A                        (u.getRole() != null &amp;&amp; u.getRole().toLowerCase().contains(recherche)))%0D%0A                .collect(Collectors.toCollection(FXCollections::observableArrayList));%0D%0A        %0D%0A        tableauUser.setItems(utilisateursFiltres);%0D%0A        %0D%0A        if (utilisateursFiltres.isEmpty()) %7B%0D%0A            messageLabel.setText(%22Aucun utilisateur trouv%C3%A9 pour cette recherche.%22);%0D%0A            messageLabel.setTextFill(javafx.scene.paint.Color.ORANGE);%0D%0A        %7D else %7B%0D%0A            messageLabel.setText(utilisateursFiltres.size() + %22 utilisateur(s) trouv%C3%A9(s).%22);%0D%0A            messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);%0D%0A        %7D%0D%0A    %7D%0D%0A    %0D%0A    @FXML%0D%0A    public void resetRecherche() %7B%0D%0A        rechercheField.clear();%0D%0A        tableauUser.setItems(listeUtilisateurs);%0D%0A        messageLabel.setText(%22Recherche r%C3%A9initialis%C3%A9e.%22);%0D%0A        messageLabel.setTextFill(javafx.scene.paint.Color.GREEN\n );%0D%0A\n&quot;,&quot;isNew&quot;:false,&quot;isApplied&quot;:true}]}],&quot;context&quot;:{&quot;author&quot;:&quot;Coding Agent&quot;,&quot;operationId&quot;:&quot;763aed48-4f86-4927-93d1-c4b4f5f9ab99&quot;},&quot;createdAt&quot;:1746738799035,&quot;isInternal&quot;:false},{&quot;id&quot;:&quot;971123da-7f57-4374-b89c-8d1fd256ada9&quot;,&quot;role&quot;:&quot;user&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;peux tu supprimer tout ce que tu as modifier parce que ça se voit que ce n'est pas moi qui l'ai fait&quot;}],&quot;context&quot;:{&quot;currentFile&quot;:{&quot;path&quot;:&quot;src\\main\\java\\appli\\accueil\\GestionUserController.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\appli\\accueil\\GestionUserController.java&quot;,&quot;sources&quot;:[&quot;opened_tab&quot;],&quot;content&quot;:&quot;package appli.accueil;\r\nimport appli.StartApplication;\r\nimport appli.user.ModificationUserController;\r\nimport appli.user.TodoListController;\r\nimport javafx.collections.FXCollections;\r\nimport javafx.collections.ObservableList;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.Initializable;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.control.TableColumn;\r\nimport javafx.scene.control.TableView;\r\nimport javafx.scene.control.TextField;\r\nimport javafx.scene.control.cell.PropertyValueFactory;\r\nimport javafx.scene.input.MouseEvent;\r\nimport model.Utilisateur;\r\nimport repository.UtilisateurRepository;\r\nimport session.SessionUtilisateur;\r\n\r\nimport java.io.IOException;\r\nimport java.net.URL;\r\nimport java.util.ArrayList;\r\nimport java.util.ResourceBundle;\r\nimport java.util.stream.Collectors;\r\n\r\npublic class GestionUserController implements Initializable {\r\n    @FXML\r\n    private TableView&lt;Utilisateur&gt; tableauUser;\r\n\r\n    @FXML\r\n    private Button userSupp;\r\n    \r\n    @FXML\r\n    private Button modifierBtn;\r\n    \r\n    @FXML\r\n    private TextField rechercheField;\r\n    \r\n    @FXML\r\n    private Label messageLabel;\r\n    \r\n    @FXML\r\n    private Button tachesBtn;\r\n    \r\n    private ObservableList&lt;Utilisateur&gt; listeUtilisateurs;\r\n    private UtilisateurRepository utilisateurRepository;\r\n\r\n    @Override\r\n    public void initialize(URL location, ResourceBundle resources) {\r\n        utilisateurRepository = new UtilisateurRepository();\r\n        \r\n        // Configuration des colonnes du tableau\r\n        String[][] colonnes = {\r\n                {\&quot;Id Utilisateur\&quot;, \&quot;idUtilisateur\&quot;},\r\n                {\&quot;Nom\&quot;, \&quot;nom\&quot;},\r\n                {\&quot;Prénom\&quot;, \&quot;prenom\&quot;},\r\n                {\&quot;Email\&quot;, \&quot;email\&quot;},\r\n                {\&quot;Rôle\&quot;, \&quot;role\&quot;},\r\n        };\r\n\r\n        for (int i = 0; i &lt; colonnes.length; i++) {\r\n            TableColumn&lt;Utilisateur, String&gt; maCol = new TableColumn&lt;&gt;(colonnes[i][0]);\r\n            maCol.setCellValueFactory(\r\n                    new PropertyValueFactory&lt;Utilisateur, String&gt;(colonnes[i][1]));\r\n            maCol.setPrefWidth(150); // Définir une largeur pour chaque colonne\r\n            tableauUser.getColumns().add(maCol);\r\n        }\r\n        \r\n        // Chargement des utilisateurs\r\n        chargerUtilisateurs();\r\n        \r\n        // Effacer le message après 3 secondes\r\n        messageLabel.textProperty().addListener((observable, oldValue, newValue) -&gt; {\r\n            if (newValue != null &amp;&amp; !newValue.isEmpty()) {\r\n                new Thread(() -&gt; {\r\n                    try {\r\n                        Thread.sleep(3000);\r\n                        javafx.application.Platform.runLater(() -&gt; messageLabel.setText(\&quot;\&quot;));\r\n                    } catch (InterruptedException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                }).start();\r\n            }\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * Charge tous les utilisateurs depuis la base de données\r\n     */\r\n    private void chargerUtilisateurs() {\r\n        ArrayList&lt;Utilisateur&gt; utilisateurs = utilisateurRepository.getAllUtilisateurs();\r\n        listeUtilisateurs = FXCollections.observableArrayList(utilisateurs);\r\n        tableauUser.setItems(listeUtilisateurs);\r\n    }\r\n    \r\n    @FXML\r\n    public void cliqueTableau(MouseEvent mouseEvent) throws IOException {\r\n        Utilisateur selection = tableauUser.getSelectionModel().getSelectedItem();\r\n        if (selection != null) {\r\n            userSupp.setDisable(false);\r\n            modifierBtn.setDisable(false);\r\n            tachesBtn.setDisable(false);\r\n        } else {\r\n            userSupp.setDisable(true);\r\n            modifierBtn.setDisable(true);\r\n            tachesBtn.setDisable(true);\r\n        }\r\n        \r\n        // Double-clic pour modifier un utilisateur\r\n        if (mouseEvent.getClickCount() == 2) {\r\n            if (selection != null) {\r\n                modifierUtilisateur();\r\n            }\r\n        }\r\n    }\r\n\r\n    @FXML\r\n    public void supprimer(ActionEvent actionEvent) {\r\n        Utilisateur utilisateurSelectionne = tableauUser.getSelectionModel().getSelectedItem();\r\n\r\n        if (utilisateurSelectionne != null) {\r\n            boolean supprime = utilisateurRepository.supprimerUtilisateurParEmail(utilisateurSelectionne.getEmail());\r\n            \r\n            if (supprime) {\r\n                tableauUser.getItems().remove(utilisateurSelectionne);\r\n                messageLabel.setText(\&quot;Utilisateur supprimé avec succès !\&quot;);\r\n                messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);\r\n            } else {\r\n                messageLabel.setText(\&quot;Erreur lors de la suppression de l'utilisateur.\&quot;);\r\n                messageLabel.setTextFill(javafx.scene.paint.Color.RED);\r\n            }\r\n            \r\n            // Réinitialiser les boutons\r\n            userSupp.setDisable(true);\r\n            modifierBtn.setDisable(true);\r\n            tachesBtn.setDisable(true);\r\n        }\r\n    }\r\n    \r\n    @FXML\r\n    public void gererTaches() {\r\n        Utilisateur utilisateurSelectionne = tableauUser.getSelectionModel().getSelectedItem();\r\n        \r\n        if (utilisateurSelectionne != null) {\r\n            try {\r\n                StartApplication.changeScene(\&quot;user/TodoList\&quot;);\r\n                TodoListController controller = (TodoListController)\r\n                        StartApplication.getControllerFromStage();\r\n                controller.initData(utilisateurSelectionne);\r\n                messageLabel.setText(\&quot;Chargement des tâches de l'utilisateur...\&quot;);\r\n                messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);\r\n            } catch (IOException e) {\r\n                messageLabel.setText(\&quot;Erreur lors de l'ouverture de la page des tâches.\&quot;);\r\n                messageLabel.setTextFill(javafx.scene.paint.Color.RED);\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n    }\r\n    \r\n    @FXML\r\n    public void modifierUtilisateur() {\r\n        Utilisateur utilisateurSelectionne = tableauUser.getSelectionModel().getSelectedItem();\r\n        \r\n        if (utilisateurSelectionne != null) {\r\n            try {\r\n                StartApplication.changeScene(\&quot;user/modificationUser\&quot;);\r\n                ModificationUserController controller = (ModificationUserController)\r\n                        StartApplication.getControllerFromStage();\r\n                controller.initData(utilisateurSelectionne);\r\n            } catch (IOException e) {\r\n                messageLabel.setText(\&quot;Erreur lors de l'ouverture de la page de modification.\&quot;);\r\n                messageLabel.setTextFill(javafx.scene.paint.Color.RED);\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n    }\r\n    \r\n    @FXML\r\n    public void ajouterUtilisateur() {\r\n        try {\r\n            StartApplication.changeScene(\&quot;accueil/Inscription\&quot;);\r\n        } catch (IOException e) {\r\n            messageLabel.setText(\&quot;Erreur lors de l'ouverture de la page d'inscription.\&quot;);\r\n            messageLabel.setTextFill(javafx.scene.paint.Color.RED);\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n    \r\n    @FXML\r\n    public void rechercher() {\r\n        String recherche = rechercheField.getText().toLowerCase().trim();\r\n        \r\n        if (recherche.isEmpty()) {\r\n            tableauUser.setItems(listeUtilisateurs);\r\n            return;\r\n        }\r\n        \r\n        // Filtrer les utilisateurs selon le texte de recherche\r\n        ObservableList&lt;Utilisateur&gt; utilisateursFiltres = listeUtilisateurs.stream()\r\n                .filter(u -&gt; u.getNom().toLowerCase().contains(recherche) ||\r\n                        u.getPrenom().toLowerCase().contains(recherche) ||\r\n                        u.getEmail().toLowerCase().contains(recherche) ||\r\n                        (u.getRole() != null &amp;&amp; u.getRole().toLowerCase().contains(recherche)))\r\n                .collect(Collectors.toCollection(FXCollections::observableArrayList));\r\n        \r\n        tableauUser.setItems(utilisateursFiltres);\r\n        \r\n        if (utilisateursFiltres.isEmpty()) {\r\n            messageLabel.setText(\&quot;Aucun utilisateur trouvé pour cette recherche.\&quot;);\r\n            messageLabel.setTextFill(javafx.scene.paint.Color.ORANGE);\r\n        } else {\r\n            messageLabel.setText(utilisateursFiltres.size() + \&quot; utilisateur(s) trouvé(s).\&quot;);\r\n            messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);\r\n        }\r\n    }\r\n    \r\n    @FXML\r\n    public void resetRecherche() {\r\n        rechercheField.clear();\r\n        tableauUser.setItems(listeUtilisateurs);\r\n        messageLabel.setText(\&quot;Recherche réinitialisée.\&quot;);\r\n        messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);\r\n    }\r\n\r\n    @FXML\r\n    public void retour(ActionEvent actionEvent) throws IOException {\r\n        StartApplication.changeScene(\&quot;accueil/Accueil\&quot;);\r\n    }\r\n}\r\n&quot;},&quot;codebaseEnabled&quot;:true},&quot;createdAt&quot;:1746739417183,&quot;isInternal&quot;:false,&quot;rawContent&quot;:{&quot;type&quot;:&quot;doc&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;peux tu supprimer tout ce que tu as modifier parce que ça se voit que ce n'est pas moi qui l'ai fait&quot;}]}]}},{&quot;id&quot;:&quot;4f5d17d2-7f80-4642-8deb-9ba2d0ee6423&quot;,&quot;role&quot;:&quot;assistant&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Je comprends votre préoccupation. Je vais annuler toutes les modifications que j'ai apportées pour que vous puissiez développer l'interface vous-même.\n\nCommençons par supprimer les fichiers que j'ai créés :&quot;},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_01KJHa7rFLqE9ojQY8RMefL1&quot;,&quot;status&quot;:&quot;IN_PROGRESS&quot;,&quot;isHidden&quot;:true,&quot;localResult&quot;:&quot;{\&quot;status\&quot;:\&quot;SUCCESS\&quot;,\&quot;exitCode\&quot;:0,\&quot;output\&quot;:\&quot;Windows PowerShell\\nCopyright (C) Microsoft Corporation. Tous droits réservés.\\n\\nInstallez la dernière version de PowerShell pour de nouvelles fonctionnalités et améliorations ! https://aka.ms/PSWindows\\n\\nPS C:\\\\Users\\\\ethan\\\\IdeaProjects\\\\TodoListFX&gt; rm \\\&quot;C:/Users/ethan/IdeaProjects/TodoListFX/src/main/java/model/Tache.java\\\&quot; \\\&quot;C:/Users/ethan/IdeaProjects/TodoListFX/src/main/java/repository/TacheRepository.java\\\&quot; \\\&quot;C:/Users/ethan/IdeaProjects/TodoListFX/src/main/java/appli/user/TodoListController.java\\\&quot; \\\&quot;C:/Users/ethan/IdeaProjects/TodoListFX/src/main/resources/appli/user/TodoListView.fxml\\\&quot; \\\&quot;C:/Users/ethan/IdeaProjects/TodoListFX/src/main/resources/sql/tache.sql\\\&quot;\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\&quot;}&quot;},{&quot;type&quot;:&quot;shellCommand&quot;,&quot;command&quot;:&quot;rm \&quot;C:/Users/ethan/IdeaProjects/TodoListFX/src/main/java/model/Tache.java\&quot; \&quot;C:/Users/ethan/IdeaProjects/TodoListFX/src/main/java/repository/TacheRepository.java\&quot; \&quot;C:/Users/ethan/IdeaProjects/TodoListFX/src/main/java/appli/user/TodoListController.java\&quot; \&quot;C:/Users/ethan/IdeaProjects/TodoListFX/src/main/resources/appli/user/TodoListView.fxml\&quot; \&quot;C:/Users/ethan/IdeaProjects/TodoListFX/src/main/resources/sql/tache.sql\&quot;&quot;,&quot;id&quot;:&quot;36ba3b8a-dc27-4059-9305-7a112d938e1b&quot;,&quot;status&quot;:&quot;SUCCESS&quot;,&quot;toolCallId&quot;:&quot;toolu_01KJHa7rFLqE9ojQY8RMefL1&quot;,&quot;commandsRequiringConfirmation&quot;:[{&quot;name&quot;:&quot;rm&quot;,&quot;arguments&quot;:[]}],&quot;exitCode&quot;:0,&quot;output&quot;:&quot;Windows PowerShell\nCopyright (C) Microsoft Corporation. Tous droits réservés.\n\nInstallez la dernière version de PowerShell pour de nouvelles fonctionnalités et améliorations ! https://aka.ms/PSWindows\n\nPS C:\\Users\\ethan\\IdeaProjects\\TodoListFX&gt; rm \&quot;C:/Users/ethan/IdeaProjects/TodoListFX/src/main/java/model/Tache.java\&quot; \&quot;C:/Users/ethan/IdeaProjects/TodoListFX/src/main/java/repository/TacheRepository.java\&quot; \&quot;C:/Users/ethan/IdeaProjects/TodoListFX/src/main/java/appli/user/TodoListController.java\&quot; \&quot;C:/Users/ethan/IdeaProjects/TodoListFX/src/main/resources/appli/user/TodoListView.fxml\&quot; \&quot;C:/Users/ethan/IdeaProjects/TodoListFX/src/main/resources/sql/tache.sql\&quot;\n\n\n\n\n\n\n\n\n\n\n\n\n&quot;,&quot;outputPath&quot;:&quot;.zencoder/Zencoder-e4baab30-034b-4aec-9da3-3af5c138cc56.log&quot;}],&quot;context&quot;:{&quot;author&quot;:&quot;Coding Agent&quot;,&quot;operationId&quot;:&quot;a1f94958-d1e8-4e98-b9ea-48176edd291e&quot;},&quot;createdAt&quot;:1746739418577,&quot;isInternal&quot;:false},{&quot;id&quot;:&quot;81542b2b-0c58-4103-b182-10a992b04406&quot;,&quot;role&quot;:&quot;assistant&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Maintenant, restaurons les fichiers que j'ai modifiés à leur état d'origine :\n\n1. Restaurons le fichier GestionUserView.fxml :&quot;},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_01SrSVycGwsUEysBp7RPVnc3&quot;,&quot;statusText&quot;:&quot;Change generated&quot;,&quot;status&quot;:&quot;SUCCESS&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main/resources/appli/accueil/GestionUserView.fxml&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\resources\\appli\\accueil\\GestionUserView.fxml&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;codeHunk&quot;,&quot;lineBasedDiff&quot;:&quot;--- src/main/resources/appli/accueil/GestionUserView.fxml\n+++ src/main/resources/appli/accueil/GestionUserView.fxml\n@@ -1,103 +1,13 @@\n &lt;?xml version=\&quot;1.0\&quot; encoding=\&quot;UTF-8\&quot;?&gt;\n \n-&lt;?import javafx.geometry.Insets?&gt;\n &lt;?import javafx.scene.control.Button?&gt;\n-&lt;?import javafx.scene.control.Label?&gt;\n &lt;?import javafx.scene.control.TableView?&gt;\n-&lt;?import javafx.scene.control.TextField?&gt;\n &lt;?import javafx.scene.layout.AnchorPane?&gt;\n-&lt;?import javafx.scene.layout.HBox?&gt;\n-&lt;?import javafx.scene.layout.VBox?&gt;\n-&lt;?import javafx.scene.text.Font?&gt;\n \n-&lt;AnchorPane prefHeight=\&quot;600.0\&quot; prefWidth=\&quot;800.0\&quot; xmlns=\&quot;http://javafx.com/javafx/23.0.1\&quot; xmlns:fx=\&quot;http://javafx.com/fxml/1\&quot; fx:controller=\&quot;appli.accueil.GestionUserController\&quot;&gt;\n+&lt;AnchorPane prefHeight=\&quot;400.0\&quot; prefWidth=\&quot;600.0\&quot; xmlns=\&quot;http://javafx.com/javafx/23.0.1\&quot; xmlns:fx=\&quot;http://javafx.com/fxml/1\&quot; fx:controller=\&quot;appli.accueil.GestionUserController\&quot;&gt;\n    &lt;children&gt;\n-      &lt;VBox alignment=\&quot;TOP_CENTER\&quot; layoutX=\&quot;0.0\&quot; layoutY=\&quot;0.0\&quot; prefHeight=\&quot;600.0\&quot; prefWidth=\&quot;800.0\&quot; spacing=\&quot;10.0\&quot;&gt;\n-         &lt;children&gt;\n-            &lt;HBox alignment=\&quot;CENTER_LEFT\&quot; spacing=\&quot;10.0\&quot;&gt;\n-               &lt;children&gt;\n-                  &lt;Button fx:id=\&quot;retour\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#retour\&quot; style=\&quot;-fx-background-color: #4a90e2;\&quot; text=\&quot;Retour\&quot; textFill=\&quot;WHITE\&quot;&gt;\n-                     &lt;font&gt;\n-                        &lt;Font name=\&quot;System Bold\&quot; size=\&quot;12.0\&quot; /&gt;\n-                     &lt;/font&gt;\n-                  &lt;/Button&gt;\n-                  &lt;Label alignment=\&quot;CENTER\&quot; contentDisplay=\&quot;CENTER\&quot; text=\&quot;Gestion des Utilisateurs\&quot; textAlignment=\&quot;CENTER\&quot; HBox.hgrow=\&quot;ALWAYS\&quot;&gt;\n-                     &lt;font&gt;\n-                        &lt;Font name=\&quot;System Bold\&quot; size=\&quot;24.0\&quot; /&gt;\n-                     &lt;/font&gt;\n-                     &lt;HBox.margin&gt;\n-                        &lt;Insets left=\&quot;220.0\&quot; /&gt;\n-                     &lt;/HBox.margin&gt;\n-                  &lt;/Label&gt;\n-               &lt;/children&gt;\n-               &lt;padding&gt;\n-                  &lt;Insets bottom=\&quot;10.0\&quot; left=\&quot;10.0\&quot; right=\&quot;10.0\&quot; top=\&quot;10.0\&quot; /&gt;\n-               &lt;/padding&gt;\n-            &lt;/HBox&gt;\n-            \n-            &lt;HBox alignment=\&quot;CENTER\&quot; spacing=\&quot;10.0\&quot;&gt;\n-               &lt;children&gt;\n-                  &lt;TextField fx:id=\&quot;rechercheField\&quot; prefHeight=\&quot;30.0\&quot; prefWidth=\&quot;300.0\&quot; promptText=\&quot;Rechercher un utilisateur...\&quot;&gt;\n-                     &lt;font&gt;\n-                        &lt;Font size=\&quot;14.0\&quot; /&gt;\n-                     &lt;/font&gt;\n-                  &lt;/TextField&gt;\n-                  &lt;Button fx:id=\&quot;rechercheBtn\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#rechercher\&quot; style=\&quot;-fx-background-color: #4a90e2;\&quot; text=\&quot;Rechercher\&quot; textFill=\&quot;WHITE\&quot;&gt;\n-                     &lt;font&gt;\n-                        &lt;Font size=\&quot;14.0\&quot; /&gt;\n-                     &lt;/font&gt;\n-                  &lt;/Button&gt;\n-                  &lt;Button fx:id=\&quot;resetBtn\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#resetRecherche\&quot; style=\&quot;-fx-background-color: #7f8c8d;\&quot; text=\&quot;Réinitialiser\&quot; textFill=\&quot;WHITE\&quot;&gt;\n-                     &lt;font&gt;\n-                        &lt;Font size=\&quot;14.0\&quot; /&gt;\n-                     &lt;/font&gt;\n-                  &lt;/Button&gt;\n-               &lt;/children&gt;\n-               &lt;padding&gt;\n-                  &lt;Insets bottom=\&quot;10.0\&quot; left=\&quot;10.0\&quot; right=\&quot;10.0\&quot; top=\&quot;10.0\&quot; /&gt;\n-               &lt;/padding&gt;\n-            &lt;/HBox&gt;\n-            \n-            &lt;TableView fx:id=\&quot;tableauUser\&quot; onMouseClicked=\&quot;#cliqueTableau\&quot; prefHeight=\&quot;400.0\&quot; prefWidth=\&quot;780.0\&quot; style=\&quot;-fx-border-color: #e0e0e0; -fx-border-width: 1px;\&quot;&gt;\n-               &lt;VBox.margin&gt;\n-                  &lt;Insets left=\&quot;10.0\&quot; right=\&quot;10.0\&quot; /&gt;\n-               &lt;/VBox.margin&gt;\n-            &lt;/TableView&gt;\n-            \n-            &lt;HBox alignment=\&quot;CENTER\&quot; spacing=\&quot;20.0\&quot;&gt;\n-               &lt;children&gt;\n-                  &lt;Button fx:id=\&quot;ajouterBtn\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#ajouterUtilisateur\&quot; style=\&quot;-fx-background-color: #2ecc71;\&quot; text=\&quot;Ajouter\&quot; textFill=\&quot;WHITE\&quot;&gt;\n-                     &lt;font&gt;\n-                        &lt;Font name=\&quot;System Bold\&quot; size=\&quot;14.0\&quot; /&gt;\n-                     &lt;/font&gt;\n-                  &lt;/Button&gt;\n-                  &lt;Button fx:id=\&quot;modifierBtn\&quot; disable=\&quot;true\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#modifierUtilisateur\&quot; style=\&quot;-fx-background-color: #f39c12;\&quot; text=\&quot;Modifier\&quot; textFill=\&quot;WHITE\&quot;&gt;\n-                     &lt;font&gt;\n-                        &lt;Font name=\&quot;System Bold\&quot; size=\&quot;14.0\&quot; /&gt;\n-                     &lt;/font&gt;\n-                  &lt;/Button&gt;\n-                  &lt;Button fx:id=\&quot;tachesBtn\&quot; disable=\&quot;true\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#gererTaches\&quot; style=\&quot;-fx-background-color: #3498db;\&quot; text=\&quot;Tâches\&quot; textFill=\&quot;WHITE\&quot;&gt;\n-                     &lt;font&gt;\n-                        &lt;Font name=\&quot;System Bold\&quot; size=\&quot;14.0\&quot; /&gt;\n-                     &lt;/font&gt;\n-                  &lt;/Button&gt;\n-                  &lt;Button fx:id=\&quot;userSupp\&quot; disable=\&quot;true\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#supprimer\&quot; style=\&quot;-fx-background-color: #e74c3c;\&quot; text=\&quot;Supprimer\&quot; textFill=\&quot;WHITE\&quot;&gt;\n-                     &lt;font&gt;\n-                        &lt;Font name=\&quot;System Bold\&quot; size=\&quot;14.0\&quot; /&gt;\n-                     &lt;/font&gt;\n-                  &lt;/Button&gt;\n-               &lt;/children&gt;\n-               &lt;padding&gt;\n-                  &lt;Insets bottom=\&quot;10.0\&quot; left=\&quot;10.0\&quot; right=\&quot;10.0\&quot; top=\&quot;10.0\&quot; /&gt;\n-               &lt;/padding&gt;\n-            &lt;/HBox&gt;\n-            \n-            &lt;Label fx:id=\&quot;messageLabel\&quot; alignment=\&quot;CENTER\&quot; textFill=\&quot;#2ecc71\&quot;&gt;\n-               &lt;font&gt;\n-                  &lt;Font size=\&quot;14.0\&quot; /&gt;\n-               &lt;/font&gt;\n-            &lt;/Label&gt;\n-         &lt;/children&gt;\n-      &lt;/VBox&gt;\n+      &lt;TableView fx:id=\&quot;tableauUser\&quot; layoutX=\&quot;42.0\&quot; layoutY=\&quot;39.0\&quot; onMouseClicked=\&quot;#cliqueTableau\&quot; prefHeight=\&quot;323.0\&quot; prefWidth=\&quot;517.0\&quot; /&gt;\n+      &lt;Button fx:id=\&quot;userSupp\&quot; disable=\&quot;true\&quot; layoutX=\&quot;265.0\&quot; layoutY=\&quot;366.0\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#supprimer\&quot; text=\&quot;supprimer\&quot; /&gt;\n+      &lt;Button fx:id=\&quot;retour\&quot; layoutY=\&quot;2.0\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#retour\&quot; text=\&quot;retour\&quot; /&gt;\n    &lt;/children&gt;\n &lt;/AnchorPane&gt;&quot;,&quot;refToolCallId&quot;:&quot;toolu_01SrSVycGwsUEysBp7RPVnc3&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;2. Restaurons le fichier GestionUserController.java :&quot;},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_01HymhvYRshWtzFQHWehB2TQ&quot;,&quot;statusText&quot;:&quot;Change generated&quot;,&quot;status&quot;:&quot;SUCCESS&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main/java/appli/accueil/GestionUserController.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\appli\\accueil\\GestionUserController.java&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;codeHunk&quot;,&quot;lineBasedDiff&quot;:&quot;--- src/main/java/appli/accueil/GestionUserController.java\n+++ src/main/java/appli/accueil/GestionUserController.java\n@@ -1,9 +1,6 @@\n package appli.accueil;\n import appli.StartApplication;\n import appli.user.ModificationUserController;\n-import appli.user.TodoListController;\n-import javafx.collections.FXCollections;\n-import javafx.collections.ObservableList;\n import javafx.event.ActionEvent;\n import javafx.fxml.FXML;\n import javafx.fxml.Initializable;\n@@ -11,7 +8,6 @@\n import javafx.scene.control.Label;\n import javafx.scene.control.TableColumn;\n import javafx.scene.control.TableView;\n-import javafx.scene.control.TextField;\n import javafx.scene.control.cell.PropertyValueFactory;\n import javafx.scene.input.MouseEvent;\n import model.Utilisateur;\n@@ -20,9 +16,7 @@\n \n import java.io.IOException;\n import java.net.URL;\n-import java.util.ArrayList;\n import java.util.ResourceBundle;\n-import java.util.stream.Collectors;\n \n public class GestionUserController implements Initializable {\n     @FXML\n@@ -30,87 +24,41 @@\n \n     @FXML\n     private Button userSupp;\n-    \n-    @FXML\n-    private Button modifierBtn;\n-    \n-    @FXML\n-    private TextField rechercheField;\n-    \n-    @FXML\n-    private Label messageLabel;\n-    \n-    @FXML\n-    private Button tachesBtn;\n-    \n-    private ObservableList&lt;Utilisateur&gt; listeUtilisateurs;\n-    private UtilisateurRepository utilisateurRepository;\n \n     @Override\n     public void initialize(URL location, ResourceBundle resources) {\n-        utilisateurRepository = new UtilisateurRepository();\n-        \n-        // Configuration des colonnes du tableau\n-        String[][] colonnes = {\n-                {\&quot;Id Utilisateur\&quot;, \&quot;idUtilisateur\&quot;},\n-                {\&quot;Nom\&quot;, \&quot;nom\&quot;},\n-                {\&quot;Prénom\&quot;, \&quot;prenom\&quot;},\n-                {\&quot;Email\&quot;, \&quot;email\&quot;},\n-                {\&quot;Rôle\&quot;, \&quot;role\&quot;},\n+        String [][] colonnes = {\n+                { \&quot;Id Utilisateur\&quot;,\&quot;idUtilisateur\&quot; },\n+                { \&quot;Nom\&quot;,\&quot;nom\&quot; },\n+                { \&quot;Prénom\&quot;,\&quot;prenom\&quot; },\n+                { \&quot;Email\&quot;,\&quot;email\&quot; },\n+                { \&quot;Rôle\&quot;,\&quot;role\&quot; },\n         };\n \n-        for (int i = 0; i &lt; colonnes.length; i++) {\n-            TableColumn&lt;Utilisateur, String&gt; maCol = new TableColumn&lt;&gt;(colonnes[i][0]);\n+        for ( int i = 0 ; i &lt; colonnes.length ; i ++ ){\n+            TableColumn&lt;Utilisateur,String&gt; maCol = new TableColumn&lt;&gt;(colonnes[i][0]);\n             maCol.setCellValueFactory(\n-                    new PropertyValueFactory&lt;Utilisateur, String&gt;(colonnes[i][1]));\n-            maCol.setPrefWidth(150); // Définir une largeur pour chaque colonne\n+                    new PropertyValueFactory&lt;Utilisateur,String&gt;(colonnes[i][1]));\n             tableauUser.getColumns().add(maCol);\n         }\n-        \n-        // Chargement des utilisateurs\n-        chargerUtilisateurs();\n-        \n-        // Effacer le message après 3 secondes\n-        messageLabel.textProperty().addListener((observable, oldValue, newValue) -&gt; {\n-            if (newValue != null &amp;&amp; !newValue.isEmpty()) {\n-                new Thread(() -&gt; {\n-                    try {\n-                        Thread.sleep(3000);\n-                        javafx.application.Platform.runLater(() -&gt; messageLabel.setText(\&quot;\&quot;));\n-                    } catch (InterruptedException e) {\n-                        e.printStackTrace();\n-                    }\n-                }).start();\n-            }\n-        });\n+        UtilisateurRepository us = new UtilisateurRepository();\n+        tableauUser.getItems().addAll(us.getAllUtilisateurs());\n+\n     }\n-    \n-    /**\n-     * Charge tous les utilisateurs depuis la base de données\n-     */\n-    private void chargerUtilisateurs() {\n-        ArrayList&lt;Utilisateur&gt; utilisateurs = utilisateurRepository.getAllUtilisateurs();\n-        listeUtilisateurs = FXCollections.observableArrayList(utilisateurs);\n-        tableauUser.setItems(listeUtilisateurs);\n-    }\n-    \n     @FXML\n     public void cliqueTableau(MouseEvent mouseEvent) throws IOException {\n         Utilisateur selection = tableauUser.getSelectionModel().getSelectedItem();\n         if (selection != null) {\n             userSupp.setDisable(false);\n-            modifierBtn.setDisable(false);\n-            tachesBtn.setDisable(false);\n-        } else {\n+        }else{\n             userSupp.setDisable(true);\n-            modifierBtn.setDisable(true);\n-            tachesBtn.setDisable(true);\n         }\n-        \n-        // Double-clic pour modifier un utilisateur\n         if (mouseEvent.getClickCount() == 2) {\n             if (selection != null) {\n-                modifierUtilisateur();\n+                StartApplication.changeScene(\&quot;user/modificationUser\&quot;);\n+                ModificationUserController controller = (ModificationUserController)\n+                        StartApplication. getControllerFromStage();\n+                controller.initData(selection);\n             }\n         }\n     }\n@@ -120,107 +68,11 @@\n         Utilisateur utilisateurSelectionne = tableauUser.getSelectionModel().getSelectedItem();\n \n         if (utilisateurSelectionne != null) {\n-            boolean supprime = utilisateurRepository.supprimerUtilisateurParEmail(utilisateurSelectionne.getEmail());\n-            \n-            if (supprime) {\n-                tableauUser.getItems().remove(utilisateurSelectionne);\n-                messageLabel.setText(\&quot;Utilisateur supprimé avec succès !\&quot;);\n-                messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);\n-            } else {\n-                messageLabel.setText(\&quot;Erreur lors de la suppression de l'utilisateur.\&quot;);\n-                messageLabel.setTextFill(javafx.scene.paint.Color.RED);\n-            }\n-            \n-            // Réinitialiser les boutons\n-            userSupp.setDisable(true);\n-            modifierBtn.setDisable(true);\n-            tachesBtn.setDisable(true);\n+            UtilisateurRepository rep = new UtilisateurRepository();\n+            rep.supprimerUtilisateurParEmail(utilisateurSelectionne.getEmail());\n+\n         }\n-    }\n-    \n-    @FXML\n-    public void gererTaches() {\n-        Utilisateur utilisateurSelectionne = tableauUser.getSelectionModel().getSelectedItem();\n-        \n-        if (utilisateurSelectionne != null) {\n-            try {\n-                StartApplication.changeScene(\&quot;user/TodoList\&quot;);\n-                TodoListController controller = (TodoListController)\n-                        StartApplication.getControllerFromStage();\n-                controller.initData(utilisateurSelectionne);\n-                messageLabel.setText(\&quot;Chargement des tâches de l'utilisateur...\&quot;);\n-                messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);\n-            } catch (IOException e) {\n-                messageLabel.setText(\&quot;Erreur lors de l'ouverture de la page des tâches.\&quot;);\n-                messageLabel.setTextFill(javafx.scene.paint.Color.RED);\n-                e.printStackTrace();\n-            }\n-        }\n-    }\n-    \n-    @FXML\n-    public void modifierUtilisateur() {\n-        Utilisateur utilisateurSelectionne = tableauUser.getSelectionModel().getSelectedItem();\n-        \n-        if (utilisateurSelectionne != null) {\n-            try {\n-                StartApplication.changeScene(\&quot;user/modificationUser\&quot;);\n-                ModificationUserController controller = (ModificationUserController)\n-                        StartApplication.getControllerFromStage();\n-                controller.initData(utilisateurSelectionne);\n-            } catch (IOException e) {\n-                messageLabel.setText(\&quot;Erreur lors de l'ouverture de la page de modification.\&quot;);\n-                messageLabel.setTextFill(javafx.scene.paint.Color.RED);\n-                e.printStackTrace();\n-            }\n-        }\n-    }\n-    \n-    @FXML\n-    public void ajouterUtilisateur() {\n-        try {\n-            StartApplication.changeScene(\&quot;accueil/Inscription\&quot;);\n-        } catch (IOException e) {\n-            messageLabel.setText(\&quot;Erreur lors de l'ouverture de la page d'inscription.\&quot;);\n-            messageLabel.setTextFill(javafx.scene.paint.Color.RED);\n-            e.printStackTrace();\n-        }\n-    }\n-    \n-    @FXML\n-    public void rechercher() {\n-        String recherche = rechercheField.getText().toLowerCase().trim();\n-        \n-        if (recherche.isEmpty()) {\n-            tableauUser.setItems(listeUtilisateurs);\n-            return;\n-        }\n-        \n-        // Filtrer les utilisateurs selon le texte de recherche\n-        ObservableList&lt;Utilisateur&gt; utilisateursFiltres = listeUtilisateurs.stream()\n-                .filter(u -&gt; u.getNom().toLowerCase().contains(recherche) ||\n-                        u.getPrenom().toLowerCase().contains(recherche) ||\n-                        u.getEmail().toLowerCase().contains(recherche) ||\n-                        (u.getRole() != null &amp;&amp; u.getRole().toLowerCase().contains(recherche)))\n-                .collect(Collectors.toCollection(FXCollections::observableArrayList));\n-        \n-        tableauUser.setItems(utilisateursFiltres);\n-        \n-        if (utilisateursFiltres.isEmpty()) {\n-            messageLabel.setText(\&quot;Aucun utilisateur trouvé pour cette recherche.\&quot;);\n-            messageLabel.setTextFill(javafx.scene.paint.Color.ORANGE);\n-        } else {\n-            messageLabel.setText(utilisateursFiltres.size() + \&quot; utilisateur(s) trouvé(s).\&quot;);\n-            messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);\n-        }\n-    }\n-    \n-    @FXML\n-    public void resetRecherche() {\n-        rechercheField.clear();\n-        tableauUser.setItems(listeUtilisateurs);\n-        messageLabel.setText(\&quot;Recherche réinitialisée.\&quot;);\n-        messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);\n+        tableauUser.getItems().remove(utilisateurSelectionne);\n     }\n \n     @FXML&quot;,&quot;refToolCallId&quot;:&quot;toolu_01HymhvYRshWtzFQHWehB2TQ&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Toutes les modifications ont été annulées. Votre code est maintenant revenu à son état d'origine. \n\nVoici quelques conseils pour vous aider à développer vous-même l'interface de gestion des utilisateurs :\n\n1. **Pour améliorer l'interface existante** :\n   - Vous pouvez ajouter des éléments visuels comme des labels, des champs de texte et des boutons dans le fichier FXML\n   - Utilisez des layouts comme VBox, HBox ou GridPane pour organiser vos éléments\n   - Ajoutez des styles CSS pour rendre l'interface plus attrayante\n\n2. **Pour ajouter des fonctionnalités** :\n   - Implémentez une fonction de recherche d'utilisateurs\n   - Ajoutez un bouton pour créer de nouveaux utilisateurs\n   - Créez une interface pour gérer les tâches des utilisateurs\n\n3. **Pour la gestion des tâches** :\n   - Créez un modèle pour représenter les tâches\n   - Développez un repository pour gérer les opérations CRUD sur les tâches\n   - Concevez une interface utilisateur pour afficher et gérer les tâches\n\nSi vous avez besoin d'aide pour des parties spécifiques du développement, n'hésitez pas à me demander des conseils ou des exemples de code que vous pourrez adapter vous-même.&quot;},{&quot;type&quot;:&quot;codePatch&quot;,&quot;diffs&quot;:[{&quot;path&quot;:&quot;src/main/resources/appli/accueil/GestionUserView.fxml&quot;,&quot;patch&quot;:&quot;@@ -53,4909 +53,692 @@\n afx.\n-geometry.Insets?%3E%0A%3C?import javafx.scene.control.Button?%3E%0A%3C?import javafx.scene.control.Label?%3E%0A%3C?import javafx.scene.control.TableView?%3E%0A%3C?import javafx.scene.control.TextField?%3E%0A%3C?import javafx.scene.layout.AnchorPane?%3E%0A%3C?import javafx.scene.layout.HBox?%3E%0A%3C?import javafx.scene.layout.VBox?%3E%0A%3C?import javafx.scene.text.Font?%3E%0A%0A%3CAnchorPane prefHeight=%22600.0%22 prefWidth=%22800.0%22 xmlns=%22http://javafx.com/javafx/23.0.1%22 xmlns:fx=%22http://javafx.com/fxml/1%22 fx:controller=%22appli.accueil.GestionUserController%22%3E%0A   %3Cchildren%3E%0A      %3CVBox alignment=%22TOP_CENTER%22 layoutX=%220.0%22 layoutY=%220.0%22 prefHeight=%22600.0%22 prefWidth=%22800.0%22 spacing=%2210.0%22%3E%0A         %3Cchildren%3E%0A            %3CHBox alignment=%22CENTER_LEFT%22 spacing=%2210.0%22%3E%0A               %3Cchildren%3E%0A                  %3CButton fx:id=%22retour%22 mnemonicParsing=%22false%22 onAction=%22#retour%22 style=%22-fx-background-color: #4a90e2;%22 text=%22Retour%22 textFill=%22WHITE%22%3E%0A                     %3Cfont%3E%0A                        %3CFont name=%22System Bold%22 size=%2212.0%22 /%3E%0A                     %3C/font%3E%0A                  %3C/Button%3E%0A                  %3CLabel alignment=%22CENTER%22 contentDisplay=%22CENTER%22 text=%22Gestion des Utilisateurs%22 textAlignment=%22CENTER%22 HBox.hgrow=%22ALWAYS%22%3E%0A                     %3Cfont%3E%0A                        %3CFont name=%22System Bold%22 size=%2224.0%22 /%3E%0A                     %3C/font%3E%0A                     %3CHBox.margin%3E%0A                        %3CInsets left=%22220.0%22 /%3E%0A                     %3C/HBox.margin%3E%0A                  %3C/Label%3E%0A               %3C/children%3E%0A               %3Cpadding%3E%0A                  %3CInsets bottom=%2210.0%22 left=%2210.0%22 right=%2210.0%22 top=%2210.0%22 /%3E%0A               %3C/padding%3E%0A            %3C/HBox%3E%0A            %0A            %3CHBox alignment=%22CENTER%22 spacing=%2210.0%22%3E%0A               %3Cchildren%3E%0A                  %3CTextField fx:id=%22rechercheField%22 prefHeight=%2230.0%22 prefWidth=%22300.0%22 promptText=%22Rechercher un utilisateur...%22%3E%0A                     %3Cfont%3E%0A                        %3CFont size=%2214.0%22 /%3E%0A                     %3C/font%3E%0A                  %3C/TextField%3E%0A                  %3CButton fx:id=%22rechercheBtn%22 mnemonicParsing=%22false%22 onAction=%22#rechercher%22 style=%22-fx-background-color: #4a90e2;%22 text=%22Rechercher%22 textFill=%22WHITE%22%3E%0A                     %3Cfont%3E%0A                        %3CFont size=%2214.0%22 /%3E%0A                     %3C/font%3E%0A                  %3C/Button%3E%0A                  %3CButton fx:id=%22resetBtn%22 mnemonicParsing=%22false%22 onAction=%22#resetRecherche%22 style=%22-fx-background-color: #7f8c8d;%22 text=%22R%C3%A9initialiser%22 textFill=%22WHITE%22%3E%0A                     %3Cfont%3E%0A                        %3CFont size=%2214.0%22 /%3E%0A                     %3C/font%3E%0A                  %3C/Button%3E%0A               %3C/children%3E%0A               %3Cpadding%3E%0A                  %3CInsets bottom=%2210.0%22 left=%2210.0%22 right=%2210.0%22 top=%2210.0%22 /%3E%0A               %3C/padding%3E%0A            %3C/HBox%3E%0A            %0A            %3CTableView fx:id=%22tableauUser%22 onMouseClicked=%22#cliqueTableau%22 prefHeight=%22400.0%22 prefWidth=%22780.0%22 style=%22-fx-border-color: #e0e0e0; -fx-border-width: 1px;%22%3E%0A               %3CVBox.margin%3E%0A                  %3CInsets left=%2210.0%22 right=%2210.0%22 /%3E%0A               %3C/VBox.margin%3E%0A            %3C/TableView%3E%0A            %0A            %3CHBox alignment=%22CENTER%22 spacing=%2220.0%22%3E%0A               %3Cchildren%3E%0A                  %3CButton fx:id=%22ajouterBtn%22 mnemonicParsing=%22false%22 onAction=%22#ajouterUtilisateur%22 style=%22-fx-background-color: #2ecc71;%22 text=%22Ajouter%22 textFill=%22WHITE%22%3E%0A                     %3Cfont%3E%0A                        %3CFont name=%22System Bold%22 size=%2214.0%22 /%3E%0A                     %3C/font%3E%0A                  %3C/Button%3E%0A                  %3CButton fx:id=%22modifierBtn%22 disable=%22true%22 mnemonicParsing=%22false%22 onAction=%22#modifierUtilisateur%22 style=%22-fx-background-color: #f39c12;%22 text=%22Modifier%22 textFill=%22WHITE%22%3E%0A                     %3Cfont%3E%0A                        %3CFont name=%22System Bold%22 size=%2214.0%22 /%3E%0A                     %3C/font%3E%0A                  %3C/Button%3E%0A                  %3CButton fx:id=%22tachesBtn%22 disable=%22true%22 mnemonicParsing=%22false%22 onAction=%22#gererTaches%22 style=%22-fx-background-color: #3498db;%22 text=%22T%C3%A2ches%22 textFill=%22WHITE%22%3E%0A                     %3Cfont%3E%0A                        %3CFont name=%22System Bold%22 size=%2214.0%22 /%3E%0A                     %3C/font%3E%0A                  %3C/Button%3E%0A                  %3CButton fx:id=%22userSupp%22 disable=%22true%22 mnemonicParsing=%22false%22 onAction=%22#supprimer%22 style=%22-fx-background-color: #e74c3c;%22 text=%22Supprimer%22 textFill=%22WHITE%22%3E%0A                     %3Cfont%3E%0A                        %3CFont name=%22System Bold%22 size=%2214.0%22 /%3E%0A                     %3C/font%3E%0A                  %3C/Button%3E%0A               %3C/children%3E%0A               %3Cpadding%3E%0A                  %3CInsets bottom=%2210.0%22 left=%2210.0%22 right=%2210.0%22 top=%2210.0%22 /%3E%0A               %3C/padding%3E%0A            %3C/HBox%3E%0A            %0A            %3CLabel fx:id=%22messageLabel%22 alignment=%22CENTER%22 textFill=%22#2ecc71%22%3E%0A               %3Cfont%3E%0A                  %3CFont size=%2214.0%22 /%3E%0A               %3C/font%3E%0A            %3C/Label%3E%0A         %3C/children%3E%0A      %3C/VBox\n+scene.control.Button?%3E%0A%3C?import javafx.scene.control.TableView?%3E%0A%3C?import javafx.scene.layout.AnchorPane?%3E%0A%0A%3CAnchorPane prefHeight=%22400.0%22 prefWidth=%22600.0%22 xmlns=%22http://javafx.com/javafx/23.0.1%22 xmlns:fx=%22http://javafx.com/fxml/1%22 fx:controller=%22appli.accueil.GestionUserController%22%3E%0A   %3Cchildren%3E%0A      %3CTableView fx:id=%22tableauUser%22 layoutX=%2242.0%22 layoutY=%2239.0%22 onMouseClicked=%22#cliqueTableau%22 prefHeight=%22323.0%22 prefWidth=%22517.0%22 /%3E%0A      %3CButton fx:id=%22userSupp%22 disable=%22true%22 layoutX=%22265.0%22 layoutY=%22366.0%22 mnemonicParsing=%22false%22 onAction=%22#supprimer%22 text=%22supprimer%22 /%3E%0A      %3CButton fx:id=%22retour%22 layoutY=%222.0%22 mnemonicParsing=%22false%22 onAction=%22#retour%22 text=%22retour%22 /\n %3E%0A  \n&quot;,&quot;isNew&quot;:false,&quot;isApplied&quot;:true},{&quot;path&quot;:&quot;src/main/java/appli/accueil/GestionUserController.java&quot;,&quot;patch&quot;:&quot;@@ -100,132 +100,8 @@\n r;%0D%0A\n-import appli.user.TodoListController;%0D%0Aimport javafx.collections.FXCollections;%0D%0Aimport javafx.collections.ObservableList;%0D%0A\n impo\n@@ -350,48 +350,8 @@\n w;%0D%0A\n-import javafx.scene.control.TextField;%0D%0A\n impo\n@@ -603,37 +603,8 @@\n L;%0D%0A\n-import java.util.ArrayList;%0D%0A\n impo\n@@ -636,45 +636,8 @@\n le;%0D\n-%0Aimport java.util.stream.Collectors;%0D\n %0A%0D%0Ap\n@@ -805,559 +805,110 @@\n p;%0D%0A\n-    %0D%0A    @FXML%0D%0A    private Button modifierBtn;%0D%0A    %0D%0A    @FXML%0D%0A    private TextField rechercheField;%0D%0A    %0D%0A    @FXML%0D%0A    private Label messageLabel;%0D%0A    %0D%0A    @FXML%0D%0A    private Button tachesBtn;%0D%0A    %0D%0A    private ObservableList%3CUtilisateur%3E listeUtilisateurs;%0D%0A    private UtilisateurRepository utilisateurRepository;%0D%0A%0D%0A    @Override%0D%0A    public void initialize(URL location, ResourceBundle resources) %7B%0D%0A        utilisateurRepository = new UtilisateurRepository();%0D%0A        %0D%0A        // Configuration des colonnes du tableau%0D%0A        String\n+%0D%0A    @Override%0D%0A    public void initialize(URL location, ResourceBundle resources) %7B%0D%0A        String \n %5B%5D%5B%5D\n@@ -939,16 +939,17 @@\n        %7B\n+ \n %22Id Util\n@@ -957,17 +957,16 @@\n sateur%22,\n- \n %22idUtili\n@@ -972,16 +972,17 @@\n isateur%22\n+ \n %7D,%0D%0A    \n@@ -998,20 +998,21 @@\n    %7B\n+ \n %22Nom%22,\n- \n %22nom%22\n+ \n %7D,%0D%0A\n@@ -1028,16 +1028,17 @@\n        %7B\n+ \n %22Pr%C3%A9nom%22\n@@ -1042,17 +1042,16 @@\n om%22,\n- \n %22prenom%22\n %7D,%0D%0A\n@@ -1046,16 +1046,17 @@\n %22prenom%22\n+ \n %7D,%0D%0A    \n@@ -1072,16 +1072,17 @@\n    %7B\n+ \n %22Email%22,\n  %22em\n@@ -1081,16 +1081,16 @@\n il%22,\n- \n %22email%22\n+ \n %7D,%0D%0A\n@@ -1110,22 +1110,23 @@\n    %7B\n+ \n %22R%C3%B4le%22,\n- \n %22role%22\n+ \n %7D,%0D%0A\n@@ -1152,16 +1152,17 @@\n    for (\n+ \n int i = \n@@ -1162,16 +1162,17 @@\n nt i = 0\n+ \n ; i %3C co\n@@ -1188,15 +1188,17 @@\n ngth\n+ \n ; i\n+ \n ++\n-)\n  \n+)\n %7B%0D%0A \n@@ -1228,25 +1228,24 @@\n Utilisateur,\n- \n String%3E maCo\n@@ -1381,17 +1381,16 @@\n isateur,\n- \n String%3E(\n@@ -1424,1163 +1424,187 @@\n     \n-maCol.setPrefWidth(150); // D%C3%A9finir une largeur pour chaque colonne%0D%0A            tableauUser.getColumns().add(maCol);%0D%0A        %7D%0D%0A        %0D%0A        // Chargement des utilisateurs%0D%0A        chargerUtilisateurs();%0D%0A        %0D%0A        // Effacer le message apr%C3%A8s 3 secondes%0D%0A        messageLabel.textProperty().addListener((observable, oldValue, newValue) -%3E %7B%0D%0A            if (newValue != null &amp;&amp; !newValue.isEmpty()) %7B%0D%0A                new Thread(() -%3E %7B%0D%0A                    try %7B%0D%0A                        Thread.sleep(3000);%0D%0A                        javafx.application.Platform.runLater(() -%3E messageLabel.setText(%22%22));%0D%0A                    %7D catch (InterruptedException e) %7B%0D%0A                        e.printStackTrace();%0D%0A                    %7D%0D%0A                %7D).start();%0D%0A            %7D%0D%0A        %7D);%0D%0A    %7D%0D%0A    %0D%0A    /**%0D%0A     * Charge tous les utilisateurs depuis la base de donn%C3%A9es%0D%0A     */%0D%0A    private void chargerUtilisateurs() %7B%0D%0A        ArrayList%3CUtilisateur%3E utilisateurs = utilisateurRepository.getAllUtilisateurs();%0D%0A        listeUtilisateurs = FXCollections.observableArrayList(utilisateurs);%0D%0A        tableauUser.setItems(listeUtilisateurs);\n+tableauUser.getColumns().add(maCol);%0D%0A        %7D%0D%0A        UtilisateurRepository us = new UtilisateurRepository();%0D%0A        tableauUser.getItems().addAll(us.getAllUtilisateurs());%0D%0A\n %0D%0A  \n@@ -1600,38 +1600,32 @@\n s());%0D%0A%0D%0A    %7D%0D%0A\n-    %0D%0A\n     @FXML%0D%0A    p\n@@ -1865,5128 +1865,900 @@\n     \n-    modifierBtn.setDisable(false);%0D%0A            tachesBtn.setDisable(false);%0D%0A        %7D else %7B%0D%0A            userSupp.setDisable(true);%0D%0A            modifierBtn.setDisable(true);%0D%0A            tachesBtn.setDisable(true);%0D%0A        %7D%0D%0A        %0D%0A        // Double-clic pour modifier un utilisateur%0D%0A        if (mouseEvent.getClickCount() == 2) %7B%0D%0A            if (selection != null) %7B%0D%0A                modifierUtilisateur();%0D%0A            %7D%0D%0A        %7D%0D%0A    %7D%0D%0A%0D%0A    @FXML%0D%0A    public void supprimer(ActionEvent actionEvent) %7B%0D%0A        Utilisateur utilisateurSelectionne = tableauUser.getSelectionModel().getSelectedItem();%0D%0A%0D%0A        if (utilisateurSelectionne != null) %7B%0D%0A            boolean supprime = utilisateurRepository.supprimerUtilisateurParEmail(utilisateurSelectionne.getEmail());%0D%0A            %0D%0A            if (supprime) %7B%0D%0A                tableauUser.getItems().remove(utilisateurSelectionne);%0D%0A                messageLabel.setText(%22Utilisateur supprim%C3%A9 avec succ%C3%A8s !%22);%0D%0A                messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);%0D%0A            %7D else %7B%0D%0A                messageLabel.setText(%22Erreur lors de la suppression de l'utilisateur.%22);%0D%0A                messageLabel.setTextFill(javafx.scene.paint.Color.RED);%0D%0A            %7D%0D%0A            %0D%0A            // R%C3%A9initialiser les boutons%0D%0A            userSupp.setDisable(true);%0D%0A            modifierBtn.setDisable(true);%0D%0A            tachesBtn.setDisable(true);%0D%0A        %7D%0D%0A    %7D%0D%0A    %0D%0A    @FXML%0D%0A    public void gererTaches() %7B%0D%0A        Utilisateur utilisateurSelectionne = tableauUser.getSelectionModel().getSelectedItem();%0D%0A        %0D%0A        if (utilisateurSelectionne != null) %7B%0D%0A            try %7B%0D%0A                StartApplication.changeScene(%22user/TodoList%22);%0D%0A                TodoListController controller = (TodoListController)%0D%0A                        StartApplication.getControllerFromStage();%0D%0A                controller.initData(utilisateurSelectionne);%0D%0A                messageLabel.setText(%22Chargement des t%C3%A2ches de l'utilisateur...%22);%0D%0A                messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);%0D%0A            %7D catch (IOException e) %7B%0D%0A                messageLabel.setText(%22Erreur lors de l'ouverture de la page des t%C3%A2ches.%22);%0D%0A                messageLabel.setTextFill(javafx.scene.paint.Color.RED);%0D%0A                e.printStackTrace();%0D%0A            %7D%0D%0A        %7D%0D%0A    %7D%0D%0A    %0D%0A    @FXML%0D%0A    public void modifierUtilisateur() %7B%0D%0A        Utilisateur utilisateurSelectionne = tableauUser.getSelectionModel().getSelectedItem();%0D%0A        %0D%0A        if (utilisateurSelectionne != null) %7B%0D%0A            try %7B%0D%0A                StartApplication.changeScene(%22user/modificationUser%22);%0D%0A                ModificationUserController controller = (ModificationUserController)%0D%0A                        StartApplication.getControllerFromStage();%0D%0A                controller.initData(utilisateurSelectionne);%0D%0A            %7D catch (IOException e) %7B%0D%0A                messageLabel.setText(%22Erreur lors de l'ouverture de la page de modification.%22);%0D%0A                messageLabel.setTextFill(javafx.scene.paint.Color.RED);%0D%0A                e.printStackTrace();%0D%0A            %7D%0D%0A        %7D%0D%0A    %7D%0D%0A    %0D%0A    @FXML%0D%0A    public void ajouterUtilisateur() %7B%0D%0A        try %7B%0D%0A            StartApplication.changeScene(%22accueil/Inscription%22);%0D%0A        %7D catch (IOException e) %7B%0D%0A            messageLabel.setText(%22Erreur lors de l'ouverture de la page d'inscription.%22);%0D%0A            messageLabel.setTextFill(javafx.scene.paint.Color.RED);%0D%0A            e.printStackTrace();%0D%0A        %7D%0D%0A    %7D%0D%0A    %0D%0A    @FXML%0D%0A    public void rechercher() %7B%0D%0A        String recherche = rechercheField.getText().toLowerCase().trim();%0D%0A        %0D%0A        if (recherche.isEmpty()) %7B%0D%0A            tableauUser.setItems(listeUtilisateurs);%0D%0A            return;%0D%0A        %7D%0D%0A        %0D%0A        // Filtrer les utilisateurs selon le texte de recherche%0D%0A        ObservableList%3CUtilisateur%3E utilisateursFiltres = listeUtilisateurs.stream()%0D%0A                .filter(u -%3E u.getNom().toLowerCase().contains(recherche) %7C%7C%0D%0A                        u.getPrenom().toLowerCase().contains(recherche) %7C%7C%0D%0A                        u.getEmail().toLowerCase().contains(recherche) %7C%7C%0D%0A                        (u.getRole() != null &amp;&amp; u.getRole().toLowerCase().contains(recherche)))%0D%0A                .collect(Collectors.toCollection(FXCollections::observableArrayList));%0D%0A        %0D%0A        tableauUser.setItems(utilisateursFiltres);%0D%0A        %0D%0A        if (utilisateursFiltres.isEmpty()) %7B%0D%0A            messageLabel.setText(%22Aucun utilisateur trouv%C3%A9 pour cette recherche.%22);%0D%0A            messageLabel.setTextFill(javafx.scene.paint.Color.ORANGE);%0D%0A        %7D else %7B%0D%0A            messageLabel.setText(utilisateursFiltres.size() + %22 utilisateur(s) trouv%C3%A9(s).%22);%0D%0A            messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);%0D%0A        %7D%0D%0A    %7D%0D%0A    %0D%0A    @FXML%0D%0A    public void resetRecherche() %7B%0D%0A        rechercheField.clear();%0D%0A        tableauUser.setItems(listeUtilisateurs);%0D%0A        messageLabel.setText(%22Recherche r%C3%A9initialis%C3%A9e.%22);%0D%0A        messageLabel.setTextFill(javafx.scene.paint.Color.GREEN\n+%7Delse%7B%0D%0A            userSupp.setDisable(true);%0D%0A        %7D%0D%0A        if (mouseEvent.getClickCount() == 2) %7B%0D%0A            if (selection != null) %7B%0D%0A                StartApplication.changeScene(%22user/modificationUser%22);%0D%0A                ModificationUserController controller = (ModificationUserController)%0D%0A                        StartApplication. getControllerFromStage();%0D%0A                controller.initData(selection);%0D%0A            %7D%0D%0A        %7D%0D%0A    %7D%0D%0A%0D%0A    @FXML%0D%0A    public void supprimer(ActionEvent actionEvent) %7B%0D%0A        Utilisateur utilisateurSelectionne = tableauUser.getSelectionModel().getSelectedItem();%0D%0A%0D%0A        if (utilisateurSelectionne != null) %7B%0D%0A            UtilisateurRepository rep = new UtilisateurRepository();%0D%0A            rep.supprimerUtilisateurParEmail(utilisateurSelectionne.getEmail());%0D%0A%0D%0A        %7D%0D%0A        tableauUser.getItems().remove(utilisateurSelectionne\n );%0D%0A\n&quot;,&quot;isNew&quot;:false,&quot;isApplied&quot;:true}]}],&quot;context&quot;:{&quot;author&quot;:&quot;Coding Agent&quot;,&quot;operationId&quot;:&quot;76f223ac-ed20-4ae7-9945-61f98506409b&quot;},&quot;createdAt&quot;:1746739438484,&quot;isInternal&quot;:false},{&quot;id&quot;:&quot;b925c8e8-fb52-41ce-a557-e64e8b5cd0ae&quot;,&quot;role&quot;:&quot;user&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;peux tu m'aider a faire l'interface d'une application todo list sur la page gestion user avec cette base de donnée&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;-- phpMyAdmin SQL Dump&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;-- version 5.2.1&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;-- https://www.phpmyadmin.net/&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;--&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;-- Host: 127.0.0.1:3306&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;-- Generation Time: May 08, 2025 at 09:30 PM&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;-- Server version: 8.3.0&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;-- PHP Version: 8.2.18&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;SET SQL_MODE = \&quot;NO_AUTO_VALUE_ON_ZERO\&quot;;&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;START TRANSACTION;&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;SET time_zone = \&quot;+00:00\&quot;;&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;/*!40101 SET NAMES utf8mb4 */;&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;--&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;-- Database: `cours_todolist`&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;--&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;-- --------------------------------------------------------&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;--&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;-- Table structure for table `liste`&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;--&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;DROP TABLE IF EXISTS `liste`;&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;CREATE TABLE IF NOT EXISTS `liste` (&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;  `id_liste` int NOT NULL AUTO_INCREMENT,&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;  `nom` varchar(255) NOT NULL,&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;  PRIMARY KEY (`id_liste`)&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;-- --------------------------------------------------------&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;--&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;-- Table structure for table `tache`&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;--&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;DROP TABLE IF EXISTS `tache`;&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;CREATE TABLE IF NOT EXISTS `tache` (&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;  `id_tache` int NOT NULL AUTO_INCREMENT,&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;  `nom` varchar(255) NOT NULL,&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;  `etat` int NOT NULL,&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;  `ref_liste` int NOT NULL,&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;  `ref_type` int NOT NULL,&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;  PRIMARY KEY (`id_tache`),&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;  KEY `fk_tache_liste` (`ref_liste`),&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;  KEY `fk_tache_type` (`ref_type`)&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;-- --------------------------------------------------------&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;--&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;-- Table structure for table `type`&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;--&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;DROP TABLE IF EXISTS `type`;&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;CREATE TABLE IF NOT EXISTS `type` (&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;  `id_type` int NOT NULL AUTO_INCREMENT,&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;  `nom` varchar(255) NOT NULL,&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;  `code_couleur` varchar(7) NOT NULL,&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;  PRIMARY KEY (`id_type`)&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;-- --------------------------------------------------------&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;--&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;-- Table structure for table `utilisateur`&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;--&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;DROP TABLE IF EXISTS `utilisateur`;&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;CREATE TABLE IF NOT EXISTS `utilisateur` (&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;  `id_utilisateur` int NOT NULL AUTO_INCREMENT,&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;  `nom` varchar(50) NOT NULL,&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;  `prenom` varchar(50) NOT NULL,&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;  `email` varchar(255) NOT NULL,&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;  `mot_de_passe` varchar(255) NOT NULL,&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;  `role` varchar(50) NOT NULL DEFAULT 'user',&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;  PRIMARY KEY (`id_utilisateur`),&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;  UNIQUE KEY `email` (`email`)&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;) ENGINE=InnoDB AUTO_INCREMENT=44 DEFAULT CHARSET=utf8mb3;&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;--&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;-- Dumping data for table `utilisateur`&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;--&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;INSERT INTO `utilisateur` (`id_utilisateur`, `nom`, `prenom`, `email`, `mot_de_passe`, `role`) VALUES&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;(42, 'admin', 'admin', 'admin@gmail.com', '$2a$10$xsLaK8L94NiXthUuhe2vw.a5DQxTjccwwol0KHxFWvDDh0FH8eYsi', 'admin'),&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;(43, 'Test', 'Test', 'test@gmail.com', '$2a$10$.xo/V0.9XHszXNajKthFG.dMDnatrb0nRRHPtqAA/PCGwyoNgSlP6', 'user');&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;-- --------------------------------------------------------&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;--&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;-- Table structure for table `utilisateur_liste`&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;--&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;DROP TABLE IF EXISTS `utilisateur_liste`;&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;CREATE TABLE IF NOT EXISTS `utilisateur_liste` (&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;  `ref_utilisateur` int NOT NULL,&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;  `ref_liste` int NOT NULL,&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;  PRIMARY KEY (`ref_utilisateur`,`ref_liste`),&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;  KEY `fk_utilisateur_liste_liste` (`ref_liste`)&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;--&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;-- Constraints for dumped tables&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;--&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;--&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;-- Constraints for table `tache`&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;--&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;ALTER TABLE `tache`&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;  ADD CONSTRAINT `fk_tache_liste` FOREIGN KEY (`ref_liste`) REFERENCES `liste` (`id_liste`),&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;  ADD CONSTRAINT `fk_tache_type` FOREIGN KEY (`ref_type`) REFERENCES `type` (`id_type`);&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;--&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;-- Constraints for table `utilisateur_liste`&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;--&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;ALTER TABLE `utilisateur_liste`&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;  ADD CONSTRAINT `fk_utilisateur_liste_liste` FOREIGN KEY (`ref_liste`) REFERENCES `liste` (`id_liste`),&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;  ADD CONSTRAINT `fk_utilisateur_liste_utilisateur` FOREIGN KEY (`ref_utilisateur`) REFERENCES `utilisateur` (`id_utilisateur`);&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;COMMIT;&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;&quot;}],&quot;context&quot;:{&quot;currentFile&quot;:{&quot;path&quot;:&quot;src\\main\\java\\appli\\accueil\\GestionUserController.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\appli\\accueil\\GestionUserController.java&quot;,&quot;sources&quot;:[&quot;opened_tab&quot;],&quot;content&quot;:&quot;package appli.accueil;\r\nimport appli.StartApplication;\r\nimport appli.user.ModificationUserController;\r\nimport appli.user.TodoListController;\r\nimport javafx.collections.FXCollections;\r\nimport javafx.collections.ObservableList;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.Initializable;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.control.TableColumn;\r\nimport javafx.scene.control.TableView;\r\nimport javafx.scene.control.TextField;\r\nimport javafx.scene.control.cell.PropertyValueFactory;\r\nimport javafx.scene.input.MouseEvent;\r\nimport model.Utilisateur;\r\nimport repository.UtilisateurRepository;\r\nimport session.SessionUtilisateur;\r\n\r\nimport java.io.IOException;\r\nimport java.net.URL;\r\nimport java.util.ArrayList;\r\nimport java.util.ResourceBundle;\r\nimport java.util.stream.Collectors;\r\n\r\npublic class GestionUserController implements Initializable {\r\n    @FXML\r\n    private TableView&lt;Utilisateur&gt; tableauUser;\r\n\r\n    @FXML\r\n    private Button userSupp;\r\n    \r\n    @FXML\r\n    private Button modifierBtn;\r\n    \r\n    @FXML\r\n    private TextField rechercheField;\r\n    \r\n    @FXML\r\n    private Label messageLabel;\r\n    \r\n    @FXML\r\n    private Button tachesBtn;\r\n    \r\n    private ObservableList&lt;Utilisateur&gt; listeUtilisateurs;\r\n    private UtilisateurRepository utilisateurRepository;\r\n\r\n    @Override\r\n    public void initialize(URL location, ResourceBundle resources) {\r\n        utilisateurRepository = new UtilisateurRepository();\r\n        \r\n        // Configuration des colonnes du tableau\r\n        String[][] colonnes = {\r\n                {\&quot;Id Utilisateur\&quot;, \&quot;idUtilisateur\&quot;},\r\n                {\&quot;Nom\&quot;, \&quot;nom\&quot;},\r\n                {\&quot;Prénom\&quot;, \&quot;prenom\&quot;},\r\n                {\&quot;Email\&quot;, \&quot;email\&quot;},\r\n                {\&quot;Rôle\&quot;, \&quot;role\&quot;},\r\n        };\r\n\r\n        for (int i = 0; i &lt; colonnes.length; i++) {\r\n            TableColumn&lt;Utilisateur, String&gt; maCol = new TableColumn&lt;&gt;(colonnes[i][0]);\r\n            maCol.setCellValueFactory(\r\n                    new PropertyValueFactory&lt;Utilisateur, String&gt;(colonnes[i][1]));\r\n            maCol.setPrefWidth(150); // Définir une largeur pour chaque colonne\r\n            tableauUser.getColumns().add(maCol);\r\n        }\r\n        \r\n        // Chargement des utilisateurs\r\n        chargerUtilisateurs();\r\n        \r\n        // Effacer le message après 3 secondes\r\n        messageLabel.textProperty().addListener((observable, oldValue, newValue) -&gt; {\r\n            if (newValue != null &amp;&amp; !newValue.isEmpty()) {\r\n                new Thread(() -&gt; {\r\n                    try {\r\n                        Thread.sleep(3000);\r\n                        javafx.application.Platform.runLater(() -&gt; messageLabel.setText(\&quot;\&quot;));\r\n                    } catch (InterruptedException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                }).start();\r\n            }\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * Charge tous les utilisateurs depuis la base de données\r\n     */\r\n    private void chargerUtilisateurs() {\r\n        ArrayList&lt;Utilisateur&gt; utilisateurs = utilisateurRepository.getAllUtilisateurs();\r\n        listeUtilisateurs = FXCollections.observableArrayList(utilisateurs);\r\n        tableauUser.setItems(listeUtilisateurs);\r\n    }\r\n    \r\n    @FXML\r\n    public void cliqueTableau(MouseEvent mouseEvent) throws IOException {\r\n        Utilisateur selection = tableauUser.getSelectionModel().getSelectedItem();\r\n        if (selection != null) {\r\n            userSupp.setDisable(false);\r\n            modifierBtn.setDisable(false);\r\n            tachesBtn.setDisable(false);\r\n        } else {\r\n            userSupp.setDisable(true);\r\n            modifierBtn.setDisable(true);\r\n            tachesBtn.setDisable(true);\r\n        }\r\n        \r\n        // Double-clic pour modifier un utilisateur\r\n        if (mouseEvent.getClickCount() == 2) {\r\n            if (selection != null) {\r\n                modifierUtilisateur();\r\n            }\r\n        }\r\n    }\r\n\r\n    @FXML\r\n    public void supprimer(ActionEvent actionEvent) {\r\n        Utilisateur utilisateurSelectionne = tableauUser.getSelectionModel().getSelectedItem();\r\n\r\n        if (utilisateurSelectionne != null) {\r\n            boolean supprime = utilisateurRepository.supprimerUtilisateurParEmail(utilisateurSelectionne.getEmail());\r\n            \r\n            if (supprime) {\r\n                tableauUser.getItems().remove(utilisateurSelectionne);\r\n                messageLabel.setText(\&quot;Utilisateur supprimé avec succès !\&quot;);\r\n                messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);\r\n            } else {\r\n                messageLabel.setText(\&quot;Erreur lors de la suppression de l'utilisateur.\&quot;);\r\n                messageLabel.setTextFill(javafx.scene.paint.Color.RED);\r\n            }\r\n            \r\n            // Réinitialiser les boutons\r\n            userSupp.setDisable(true);\r\n            modifierBtn.setDisable(true);\r\n            tachesBtn.setDisable(true);\r\n        }\r\n    }\r\n    \r\n    @FXML\r\n    public void gererTaches() {\r\n        Utilisateur utilisateurSelectionne = tableauUser.getSelectionModel().getSelectedItem();\r\n        \r\n        if (utilisateurSelectionne != null) {\r\n            try {\r\n                StartApplication.changeScene(\&quot;user/TodoList\&quot;);\r\n                TodoListController controller = (TodoListController)\r\n                        StartApplication.getControllerFromStage();\r\n                controller.initData(utilisateurSelectionne);\r\n                messageLabel.setText(\&quot;Chargement des tâches de l'utilisateur...\&quot;);\r\n                messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);\r\n            } catch (IOException e) {\r\n                messageLabel.setText(\&quot;Erreur lors de l'ouverture de la page des tâches.\&quot;);\r\n                messageLabel.setTextFill(javafx.scene.paint.Color.RED);\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n    }\r\n    \r\n    @FXML\r\n    public void modifierUtilisateur() {\r\n        Utilisateur utilisateurSelectionne = tableauUser.getSelectionModel().getSelectedItem();\r\n        \r\n        if (utilisateurSelectionne != null) {\r\n            try {\r\n                StartApplication.changeScene(\&quot;user/modificationUser\&quot;);\r\n                ModificationUserController controller = (ModificationUserController)\r\n                        StartApplication.getControllerFromStage();\r\n                controller.initData(utilisateurSelectionne);\r\n            } catch (IOException e) {\r\n                messageLabel.setText(\&quot;Erreur lors de l'ouverture de la page de modification.\&quot;);\r\n                messageLabel.setTextFill(javafx.scene.paint.Color.RED);\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n    }\r\n    \r\n    @FXML\r\n    public void ajouterUtilisateur() {\r\n        try {\r\n            StartApplication.changeScene(\&quot;accueil/Inscription\&quot;);\r\n        } catch (IOException e) {\r\n            messageLabel.setText(\&quot;Erreur lors de l'ouverture de la page d'inscription.\&quot;);\r\n            messageLabel.setTextFill(javafx.scene.paint.Color.RED);\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n    \r\n    @FXML\r\n    public void rechercher() {\r\n        String recherche = rechercheField.getText().toLowerCase().trim();\r\n        \r\n        if (recherche.isEmpty()) {\r\n            tableauUser.setItems(listeUtilisateurs);\r\n            return;\r\n        }\r\n        \r\n        // Filtrer les utilisateurs selon le texte de recherche\r\n        ObservableList&lt;Utilisateur&gt; utilisateursFiltres = listeUtilisateurs.stream()\r\n                .filter(u -&gt; u.getNom().toLowerCase().contains(recherche) ||\r\n                        u.getPrenom().toLowerCase().contains(recherche) ||\r\n                        u.getEmail().toLowerCase().contains(recherche) ||\r\n                        (u.getRole() != null &amp;&amp; u.getRole().toLowerCase().contains(recherche)))\r\n                .collect(Collectors.toCollection(FXCollections::observableArrayList));\r\n        \r\n        tableauUser.setItems(utilisateursFiltres);\r\n        \r\n        if (utilisateursFiltres.isEmpty()) {\r\n            messageLabel.setText(\&quot;Aucun utilisateur trouvé pour cette recherche.\&quot;);\r\n            messageLabel.setTextFill(javafx.scene.paint.Color.ORANGE);\r\n        } else {\r\n            messageLabel.setText(utilisateursFiltres.size() + \&quot; utilisateur(s) trouvé(s).\&quot;);\r\n            messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);\r\n        }\r\n    }\r\n    \r\n    @FXML\r\n    public void resetRecherche() {\r\n        rechercheField.clear();\r\n        tableauUser.setItems(listeUtilisateurs);\r\n        messageLabel.setText(\&quot;Recherche réinitialisée.\&quot;);\r\n        messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);\r\n    }\r\n\r\n    @FXML\r\n    public void retour(ActionEvent actionEvent) throws IOException {\r\n        StartApplication.changeScene(\&quot;accueil/Accueil\&quot;);\r\n    }\r\n}\r\n&quot;},&quot;codebaseEnabled&quot;:true},&quot;createdAt&quot;:1746740034916,&quot;isInternal&quot;:false,&quot;rawContent&quot;:{&quot;type&quot;:&quot;doc&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;peux tu m'aider a faire l'interface d'une application todo list sur la page gestion user avec cette base de donnée&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;-- phpMyAdmin SQL Dump&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;-- version 5.2.1&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;-- https://www.phpmyadmin.net/&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;--&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;-- Host: 127.0.0.1:3306&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;-- Generation Time: May 08, 2025 at 09:30 PM&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;-- Server version: 8.3.0&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;-- PHP Version: 8.2.18&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;SET SQL_MODE = \&quot;NO_AUTO_VALUE_ON_ZERO\&quot;;&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;START TRANSACTION;&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;SET time_zone = \&quot;+00:00\&quot;;&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;/*!40101 SET NAMES utf8mb4 */;&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;--&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;-- Database: `cours_todolist`&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;--&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;-- --------------------------------------------------------&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;--&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;-- Table structure for table `liste`&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;--&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;DROP TABLE IF EXISTS `liste`;&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;CREATE TABLE IF NOT EXISTS `liste` (&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;  `id_liste` int NOT NULL AUTO_INCREMENT,&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;  `nom` varchar(255) NOT NULL,&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;  PRIMARY KEY (`id_liste`)&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;-- --------------------------------------------------------&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;--&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;-- Table structure for table `tache`&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;--&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;DROP TABLE IF EXISTS `tache`;&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;CREATE TABLE IF NOT EXISTS `tache` (&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;  `id_tache` int NOT NULL AUTO_INCREMENT,&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;  `nom` varchar(255) NOT NULL,&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;  `etat` int NOT NULL,&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;  `ref_liste` int NOT NULL,&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;  `ref_type` int NOT NULL,&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;  PRIMARY KEY (`id_tache`),&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;  KEY `fk_tache_liste` (`ref_liste`),&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;  KEY `fk_tache_type` (`ref_type`)&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;-- --------------------------------------------------------&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;--&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;-- Table structure for table `type`&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;--&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;DROP TABLE IF EXISTS `type`;&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;CREATE TABLE IF NOT EXISTS `type` (&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;  `id_type` int NOT NULL AUTO_INCREMENT,&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;  `nom` varchar(255) NOT NULL,&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;  `code_couleur` varchar(7) NOT NULL,&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;  PRIMARY KEY (`id_type`)&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;-- --------------------------------------------------------&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;--&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;-- Table structure for table `utilisateur`&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;--&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;DROP TABLE IF EXISTS `utilisateur`;&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;CREATE TABLE IF NOT EXISTS `utilisateur` (&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;  `id_utilisateur` int NOT NULL AUTO_INCREMENT,&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;  `nom` varchar(50) NOT NULL,&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;  `prenom` varchar(50) NOT NULL,&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;  `email` varchar(255) NOT NULL,&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;  `mot_de_passe` varchar(255) NOT NULL,&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;  `role` varchar(50) NOT NULL DEFAULT 'user',&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;  PRIMARY KEY (`id_utilisateur`),&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;  UNIQUE KEY `email` (`email`)&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;) ENGINE=InnoDB AUTO_INCREMENT=44 DEFAULT CHARSET=utf8mb3;&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;--&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;-- Dumping data for table `utilisateur`&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;--&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;INSERT INTO `utilisateur` (`id_utilisateur`, `nom`, `prenom`, `email`, `mot_de_passe`, `role`) VALUES&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;(42, 'admin', 'admin', 'admin@gmail.com', '$2a$10$xsLaK8L94NiXthUuhe2vw.a5DQxTjccwwol0KHxFWvDDh0FH8eYsi', 'admin'),&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;(43, 'Test', 'Test', 'test@gmail.com', '$2a$10$.xo/V0.9XHszXNajKthFG.dMDnatrb0nRRHPtqAA/PCGwyoNgSlP6', 'user');&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;-- --------------------------------------------------------&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;--&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;-- Table structure for table `utilisateur_liste`&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;--&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;DROP TABLE IF EXISTS `utilisateur_liste`;&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;CREATE TABLE IF NOT EXISTS `utilisateur_liste` (&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;  `ref_utilisateur` int NOT NULL,&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;  `ref_liste` int NOT NULL,&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;  PRIMARY KEY (`ref_utilisateur`,`ref_liste`),&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;  KEY `fk_utilisateur_liste_liste` (`ref_liste`)&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;--&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;-- Constraints for dumped tables&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;--&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;--&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;-- Constraints for table `tache`&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;--&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;ALTER TABLE `tache`&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;  ADD CONSTRAINT `fk_tache_liste` FOREIGN KEY (`ref_liste`) REFERENCES `liste` (`id_liste`),&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;  ADD CONSTRAINT `fk_tache_type` FOREIGN KEY (`ref_type`) REFERENCES `type` (`id_type`);&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;--&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;-- Constraints for table `utilisateur_liste`&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;--&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;ALTER TABLE `utilisateur_liste`&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;  ADD CONSTRAINT `fk_utilisateur_liste_liste` FOREIGN KEY (`ref_liste`) REFERENCES `liste` (`id_liste`),&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;  ADD CONSTRAINT `fk_utilisateur_liste_utilisateur` FOREIGN KEY (`ref_utilisateur`) REFERENCES `utilisateur` (`id_utilisateur`);&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;COMMIT;&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;&quot;}]},{&quot;type&quot;:&quot;paragraph&quot;}]}},{&quot;id&quot;:&quot;281cb6d5-79bf-4e13-99dd-b2918d1952dd&quot;,&quot;role&quot;:&quot;assistant&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Je vais vous aider à créer une interface pour votre application de todo list en me basant sur la structure de base de données que vous avez fournie. Commençons par comprendre la structure de votre base de données et créer les modèles nécessaires.\n\nD'abord, examinons les modèles existants et créons ceux qui manquent :&quot;},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_017687yqgVxQsHqzhp7zYErm&quot;,&quot;statusText&quot;:&quot;Viewed file&quot;,&quot;status&quot;:&quot;SUCCESS&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main/java/model/Liste.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\model\\Liste.java&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Maintenant, créons les modèles manquants pour Type et Tache :&quot;},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_01NKJEddoT83x3SvtgMF751S&quot;,&quot;statusText&quot;:&quot;Change generated&quot;,&quot;status&quot;:&quot;SUCCESS&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main/java/model/Type.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\model\\Type.java&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;codeHunk&quot;,&quot;lineBasedDiff&quot;:&quot;--- src/main/java/model/Type.java\n+++ src/main/java/model/Type.java\n@@ -0,0 +1,47 @@\n+package model;\n+\n+public class Type {\n+    private int idType;\n+    private String nom;\n+    private String codeCouleur;\n+\n+    public Type(int idType, String nom, String codeCouleur) {\n+        this.idType = idType;\n+        this.nom = nom;\n+        this.codeCouleur = codeCouleur;\n+    }\n+\n+    public Type(String nom, String codeCouleur) {\n+        this.nom = nom;\n+        this.codeCouleur = codeCouleur;\n+    }\n+\n+    public int getIdType() {\n+        return idType;\n+    }\n+\n+    public void setIdType(int idType) {\n+        this.idType = idType;\n+    }\n+\n+    public String getNom() {\n+        return nom;\n+    }\n+\n+    public void setNom(String nom) {\n+        this.nom = nom;\n+    }\n+\n+    public String getCodeCouleur() {\n+        return codeCouleur;\n+    }\n+\n+    public void setCodeCouleur(String codeCouleur) {\n+        this.codeCouleur = codeCouleur;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return nom;\n+    }\n+}&quot;,&quot;refToolCallId&quot;:&quot;toolu_01NKJEddoT83x3SvtgMF751S&quot;},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_01UTJrurL5V9MyvAip6bkGPB&quot;,&quot;title&quot;:&quot;&quot;,&quot;statusText&quot;:&quot;File already exists&quot;,&quot;status&quot;:&quot;WARNING&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main/java/model/Tache.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\model\\Tache.java&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Vérifions si le fichier Tache.java existe déjà et son contenu :&quot;},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_01X4UnZB5AEtRduQYRjB8HQx&quot;,&quot;statusText&quot;:&quot;Viewed file&quot;,&quot;status&quot;:&quot;SUCCESS&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main/java/model/Tache.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\model\\Tache.java&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Je vois que le fichier Tache.java existe déjà mais avec une structure différente de celle de votre base de données. Mettons à jour ce fichier pour qu'il corresponde à votre schéma de base de données :&quot;},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_01Tj1NnL8jgj2Z5DnVgMJEyH&quot;,&quot;statusText&quot;:&quot;Change generated&quot;,&quot;status&quot;:&quot;SUCCESS&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main/java/model/Tache.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\model\\Tache.java&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;codeHunk&quot;,&quot;lineBasedDiff&quot;:&quot;--- src/main/java/model/Tache.java\n+++ src/main/java/model/Tache.java\n@@ -1,38 +1,32 @@\n package model;\n-\n-import java.time.LocalDate;\n \n public class Tache {\n     private int idTache;\n-    private String titre;\n-    private String description;\n-    private LocalDate dateEcheance;\n-    private String priorite;\n-    private String statut;\n-    private int idUtilisateur;\n+    private String nom;\n+    private int etat; // 0 = à faire, 1 = en cours, 2 = terminée\n+    private int refListe;\n+    private int refType;\n+    \n+    // Propriétés supplémentaires pour l'affichage\n+    private String nomListe;\n+    private String nomType;\n+    private String codeCouleur;\n \n-    // Constructeur complet\n-    public Tache(int idTache, String titre, String description, LocalDate dateEcheance, String priorite, String statut, int idUtilisateur) {\n+    public Tache(int idTache, String nom, int etat, int refListe, int refType) {\n         this.idTache = idTache;\n-        this.titre = titre;\n-        this.description = description;\n-        this.dateEcheance = dateEcheance;\n-        this.priorite = priorite;\n-        this.statut = statut;\n-        this.idUtilisateur = idUtilisateur;\n+        this.nom = nom;\n+        this.etat = etat;\n+        this.refListe = refListe;\n+        this.refType = refType;\n     }\n \n-    // Constructeur sans ID (pour la création)\n-    public Tache(String titre, String description, LocalDate dateEcheance, String priorite, String statut, int idUtilisateur) {\n-        this.titre = titre;\n-        this.description = description;\n-        this.dateEcheance = dateEcheance;\n-        this.priorite = priorite;\n-        this.statut = statut;\n-        this.idUtilisateur = idUtilisateur;\n+    public Tache(String nom, int etat, int refListe, int refType) {\n+        this.nom = nom;\n+        this.etat = etat;\n+        this.refListe = refListe;\n+        this.refType = refType;\n     }\n \n-    // Getters et Setters\n     public int getIdTache() {\n         return idTache;\n     }\n@@ -41,64 +35,77 @@\n         this.idTache = idTache;\n     }\n \n-    public String getTitre() {\n-        return titre;\n+    public String getNom() {\n+        return nom;\n     }\n \n-    public void setTitre(String titre) {\n-        this.titre = titre;\n+    public void setNom(String nom) {\n+        this.nom = nom;\n     }\n \n-    public String getDescription() {\n-        return description;\n+    public int getEtat() {\n+        return etat;\n     }\n \n-    public void setDescription(String description) {\n-        this.description = description;\n+    public void setEtat(int etat) {\n+        this.etat = etat;\n     }\n \n-    public LocalDate getDateEcheance() {\n-        return dateEcheance;\n+    public int getRefListe() {\n+        return refListe;\n     }\n \n-    public void setDateEcheance(LocalDate dateEcheance) {\n-        this.dateEcheance = dateEcheance;\n+    public void setRefListe(int refListe) {\n+        this.refListe = refListe;\n     }\n \n-    public String getPriorite() {\n-        return priorite;\n+    public int getRefType() {\n+        return refType;\n     }\n \n-    public void setPriorite(String priorite) {\n-        this.priorite = priorite;\n+    public void setRefType(int refType) {\n+        this.refType = refType;\n+    }\n+    \n+    public String getNomListe() {\n+        return nomListe;\n     }\n \n-    public String getStatut() {\n-        return statut;\n+    public void setNomListe(String nomListe) {\n+        this.nomListe = nomListe;\n     }\n \n-    public void setStatut(String statut) {\n-        this.statut = statut;\n+    public String getNomType() {\n+        return nomType;\n     }\n \n-    public int getIdUtilisateur() {\n-        return idUtilisateur;\n+    public void setNomType(String nomType) {\n+        this.nomType = nomType;\n     }\n \n-    public void setIdUtilisateur(int idUtilisateur) {\n-        this.idUtilisateur = idUtilisateur;\n+    public String getCodeCouleur() {\n+        return codeCouleur;\n+    }\n+\n+    public void setCodeCouleur(String codeCouleur) {\n+        this.codeCouleur = codeCouleur;\n+    }\n+    \n+    public String getEtatString() {\n+        switch (etat) {\n+            case 0:\n+                return \&quot;À faire\&quot;;\n+            case 1:\n+                return \&quot;En cours\&quot;;\n+            case 2:\n+                return \&quot;Terminée\&quot;;\n+            default:\n+                return \&quot;Inconnu\&quot;;\n+        }\n     }\n \n     @Override\n     public String toString() {\n-        return \&quot;Tache{\&quot; +\n-                \&quot;idTache=\&quot; + idTache +\n-                \&quot;, titre='\&quot; + titre + '\\'' +\n-                \&quot;, description='\&quot; + description + '\\'' +\n-                \&quot;, dateEcheance=\&quot; + dateEcheance +\n-                \&quot;, priorite='\&quot; + priorite + '\\'' +\n-                \&quot;, statut='\&quot; + statut + '\\'' +\n-                \&quot;, idUtilisateur=\&quot; + idUtilisateur +\n-                '}';\n+        return nom;\n     }\n }&quot;,&quot;refToolCallId&quot;:&quot;toolu_01Tj1NnL8jgj2Z5DnVgMJEyH&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Maintenant, créons les repositories nécessaires pour interagir avec la base de données. Commençons par le repository pour les listes :&quot;},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_01PUecE1PfzjNHopzAEmGQ6F&quot;,&quot;statusText&quot;:&quot;Change generated&quot;,&quot;status&quot;:&quot;SUCCESS&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main/java/repository/ListeRepository.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\repository\\ListeRepository.java&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;codeHunk&quot;,&quot;lineBasedDiff&quot;:&quot;--- src/main/java/repository/ListeRepository.java\n+++ src/main/java/repository/ListeRepository.java\n@@ -0,0 +1,163 @@\n+package repository;\n+\n+import database.Database;\n+import model.Liste;\n+import model.Utilisateur;\n+\n+import java.sql.*;\n+import java.util.ArrayList;\n+\n+public class ListeRepository {\n+    private Connection connection;\n+\n+    public ListeRepository() {\n+        connection = Database.getConnexion();\n+    }\n+\n+    /**\n+     * Ajoute une nouvelle liste\n+     * @param liste La liste à ajouter\n+     * @return L'ID de la liste créée, ou -1 en cas d'erreur\n+     */\n+    public int ajouterListe(Liste liste) {\n+        String sql = \&quot;INSERT INTO liste (nom) VALUES (?)\&quot;;\n+        try {\n+            PreparedStatement stmt = connection.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);\n+            stmt.setString(1, liste.getNom());\n+            \n+            int affectedRows = stmt.executeUpdate();\n+            \n+            if (affectedRows &gt; 0) {\n+                ResultSet generatedKeys = stmt.getGeneratedKeys();\n+                if (generatedKeys.next()) {\n+                    return generatedKeys.getInt(1);\n+                }\n+            }\n+        } catch (SQLException e) {\n+            System.out.println(\&quot;Erreur lors de l'ajout de la liste : \&quot; + e.getMessage());\n+        }\n+        return -1;\n+    }\n+\n+    /**\n+     * Associe une liste à un utilisateur\n+     * @param idListe L'ID de la liste\n+     * @param idUtilisateur L'ID de l'utilisateur\n+     * @return true si l'association a réussi, false sinon\n+     */\n+    public boolean associerListeUtilisateur(int idListe, int idUtilisateur) {\n+        String sql = \&quot;INSERT INTO utilisateur_liste (ref_utilisateur, ref_liste) VALUES (?, ?)\&quot;;\n+        try {\n+            PreparedStatement stmt = connection.prepareStatement(sql);\n+            stmt.setInt(1, idUtilisateur);\n+            stmt.setInt(2, idListe);\n+            \n+            int rowsInserted = stmt.executeUpdate();\n+            return rowsInserted &gt; 0;\n+        } catch (SQLException e) {\n+            System.out.println(\&quot;Erreur lors de l'association liste-utilisateur : \&quot; + e.getMessage());\n+            return false;\n+        }\n+    }\n+\n+    /**\n+     * Récupère toutes les listes d'un utilisateur\n+     * @param idUtilisateur L'ID de l'utilisateur\n+     * @return Une liste de listes\n+     */\n+    public ArrayList&lt;Liste&gt; getListesParUtilisateur(int idUtilisateur) {\n+        ArrayList&lt;Liste&gt; listes = new ArrayList&lt;&gt;();\n+        String sql = \&quot;SELECT l.* FROM liste l \&quot; +\n+                     \&quot;JOIN utilisateur_liste ul ON l.id_liste = ul.ref_liste \&quot; +\n+                     \&quot;WHERE ul.ref_utilisateur = ?\&quot;;\n+        \n+        try {\n+            PreparedStatement stmt = connection.prepareStatement(sql);\n+            stmt.setInt(1, idUtilisateur);\n+            ResultSet rs = stmt.executeQuery();\n+            \n+            while (rs.next()) {\n+                Liste liste = new Liste(rs.getInt(\&quot;id_liste\&quot;));\n+                liste.setNom(rs.getString(\&quot;nom\&quot;));\n+                listes.add(liste);\n+            }\n+        } catch (SQLException e) {\n+            System.out.println(\&quot;Erreur lors de la récupération des listes : \&quot; + e.getMessage());\n+        }\n+        return listes;\n+    }\n+\n+    /**\n+     * Récupère une liste par son ID\n+     * @param idListe L'ID de la liste\n+     * @return La liste ou null si non trouvée\n+     */\n+    public Liste getListeParId(int idListe) {\n+        String sql = \&quot;SELECT * FROM liste WHERE id_liste = ?\&quot;;\n+        try {\n+            PreparedStatement stmt = connection.prepareStatement(sql);\n+            stmt.setInt(1, idListe);\n+            ResultSet rs = stmt.executeQuery();\n+            \n+            if (rs.next()) {\n+                Liste liste = new Liste(rs.getInt(\&quot;id_liste\&quot;));\n+                liste.setNom(rs.getString(\&quot;nom\&quot;));\n+                return liste;\n+            }\n+        } catch (SQLException e) {\n+            System.out.println(\&quot;Erreur lors de la récupération de la liste : \&quot; + e.getMessage());\n+        }\n+        return null;\n+    }\n+\n+    /**\n+     * Met à jour une liste existante\n+     * @param liste La liste à mettre à jour\n+     * @return true si la mise à jour a réussi, false sinon\n+     */\n+    public boolean mettreAJourListe(Liste liste) {\n+        String sql = \&quot;UPDATE liste SET nom = ? WHERE id_liste = ?\&quot;;\n+        try {\n+            PreparedStatement stmt = connection.prepareStatement(sql);\n+            stmt.setString(1, liste.getNom());\n+            stmt.setInt(2, liste.getIdListe());\n+            \n+            int rowsUpdated = stmt.executeUpdate();\n+            return rowsUpdated &gt; 0;\n+        } catch (SQLException e) {\n+            System.out.println(\&quot;Erreur lors de la mise à jour de la liste : \&quot; + e.getMessage());\n+            return false;\n+        }\n+    }\n+\n+    /**\n+     * Supprime une liste\n+     * @param idListe L'ID de la liste à supprimer\n+     * @return true si la suppression a réussi, false sinon\n+     */\n+    public boolean supprimerListe(int idListe) {\n+        // D'abord supprimer les associations avec les utilisateurs\n+        String sqlAssoc = \&quot;DELETE FROM utilisateur_liste WHERE ref_liste = ?\&quot;;\n+        try {\n+            PreparedStatement stmtAssoc = connection.prepareStatement(sqlAssoc);\n+            stmtAssoc.setInt(1, idListe);\n+            stmtAssoc.executeUpdate();\n+        } catch (SQLException e) {\n+            System.out.println(\&quot;Erreur lors de la suppression des associations : \&quot; + e.getMessage());\n+            return false;\n+        }\n+        \n+        // Ensuite supprimer la liste\n+        String sql = \&quot;DELETE FROM liste WHERE id_liste = ?\&quot;;\n+        try {\n+            PreparedStatement stmt = connection.prepareStatement(sql);\n+            stmt.setInt(1, idListe);\n+            \n+            int rowsDeleted = stmt.executeUpdate();\n+            return rowsDeleted &gt; 0;\n+        } catch (SQLException e) {\n+            System.out.println(\&quot;Erreur lors de la suppression de la liste : \&quot; + e.getMessage());\n+            return false;\n+        }\n+    }\n+}&quot;,&quot;refToolCallId&quot;:&quot;toolu_01PUecE1PfzjNHopzAEmGQ6F&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Créons maintenant le repository pour les types :&quot;},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_019uQoMGZ8hQcZQUuFSZTtCx&quot;,&quot;statusText&quot;:&quot;Change generated&quot;,&quot;status&quot;:&quot;SUCCESS&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main/java/repository/TypeRepository.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\repository\\TypeRepository.java&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;codeHunk&quot;,&quot;lineBasedDiff&quot;:&quot;--- src/main/java/repository/TypeRepository.java\n+++ src/main/java/repository/TypeRepository.java\n@@ -0,0 +1,132 @@\n+package repository;\n+\n+import database.Database;\n+import model.Type;\n+\n+import java.sql.*;\n+import java.util.ArrayList;\n+\n+public class TypeRepository {\n+    private Connection connection;\n+\n+    public TypeRepository() {\n+        connection = Database.getConnexion();\n+    }\n+\n+    /**\n+     * Ajoute un nouveau type\n+     * @param type Le type à ajouter\n+     * @return L'ID du type créé, ou -1 en cas d'erreur\n+     */\n+    public int ajouterType(Type type) {\n+        String sql = \&quot;INSERT INTO type (nom, code_couleur) VALUES (?, ?)\&quot;;\n+        try {\n+            PreparedStatement stmt = connection.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);\n+            stmt.setString(1, type.getNom());\n+            stmt.setString(2, type.getCodeCouleur());\n+            \n+            int affectedRows = stmt.executeUpdate();\n+            \n+            if (affectedRows &gt; 0) {\n+                ResultSet generatedKeys = stmt.getGeneratedKeys();\n+                if (generatedKeys.next()) {\n+                    return generatedKeys.getInt(1);\n+                }\n+            }\n+        } catch (SQLException e) {\n+            System.out.println(\&quot;Erreur lors de l'ajout du type : \&quot; + e.getMessage());\n+        }\n+        return -1;\n+    }\n+\n+    /**\n+     * Récupère tous les types\n+     * @return Une liste de types\n+     */\n+    public ArrayList&lt;Type&gt; getAllTypes() {\n+        ArrayList&lt;Type&gt; types = new ArrayList&lt;&gt;();\n+        String sql = \&quot;SELECT * FROM type\&quot;;\n+        \n+        try {\n+            PreparedStatement stmt = connection.prepareStatement(sql);\n+            ResultSet rs = stmt.executeQuery();\n+            \n+            while (rs.next()) {\n+                Type type = new Type(\n+                        rs.getInt(\&quot;id_type\&quot;),\n+                        rs.getString(\&quot;nom\&quot;),\n+                        rs.getString(\&quot;code_couleur\&quot;)\n+                );\n+                types.add(type);\n+            }\n+        } catch (SQLException e) {\n+            System.out.println(\&quot;Erreur lors de la récupération des types : \&quot; + e.getMessage());\n+        }\n+        return types;\n+    }\n+\n+    /**\n+     * Récupère un type par son ID\n+     * @param idType L'ID du type\n+     * @return Le type ou null si non trouvé\n+     */\n+    public Type getTypeParId(int idType) {\n+        String sql = \&quot;SELECT * FROM type WHERE id_type = ?\&quot;;\n+        try {\n+            PreparedStatement stmt = connection.prepareStatement(sql);\n+            stmt.setInt(1, idType);\n+            ResultSet rs = stmt.executeQuery();\n+            \n+            if (rs.next()) {\n+                return new Type(\n+                        rs.getInt(\&quot;id_type\&quot;),\n+                        rs.getString(\&quot;nom\&quot;),\n+                        rs.getString(\&quot;code_couleur\&quot;)\n+                );\n+            }\n+        } catch (SQLException e) {\n+            System.out.println(\&quot;Erreur lors de la récupération du type : \&quot; + e.getMessage());\n+        }\n+        return null;\n+    }\n+\n+    /**\n+     * Met à jour un type existant\n+     * @param type Le type à mettre à jour\n+     * @return true si la mise à jour a réussi, false sinon\n+     */\n+    public boolean mettreAJourType(Type type) {\n+        String sql = \&quot;UPDATE type SET nom = ?, code_couleur = ? WHERE id_type = ?\&quot;;\n+        try {\n+            PreparedStatement stmt = connection.prepareStatement(sql);\n+            stmt.setString(1, type.getNom());\n+            stmt.setString(2, type.getCodeCouleur());\n+            stmt.setInt(3, type.getIdType());\n+            \n+            int rowsUpdated = stmt.executeUpdate();\n+            return rowsUpdated &gt; 0;\n+        } catch (SQLException e) {\n+            System.out.println(\&quot;Erreur lors de la mise à jour du type : \&quot; + e.getMessage());\n+            return false;\n+        }\n+    }\n+\n+    /**\n+     * Supprime un type\n+     * @param idType L'ID du type à supprimer\n+     * @return true si la suppression a réussi, false sinon\n+     */\n+    public boolean supprimerType(int idType) {\n+        String sql = \&quot;DELETE FROM type WHERE id_type = ?\&quot;;\n+        try {\n+            PreparedStatement stmt = connection.prepareStatement(sql);\n+            stmt.setInt(1, idType);\n+            \n+            int rowsDeleted = stmt.executeUpdate();\n+            return rowsDeleted &gt; 0;\n+        } catch (SQLException e) {\n+            System.out.println(\&quot;Erreur lors de la suppression du type : \&quot; + e.getMessage());\n+            return false;\n+        }\n+    }\n+}&quot;,&quot;refToolCallId&quot;:&quot;toolu_019uQoMGZ8hQcZQUuFSZTtCx&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Créons maintenant le repository pour les tâches :&quot;},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_01XyHznCE86HSHsdLyVs3unt&quot;,&quot;title&quot;:&quot;&quot;,&quot;statusText&quot;:&quot;File already exists&quot;,&quot;status&quot;:&quot;WARNING&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main/java/repository/TacheRepository.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\repository\\TacheRepository.java&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Vérifions si le fichier TacheRepository.java existe déjà et son contenu :&quot;},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_01E8fgTY1ULZcNAnX2wEuAg3&quot;,&quot;statusText&quot;:&quot;Viewed file&quot;,&quot;status&quot;:&quot;SUCCESS&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main/java/repository/TacheRepository.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\repository\\TacheRepository.java&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Mettons à jour le TacheRepository.java pour qu'il corresponde à notre nouveau modèle de données :&quot;},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_01X3s3CNV3bWzT9KWks45u17&quot;,&quot;statusText&quot;:&quot;Change generated&quot;,&quot;status&quot;:&quot;SUCCESS&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main/java/repository/TacheRepository.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\repository\\TacheRepository.java&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;codeHunk&quot;,&quot;lineBasedDiff&quot;:&quot;--- src/main/java/repository/TacheRepository.java\n+++ src/main/java/repository/TacheRepository.java\n@@ -2,9 +2,9 @@\n \n import database.Database;\n import model.Tache;\n+import model.Type;\n \n import java.sql.*;\n-import java.time.LocalDate;\n import java.util.ArrayList;\n \n public class TacheRepository {\n@@ -15,20 +15,18 @@\n     }\n \n     /**\n-     * Ajoute une nouvelle tâche dans la base de données\n+     * Ajoute une nouvelle tâche\n      * @param tache La tâche à ajouter\n      * @return L'ID de la tâche créée, ou -1 en cas d'erreur\n      */\n     public int ajouterTache(Tache tache) {\n-        String sql = \&quot;INSERT INTO tache (titre, description, date_echeance, priorite, statut, id_utilisateur) VALUES (?, ?, ?, ?, ?, ?)\&quot;;\n+        String sql = \&quot;INSERT INTO tache (nom, etat, ref_liste, ref_type) VALUES (?, ?, ?, ?)\&quot;;\n         try {\n             PreparedStatement stmt = connection.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);\n-            stmt.setString(1, tache.getTitre());\n-            stmt.setString(2, tache.getDescription());\n-            stmt.setDate(3, tache.getDateEcheance() != null ? Date.valueOf(tache.getDateEcheance()) : null);\n-            stmt.setString(4, tache.getPriorite());\n-            stmt.setString(5, tache.getStatut());\n-            stmt.setInt(6, tache.getIdUtilisateur());\n+            stmt.setString(1, tache.getNom());\n+            stmt.setInt(2, tache.getEtat());\n+            stmt.setInt(3, tache.getRefListe());\n+            stmt.setInt(4, tache.getRefType());\n             \n             int affectedRows = stmt.executeUpdate();\n             \n@@ -45,13 +43,55 @@\n     }\n \n     /**\n+     * Récupère toutes les tâches d'une liste\n+     * @param idListe L'ID de la liste\n+     * @return Une liste de tâches\n+     */\n+    public ArrayList&lt;Tache&gt; getTachesParListe(int idListe) {\n+        ArrayList&lt;Tache&gt; taches = new ArrayList&lt;&gt;();\n+        String sql = \&quot;SELECT t.*, l.nom as nom_liste, ty.nom as nom_type, ty.code_couleur \&quot; +\n+                     \&quot;FROM tache t \&quot; +\n+                     \&quot;JOIN liste l ON t.ref_liste = l.id_liste \&quot; +\n+                     \&quot;JOIN type ty ON t.ref_type = ty.id_type \&quot; +\n+                     \&quot;WHERE t.ref_liste = ?\&quot;;\n+        \n+        try {\n+            PreparedStatement stmt = connection.prepareStatement(sql);\n+            stmt.setInt(1, idListe);\n+            ResultSet rs = stmt.executeQuery();\n+            \n+            while (rs.next()) {\n+                Tache tache = new Tache(\n+                        rs.getInt(\&quot;id_tache\&quot;),\n+                        rs.getString(\&quot;nom\&quot;),\n+                        rs.getInt(\&quot;etat\&quot;),\n+                        rs.getInt(\&quot;ref_liste\&quot;),\n+                        rs.getInt(\&quot;ref_type\&quot;)\n+                );\n+                tache.setNomListe(rs.getString(\&quot;nom_liste\&quot;));\n+                tache.setNomType(rs.getString(\&quot;nom_type\&quot;));\n+                tache.setCodeCouleur(rs.getString(\&quot;code_couleur\&quot;));\n+                taches.add(tache);\n+            }\n+        } catch (SQLException e) {\n+            System.out.println(\&quot;Erreur lors de la récupération des tâches : \&quot; + e.getMessage());\n+        }\n+        return taches;\n+    }\n+\n+    /**\n      * Récupère toutes les tâches d'un utilisateur\n      * @param idUtilisateur L'ID de l'utilisateur\n      * @return Une liste de tâches\n      */\n     public ArrayList&lt;Tache&gt; getTachesParUtilisateur(int idUtilisateur) {\n         ArrayList&lt;Tache&gt; taches = new ArrayList&lt;&gt;();\n-        String sql = \&quot;SELECT * FROM tache WHERE id_utilisateur = ? ORDER BY date_echeance ASC\&quot;;\n+        String sql = \&quot;SELECT t.*, l.nom as nom_liste, ty.nom as nom_type, ty.code_couleur \&quot; +\n+                     \&quot;FROM tache t \&quot; +\n+                     \&quot;JOIN liste l ON t.ref_liste = l.id_liste \&quot; +\n+                     \&quot;JOIN type ty ON t.ref_type = ty.id_type \&quot; +\n+                     \&quot;JOIN utilisateur_liste ul ON l.id_liste = ul.ref_liste \&quot; +\n+                     \&quot;WHERE ul.ref_utilisateur = ?\&quot;;\n         \n         try {\n             PreparedStatement stmt = connection.prepareStatement(sql);\n@@ -59,24 +99,57 @@\n             ResultSet rs = stmt.executeQuery();\n             \n             while (rs.next()) {\n-                Date dateSQL = rs.getDate(\&quot;date_echeance\&quot;);\n-                LocalDate dateEcheance = dateSQL != null ? dateSQL.toLocalDate() : null;\n-                \n-                Tache tache = new Tache(\n-                        rs.getInt(\&quot;id_tache\&quot;),\n-                        rs.getString(\&quot;titre\&quot;),\n-                        rs.getString(\&quot;description\&quot;),\n-                        dateEcheance,\n-                        rs.getString(\&quot;priorite\&quot;),\n-                        rs.getString(\&quot;statut\&quot;),\n-                        rs.getInt(\&quot;id_utilisateur\&quot;)\n-                );\n+                Tache tache = new Tache(\n+                        rs.getInt(\&quot;id_tache\&quot;),\n+                        rs.getString(\&quot;nom\&quot;),\n+                        rs.getInt(\&quot;etat\&quot;),\n+                        rs.getInt(\&quot;ref_liste\&quot;),\n+                        rs.getInt(\&quot;ref_type\&quot;)\n+                );\n+                tache.setNomListe(rs.getString(\&quot;nom_liste\&quot;));\n+                tache.setNomType(rs.getString(\&quot;nom_type\&quot;));\n+                tache.setCodeCouleur(rs.getString(\&quot;code_couleur\&quot;));\n                 taches.add(tache);\n             }\n         } catch (SQLException e) {\n             System.out.println(\&quot;Erreur lors de la récupération des tâches : \&quot; + e.getMessage());\n         }\n         return taches;\n+    }\n+\n+    /**\n+     * Récupère une tâche par son ID\n+     * @param idTache L'ID de la tâche\n+     * @return La tâche ou null si non trouvée\n+     */\n+    public Tache getTacheParId(int idTache) {\n+        String sql = \&quot;SELECT t.*, l.nom as nom_liste, ty.nom as nom_type, ty.code_couleur \&quot; +\n+                     \&quot;FROM tache t \&quot; +\n+                     \&quot;JOIN liste l ON t.ref_liste = l.id_liste \&quot; +\n+                     \&quot;JOIN type ty ON t.ref_type = ty.id_type \&quot; +\n+                     \&quot;WHERE t.id_tache = ?\&quot;;\n+        try {\n+            PreparedStatement stmt = connection.prepareStatement(sql);\n+            stmt.setInt(1, idTache);\n+            ResultSet rs = stmt.executeQuery();\n+            \n+            if (rs.next()) {\n+                Tache tache = new Tache(\n+                        rs.getInt(\&quot;id_tache\&quot;),\n+                        rs.getString(\&quot;nom\&quot;),\n+                        rs.getInt(\&quot;etat\&quot;),\n+                        rs.getInt(\&quot;ref_liste\&quot;),\n+                        rs.getInt(\&quot;ref_type\&quot;)\n+                );\n+                tache.setNomListe(rs.getString(\&quot;nom_liste\&quot;));\n+                tache.setNomType(rs.getString(\&quot;nom_type\&quot;));\n+                tache.setCodeCouleur(rs.getString(\&quot;code_couleur\&quot;));\n+                return tache;\n+            }\n+        } catch (SQLException e) {\n+            System.out.println(\&quot;Erreur lors de la récupération de la tâche : \&quot; + e.getMessage());\n+        }\n+        return null;\n     }\n \n     /**\n@@ -85,15 +158,14 @@\n      * @return true si la mise à jour a réussi, false sinon\n      */\n     public boolean mettreAJourTache(Tache tache) {\n-        String sql = \&quot;UPDATE tache SET titre = ?, description = ?, date_echeance = ?, priorite = ?, statut = ? WHERE id_tache = ?\&quot;;\n-        try {\n-            PreparedStatement stmt = connection.prepareStatement(sql);\n-            stmt.setString(1, tache.getTitre());\n-            stmt.setString(2, tache.getDescription());\n-            stmt.setDate(3, tache.getDateEcheance() != null ? Date.valueOf(tache.getDateEcheance()) : null);\n-            stmt.setString(4, tache.getPriorite());\n-            stmt.setString(5, tache.getStatut());\n-            stmt.setInt(6, tache.getIdTache());\n+        String sql = \&quot;UPDATE tache SET nom = ?, etat = ?, ref_liste = ?, ref_type = ? WHERE id_tache = ?\&quot;;\n+        try {\n+            PreparedStatement stmt = connection.prepareStatement(sql);\n+            stmt.setString(1, tache.getNom());\n+            stmt.setInt(2, tache.getEtat());\n+            stmt.setInt(3, tache.getRefListe());\n+            stmt.setInt(4, tache.getRefType());\n+            stmt.setInt(5, tache.getIdTache());\n             \n             int rowsUpdated = stmt.executeUpdate();\n             return rowsUpdated &gt; 0;\n@@ -120,38 +192,6 @@\n             System.out.println(\&quot;Erreur lors de la suppression de la tâche : \&quot; + e.getMessage());\n             return false;\n         }\n-    }\n-\n-    /**\n-     * Récupère une tâche par son ID\n-     * @param idTache L'ID de la tâche\n-     * @return La tâche ou null si non trouvée\n-     */\n-    public Tache getTacheParId(int idTache) {\n-        String sql = \&quot;SELECT * FROM tache WHERE id_tache = ?\&quot;;\n-        try {\n-            PreparedStatement stmt = connection.prepareStatement(sql);\n-            stmt.setInt(1, idTache);\n-            ResultSet rs = stmt.executeQuery();\n-            \n-            if (rs.next()) {\n-                Date dateSQL = rs.getDate(\&quot;date_echeance\&quot;);\n-                LocalDate dateEcheance = dateSQL != null ? dateSQL.toLocalDate() : null;\n-                \n-                return new Tache(\n-                        rs.getInt(\&quot;id_tache\&quot;),\n-                        rs.getString(\&quot;titre\&quot;),\n-                        rs.getString(\&quot;description\&quot;),\n-                        dateEcheance,\n-                        rs.getString(\&quot;priorite\&quot;),\n-                        rs.getString(\&quot;statut\&quot;),\n-                        rs.getInt(\&quot;id_utilisateur\&quot;)\n-                );\n-            }\n-        } catch (SQLException e) {\n-            System.out.println(\&quot;Erreur lors de la récupération de la tâche : \&quot; + e.getMessage());\n-        }\n-        return null;\n     }\n     \n     /**\n@@ -162,28 +202,30 @@\n      */\n     public ArrayList&lt;Tache&gt; rechercherTaches(int idUtilisateur, String motCle) {\n         ArrayList&lt;Tache&gt; taches = new ArrayList&lt;&gt;();\n-        String sql = \&quot;SELECT * FROM tache WHERE id_utilisateur = ? AND (titre LIKE ? OR description LIKE ?) ORDER BY date_echeance ASC\&quot;;\n+        String sql = \&quot;SELECT t.*, l.nom as nom_liste, ty.nom as nom_type, ty.code_couleur \&quot; +\n+                     \&quot;FROM tache t \&quot; +\n+                     \&quot;JOIN liste l ON t.ref_liste = l.id_liste \&quot; +\n+                     \&quot;JOIN type ty ON t.ref_type = ty.id_type \&quot; +\n+                     \&quot;JOIN utilisateur_liste ul ON l.id_liste = ul.ref_liste \&quot; +\n+                     \&quot;WHERE ul.ref_utilisateur = ? AND t.nom LIKE ?\&quot;;\n         \n         try {\n             PreparedStatement stmt = connection.prepareStatement(sql);\n             stmt.setInt(1, idUtilisateur);\n             stmt.setString(2, \&quot;%\&quot; + motCle + \&quot;%\&quot;);\n-            stmt.setString(3, \&quot;%\&quot; + motCle + \&quot;%\&quot;);\n             ResultSet rs = stmt.executeQuery();\n             \n             while (rs.next()) {\n-                Date dateSQL = rs.getDate(\&quot;date_echeance\&quot;);\n-                LocalDate dateEcheance = dateSQL != null ? dateSQL.toLocalDate() : null;\n-                \n-                Tache tache = new Tache(\n-                        rs.getInt(\&quot;id_tache\&quot;),\n-                        rs.getString(\&quot;titre\&quot;),\n-                        rs.getString(\&quot;description\&quot;),\n-                        dateEcheance,\n-                        rs.getString(\&quot;priorite\&quot;),\n-                        rs.getString(\&quot;statut\&quot;),\n-                        rs.getInt(\&quot;id_utilisateur\&quot;)\n-                );\n+                Tache tache = new Tache(\n+                        rs.getInt(\&quot;id_tache\&quot;),\n+                        rs.getString(\&quot;nom\&quot;),\n+                        rs.getInt(\&quot;etat\&quot;),\n+                        rs.getInt(\&quot;ref_liste\&quot;),\n+                        rs.getInt(\&quot;ref_type\&quot;)\n+                );\n+                tache.setNomListe(rs.getString(\&quot;nom_liste\&quot;));\n+                tache.setNomType(rs.getString(\&quot;nom_type\&quot;));\n+                tache.setCodeCouleur(rs.getString(\&quot;code_couleur\&quot;));\n                 taches.add(tache);\n             }\n         } catch (SQLException e) {&quot;,&quot;refToolCallId&quot;:&quot;toolu_01X3s3CNV3bWzT9KWks45u17&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Maintenant, créons l'interface utilisateur pour la gestion des utilisateurs et des tâches. Commençons par mettre à jour le fichier GestionUserView.fxml :&quot;},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_01A9kFcmHstquhXcq35cybk9&quot;,&quot;statusText&quot;:&quot;Change generated&quot;,&quot;status&quot;:&quot;SUCCESS&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main/resources/appli/accueil/GestionUserView.fxml&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\resources\\appli\\accueil\\GestionUserView.fxml&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;codeHunk&quot;,&quot;lineBasedDiff&quot;:&quot;--- src/main/resources/appli/accueil/GestionUserView.fxml\n+++ src/main/resources/appli/accueil/GestionUserView.fxml\n@@ -1,13 +1,115 @@\n &lt;?xml version=\&quot;1.0\&quot; encoding=\&quot;UTF-8\&quot;?&gt;\n \n+&lt;?import javafx.geometry.Insets?&gt;\n &lt;?import javafx.scene.control.Button?&gt;\n+&lt;?import javafx.scene.control.Label?&gt;\n &lt;?import javafx.scene.control.TableView?&gt;\n+&lt;?import javafx.scene.control.TextField?&gt;\n &lt;?import javafx.scene.layout.AnchorPane?&gt;\n+&lt;?import javafx.scene.layout.BorderPane?&gt;\n+&lt;?import javafx.scene.layout.HBox?&gt;\n+&lt;?import javafx.scene.layout.VBox?&gt;\n+&lt;?import javafx.scene.text.Font?&gt;\n \n-&lt;AnchorPane prefHeight=\&quot;400.0\&quot; prefWidth=\&quot;600.0\&quot; xmlns=\&quot;http://javafx.com/javafx/23.0.1\&quot; xmlns:fx=\&quot;http://javafx.com/fxml/1\&quot; fx:controller=\&quot;appli.accueil.GestionUserController\&quot;&gt;\n+&lt;AnchorPane prefHeight=\&quot;600.0\&quot; prefWidth=\&quot;800.0\&quot; xmlns=\&quot;http://javafx.com/javafx/23.0.1\&quot; xmlns:fx=\&quot;http://javafx.com/fxml/1\&quot; fx:controller=\&quot;appli.accueil.GestionUserController\&quot;&gt;\n    &lt;children&gt;\n-      &lt;TableView fx:id=\&quot;tableauUser\&quot; layoutX=\&quot;42.0\&quot; layoutY=\&quot;39.0\&quot; onMouseClicked=\&quot;#cliqueTableau\&quot; prefHeight=\&quot;323.0\&quot; prefWidth=\&quot;517.0\&quot; /&gt;\n-      &lt;Button fx:id=\&quot;userSupp\&quot; disable=\&quot;true\&quot; layoutX=\&quot;265.0\&quot; layoutY=\&quot;366.0\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#supprimer\&quot; text=\&quot;supprimer\&quot; /&gt;\n-      &lt;Button fx:id=\&quot;retour\&quot; layoutY=\&quot;2.0\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#retour\&quot; text=\&quot;retour\&quot; /&gt;\n+      &lt;BorderPane prefHeight=\&quot;600.0\&quot; prefWidth=\&quot;800.0\&quot;&gt;\n+         &lt;top&gt;\n+            &lt;VBox spacing=\&quot;10.0\&quot; BorderPane.alignment=\&quot;CENTER\&quot;&gt;\n+               &lt;children&gt;\n+                  &lt;HBox alignment=\&quot;CENTER_LEFT\&quot; spacing=\&quot;10.0\&quot;&gt;\n+                     &lt;children&gt;\n+                        &lt;Button fx:id=\&quot;retourBtn\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#retour\&quot; style=\&quot;-fx-background-color: #3498db;\&quot; text=\&quot;Retour\&quot; textFill=\&quot;WHITE\&quot;&gt;\n+                           &lt;font&gt;\n+                              &lt;Font name=\&quot;System Bold\&quot; size=\&quot;12.0\&quot; /&gt;\n+                           &lt;/font&gt;\n+                        &lt;/Button&gt;\n+                        &lt;Label alignment=\&quot;CENTER\&quot; contentDisplay=\&quot;CENTER\&quot; text=\&quot;Gestion des Utilisateurs\&quot; textAlignment=\&quot;CENTER\&quot; HBox.hgrow=\&quot;ALWAYS\&quot;&gt;\n+                           &lt;font&gt;\n+                              &lt;Font name=\&quot;System Bold\&quot; size=\&quot;24.0\&quot; /&gt;\n+                           &lt;/font&gt;\n+                           &lt;HBox.margin&gt;\n+                              &lt;Insets left=\&quot;220.0\&quot; /&gt;\n+                           &lt;/HBox.margin&gt;\n+                        &lt;/Label&gt;\n+                     &lt;/children&gt;\n+                     &lt;padding&gt;\n+                        &lt;Insets bottom=\&quot;5.0\&quot; left=\&quot;10.0\&quot; right=\&quot;10.0\&quot; top=\&quot;10.0\&quot; /&gt;\n+                     &lt;/padding&gt;\n+                  &lt;/HBox&gt;\n+                  &lt;HBox alignment=\&quot;CENTER\&quot; spacing=\&quot;10.0\&quot;&gt;\n+                     &lt;children&gt;\n+                        &lt;TextField fx:id=\&quot;rechercheField\&quot; prefHeight=\&quot;30.0\&quot; prefWidth=\&quot;300.0\&quot; promptText=\&quot;Rechercher un utilisateur...\&quot;&gt;\n+                           &lt;font&gt;\n+                              &lt;Font size=\&quot;14.0\&quot; /&gt;\n+                           &lt;/font&gt;\n+                        &lt;/TextField&gt;\n+                        &lt;Button fx:id=\&quot;rechercheBtn\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#rechercher\&quot; style=\&quot;-fx-background-color: #3498db;\&quot; text=\&quot;Rechercher\&quot; textFill=\&quot;WHITE\&quot;&gt;\n+                           &lt;font&gt;\n+                              &lt;Font size=\&quot;14.0\&quot; /&gt;\n+                           &lt;/font&gt;\n+                        &lt;/Button&gt;\n+                        &lt;Button fx:id=\&quot;resetBtn\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#resetRecherche\&quot; style=\&quot;-fx-background-color: #7f8c8d;\&quot; text=\&quot;Réinitialiser\&quot; textFill=\&quot;WHITE\&quot;&gt;\n+                           &lt;font&gt;\n+                              &lt;Font size=\&quot;14.0\&quot; /&gt;\n+                           &lt;/font&gt;\n+                        &lt;/Button&gt;\n+                     &lt;/children&gt;\n+                     &lt;padding&gt;\n+                        &lt;Insets bottom=\&quot;10.0\&quot; left=\&quot;10.0\&quot; right=\&quot;10.0\&quot; top=\&quot;5.0\&quot; /&gt;\n+                     &lt;/padding&gt;\n+                  &lt;/HBox&gt;\n+               &lt;/children&gt;\n+            &lt;/VBox&gt;\n+         &lt;/top&gt;\n+         &lt;center&gt;\n+            &lt;TableView fx:id=\&quot;tableauUser\&quot; onMouseClicked=\&quot;#cliqueTableau\&quot; prefHeight=\&quot;400.0\&quot; prefWidth=\&quot;780.0\&quot; BorderPane.alignment=\&quot;CENTER\&quot;&gt;\n+               &lt;BorderPane.margin&gt;\n+                  &lt;Insets bottom=\&quot;10.0\&quot; left=\&quot;10.0\&quot; right=\&quot;10.0\&quot; top=\&quot;10.0\&quot; /&gt;\n+               &lt;/BorderPane.margin&gt;\n+            &lt;/TableView&gt;\n+         &lt;/center&gt;\n+         &lt;bottom&gt;\n+            &lt;VBox alignment=\&quot;CENTER\&quot; spacing=\&quot;10.0\&quot; BorderPane.alignment=\&quot;CENTER\&quot;&gt;\n+               &lt;children&gt;\n+                  &lt;HBox alignment=\&quot;CENTER\&quot; spacing=\&quot;20.0\&quot;&gt;\n+                     &lt;children&gt;\n+                        &lt;Button fx:id=\&quot;ajouterBtn\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#ajouterUtilisateur\&quot; style=\&quot;-fx-background-color: #2ecc71;\&quot; text=\&quot;Ajouter\&quot; textFill=\&quot;WHITE\&quot;&gt;\n+                           &lt;font&gt;\n+                              &lt;Font name=\&quot;System Bold\&quot; size=\&quot;14.0\&quot; /&gt;\n+                           &lt;/font&gt;\n+                        &lt;/Button&gt;\n+                        &lt;Button fx:id=\&quot;modifierBtn\&quot; disable=\&quot;true\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#modifierUtilisateur\&quot; style=\&quot;-fx-background-color: #f39c12;\&quot; text=\&quot;Modifier\&quot; textFill=\&quot;WHITE\&quot;&gt;\n+                           &lt;font&gt;\n+                              &lt;Font name=\&quot;System Bold\&quot; size=\&quot;14.0\&quot; /&gt;\n+                           &lt;/font&gt;\n+                        &lt;/Button&gt;\n+                        &lt;Button fx:id=\&quot;todoListBtn\&quot; disable=\&quot;true\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#gererTodoList\&quot; style=\&quot;-fx-background-color: #9b59b6;\&quot; text=\&quot;Todo List\&quot; textFill=\&quot;WHITE\&quot;&gt;\n+                           &lt;font&gt;\n+                              &lt;Font name=\&quot;System Bold\&quot; size=\&quot;14.0\&quot; /&gt;\n+                           &lt;/font&gt;\n+                        &lt;/Button&gt;\n+                        &lt;Button fx:id=\&quot;userSupp\&quot; disable=\&quot;true\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#supprimer\&quot; style=\&quot;-fx-background-color: #e74c3c;\&quot; text=\&quot;Supprimer\&quot; textFill=\&quot;WHITE\&quot;&gt;\n+                           &lt;font&gt;\n+                              &lt;Font name=\&quot;System Bold\&quot; size=\&quot;14.0\&quot; /&gt;\n+                           &lt;/font&gt;\n+                        &lt;/Button&gt;\n+                     &lt;/children&gt;\n+                     &lt;padding&gt;\n+                        &lt;Insets bottom=\&quot;5.0\&quot; left=\&quot;10.0\&quot; right=\&quot;10.0\&quot; top=\&quot;5.0\&quot; /&gt;\n+                     &lt;/padding&gt;\n+                  &lt;/HBox&gt;\n+                  &lt;Label fx:id=\&quot;messageLabel\&quot; alignment=\&quot;CENTER\&quot; textFill=\&quot;#2ecc71\&quot;&gt;\n+                     &lt;font&gt;\n+                        &lt;Font size=\&quot;14.0\&quot; /&gt;\n+                     &lt;/font&gt;\n+                     &lt;VBox.margin&gt;\n+                        &lt;Insets bottom=\&quot;10.0\&quot; /&gt;\n+                     &lt;/VBox.margin&gt;\n+                  &lt;/Label&gt;\n+               &lt;/children&gt;\n+            &lt;/VBox&gt;\n+         &lt;/bottom&gt;\n+      &lt;/BorderPane&gt;\n    &lt;/children&gt;\n &lt;/AnchorPane&gt;&quot;,&quot;refToolCallId&quot;:&quot;toolu_01A9kFcmHstquhXcq35cybk9&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Maintenant, mettons à jour le contrôleur GestionUserController.java pour gérer les nouvelles fonctionnalités :&quot;},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_013fdVRPiV3cK5P8GDaTUz8A&quot;,&quot;statusText&quot;:&quot;Change generated&quot;,&quot;status&quot;:&quot;SUCCESS&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main/java/appli/accueil/GestionUserController.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\appli\\accueil\\GestionUserController.java&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;codeHunk&quot;,&quot;lineBasedDiff&quot;:&quot;--- src/main/java/appli/accueil/GestionUserController.java\n+++ src/main/java/appli/accueil/GestionUserController.java\n@@ -1,6 +1,9 @@\n package appli.accueil;\n import appli.StartApplication;\n import appli.user.ModificationUserController;\n+import appli.user.TodoListController;\n+import javafx.collections.FXCollections;\n+import javafx.collections.ObservableList;\n import javafx.event.ActionEvent;\n import javafx.fxml.FXML;\n import javafx.fxml.Initializable;\n@@ -8,6 +11,7 @@\n import javafx.scene.control.Label;\n import javafx.scene.control.TableColumn;\n import javafx.scene.control.TableView;\n+import javafx.scene.control.TextField;\n import javafx.scene.control.cell.PropertyValueFactory;\n import javafx.scene.input.MouseEvent;\n import model.Utilisateur;\n@@ -16,7 +20,9 @@\n \n import java.io.IOException;\n import java.net.URL;\n+import java.util.ArrayList;\n import java.util.ResourceBundle;\n+import java.util.stream.Collectors;\n \n public class GestionUserController implements Initializable {\n     @FXML\n@@ -24,55 +30,209 @@\n \n     @FXML\n     private Button userSupp;\n+    \n+    @FXML\n+    private Button modifierBtn;\n+    \n+    @FXML\n+    private Button todoListBtn;\n+    \n+    @FXML\n+    private Button retourBtn;\n+    \n+    @FXML\n+    private TextField rechercheField;\n+    \n+    @FXML\n+    private Button rechercheBtn;\n+    \n+    @FXML\n+    private Button resetBtn;\n+    \n+    @FXML\n+    private Button ajouterBtn;\n+    \n+    @FXML\n+    private Label messageLabel;\n+    \n+    private ObservableList&lt;Utilisateur&gt; listeUtilisateurs;\n+    private UtilisateurRepository utilisateurRepository;\n \n     @Override\n     public void initialize(URL location, ResourceBundle resources) {\n-        String [][] colonnes = {\n-                { \&quot;Id Utilisateur\&quot;,\&quot;idUtilisateur\&quot; },\n-                { \&quot;Nom\&quot;,\&quot;nom\&quot; },\n-                { \&quot;Prénom\&quot;,\&quot;prenom\&quot; },\n-                { \&quot;Email\&quot;,\&quot;email\&quot; },\n-                { \&quot;Rôle\&quot;,\&quot;role\&quot; },\n+        utilisateurRepository = new UtilisateurRepository();\n+        \n+        // Configuration des colonnes du tableau\n+        String[][] colonnes = {\n+                {\&quot;Id Utilisateur\&quot;, \&quot;idUtilisateur\&quot;},\n+                {\&quot;Nom\&quot;, \&quot;nom\&quot;},\n+                {\&quot;Prénom\&quot;, \&quot;prenom\&quot;},\n+                {\&quot;Email\&quot;, \&quot;email\&quot;},\n+                {\&quot;Rôle\&quot;, \&quot;role\&quot;},\n         };\n \n-        for ( int i = 0 ; i &lt; colonnes.length ; i ++ ){\n-            TableColumn&lt;Utilisateur,String&gt; maCol = new TableColumn&lt;&gt;(colonnes[i][0]);\n+        for (int i = 0; i &lt; colonnes.length; i++) {\n+            TableColumn&lt;Utilisateur, String&gt; maCol = new TableColumn&lt;&gt;(colonnes[i][0]);\n             maCol.setCellValueFactory(\n-                    new PropertyValueFactory&lt;Utilisateur,String&gt;(colonnes[i][1]));\n+                    new PropertyValueFactory&lt;Utilisateur, String&gt;(colonnes[i][1]));\n+            maCol.setPrefWidth(150); // Définir une largeur pour chaque colonne\n             tableauUser.getColumns().add(maCol);\n         }\n-        UtilisateurRepository us = new UtilisateurRepository();\n-        tableauUser.getItems().addAll(us.getAllUtilisateurs());\n-\n-    }\n+        \n+        // Chargement des utilisateurs\n+        chargerUtilisateurs();\n+        \n+        // Effacer le message après 3 secondes\n+        messageLabel.textProperty().addListener((observable, oldValue, newValue) -&gt; {\n+            if (newValue != null &amp;&amp; !newValue.isEmpty()) {\n+                new Thread(() -&gt; {\n+                    try {\n+                        Thread.sleep(3000);\n+                        javafx.application.Platform.runLater(() -&gt; messageLabel.setText(\&quot;\&quot;));\n+                    } catch (InterruptedException e) {\n+                        e.printStackTrace();\n+                    }\n+                }).start();\n+            }\n+        });\n+    }\n+    \n+    /**\n+     * Charge tous les utilisateurs depuis la base de données\n+     */\n+    private void chargerUtilisateurs() {\n+        ArrayList&lt;Utilisateur&gt; utilisateurs = utilisateurRepository.getAllUtilisateurs();\n+        listeUtilisateurs = FXCollections.observableArrayList(utilisateurs);\n+        tableauUser.setItems(listeUtilisateurs);\n+    }\n+    \n     @FXML\n     public void cliqueTableau(MouseEvent mouseEvent) throws IOException {\n         Utilisateur selection = tableauUser.getSelectionModel().getSelectedItem();\n         if (selection != null) {\n             userSupp.setDisable(false);\n-        }else{\n+            modifierBtn.setDisable(false);\n+            todoListBtn.setDisable(false);\n+        } else {\n             userSupp.setDisable(true);\n-        }\n+            modifierBtn.setDisable(true);\n+            todoListBtn.setDisable(true);\n+        }\n+        \n+        // Double-clic pour modifier un utilisateur\n         if (mouseEvent.getClickCount() == 2) {\n             if (selection != null) {\n+                modifierUtilisateur();\n+            }\n+        }\n+    }\n+\n+    @FXML\n+    public void supprimer(ActionEvent actionEvent) {\n+        Utilisateur utilisateurSelectionne = tableauUser.getSelectionModel().getSelectedItem();\n+\n+        if (utilisateurSelectionne != null) {\n+            boolean supprime = utilisateurRepository.supprimerUtilisateurParEmail(utilisateurSelectionne.getEmail());\n+            \n+            if (supprime) {\n+                tableauUser.getItems().remove(utilisateurSelectionne);\n+                messageLabel.setText(\&quot;Utilisateur supprimé avec succès !\&quot;);\n+                messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);\n+            } else {\n+                messageLabel.setText(\&quot;Erreur lors de la suppression de l'utilisateur.\&quot;);\n+                messageLabel.setTextFill(javafx.scene.paint.Color.RED);\n+            }\n+            \n+            // Réinitialiser les boutons\n+            userSupp.setDisable(true);\n+            modifierBtn.setDisable(true);\n+            todoListBtn.setDisable(true);\n+        }\n+    }\n+    \n+    @FXML\n+    public void modifierUtilisateur() {\n+        Utilisateur utilisateurSelectionne = tableauUser.getSelectionModel().getSelectedItem();\n+        \n+        if (utilisateurSelectionne != null) {\n+            try {\n                 StartApplication.changeScene(\&quot;user/modificationUser\&quot;);\n                 ModificationUserController controller = (ModificationUserController)\n-                        StartApplication. getControllerFromStage();\n-                controller.initData(selection);\n-            }\n-        }\n-    }\n-\n-    @FXML\n-    public void supprimer(ActionEvent actionEvent) {\n+                        StartApplication.getControllerFromStage();\n+                controller.initData(utilisateurSelectionne);\n+            } catch (IOException e) {\n+                messageLabel.setText(\&quot;Erreur lors de l'ouverture de la page de modification.\&quot;);\n+                messageLabel.setTextFill(javafx.scene.paint.Color.RED);\n+                e.printStackTrace();\n+            }\n+        }\n+    }\n+    \n+    @FXML\n+    public void ajouterUtilisateur() {\n+        try {\n+            StartApplication.changeScene(\&quot;accueil/Inscription\&quot;);\n+        } catch (IOException e) {\n+            messageLabel.setText(\&quot;Erreur lors de l'ouverture de la page d'inscription.\&quot;);\n+            messageLabel.setTextFill(javafx.scene.paint.Color.RED);\n+            e.printStackTrace();\n+        }\n+    }\n+    \n+    @FXML\n+    public void gererTodoList() {\n         Utilisateur utilisateurSelectionne = tableauUser.getSelectionModel().getSelectedItem();\n-\n+        \n         if (utilisateurSelectionne != null) {\n-            UtilisateurRepository rep = new UtilisateurRepository();\n-            rep.supprimerUtilisateurParEmail(utilisateurSelectionne.getEmail());\n-\n-        }\n-        tableauUser.getItems().remove(utilisateurSelectionne);\n+            try {\n+                StartApplication.changeScene(\&quot;user/TodoList\&quot;);\n+                TodoListController controller = (TodoListController)\n+                        StartApplication.getControllerFromStage();\n+                controller.initData(utilisateurSelectionne);\n+                messageLabel.setText(\&quot;Chargement des tâches de l'utilisateur...\&quot;);\n+                messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);\n+            } catch (IOException e) {\n+                messageLabel.setText(\&quot;Erreur lors de l'ouverture de la page des tâches.\&quot;);\n+                messageLabel.setTextFill(javafx.scene.paint.Color.RED);\n+                e.printStackTrace();\n+            }\n+        }\n+    }\n+    \n+    @FXML\n+    public void rechercher() {\n+        String recherche = rechercheField.getText().toLowerCase().trim();\n+        \n+        if (recherche.isEmpty()) {\n+            tableauUser.setItems(listeUtilisateurs);\n+            return;\n+        }\n+        \n+        // Filtrer les utilisateurs selon le texte de recherche\n+        ObservableList&lt;Utilisateur&gt; utilisateursFiltres = listeUtilisateurs.stream()\n+                .filter(u -&gt; u.getNom().toLowerCase().contains(recherche) ||\n+                        u.getPrenom().toLowerCase().contains(recherche) ||\n+                        u.getEmail().toLowerCase().contains(recherche) ||\n+                        (u.getRole() != null &amp;&amp; u.getRole().toLowerCase().contains(recherche)))\n+                .collect(Collectors.toCollection(FXCollections::observableArrayList));\n+        \n+        tableauUser.setItems(utilisateursFiltres);\n+        \n+        if (utilisateursFiltres.isEmpty()) {\n+            messageLabel.setText(\&quot;Aucun utilisateur trouvé pour cette recherche.\&quot;);\n+            messageLabel.setTextFill(javafx.scene.paint.Color.ORANGE);\n+        } else {\n+            messageLabel.setText(utilisateursFiltres.size() + \&quot; utilisateur(s) trouvé(s).\&quot;);\n+            messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);\n+        }\n+    }\n+    \n+    @FXML\n+    public void resetRecherche() {\n+        rechercheField.clear();\n+        tableauUser.setItems(listeUtilisateurs);\n+        messageLabel.setText(\&quot;Recherche réinitialisée.\&quot;);\n+        messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);\n     }\n \n     @FXML&quot;,&quot;refToolCallId&quot;:&quot;toolu_013fdVRPiV3cK5P8GDaTUz8A&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Maintenant, créons l'interface pour la gestion des tâches (TodoListView.fxml) :&quot;},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_01EkKYz2sVz97rzThm4GQqoK&quot;,&quot;title&quot;:&quot;&quot;,&quot;statusText&quot;:&quot;File already exists&quot;,&quot;status&quot;:&quot;WARNING&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main/resources/appli/user/TodoListView.fxml&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\resources\\appli\\user\\TodoListView.fxml&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Vérifions si le fichier TodoListView.fxml existe déjà et son contenu :&quot;},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_01KANrHJjWgNo5DVBMz33v3M&quot;,&quot;statusText&quot;:&quot;Viewed file&quot;,&quot;status&quot;:&quot;SUCCESS&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main/resources/appli/user/TodoListView.fxml&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\resources\\appli\\user\\TodoListView.fxml&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Mettons à jour le fichier TodoListView.fxml pour qu'il corresponde à notre nouveau modèle de données :&quot;},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_011QNoBpNNNqCPg8Sj7EA9Ld&quot;,&quot;statusText&quot;:&quot;Change generated&quot;,&quot;status&quot;:&quot;SUCCESS&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main/resources/appli/user/TodoListView.fxml&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\resources\\appli\\user\\TodoListView.fxml&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;codeHunk&quot;,&quot;lineBasedDiff&quot;:&quot;--- src/main/resources/appli/user/TodoListView.fxml\n+++ src/main/resources/appli/user/TodoListView.fxml\n@@ -3,179 +3,192 @@\n &lt;?import javafx.geometry.Insets?&gt;\n &lt;?import javafx.scene.control.Button?&gt;\n &lt;?import javafx.scene.control.ComboBox?&gt;\n-&lt;?import javafx.scene.control.DatePicker?&gt;\n &lt;?import javafx.scene.control.Label?&gt;\n+&lt;?import javafx.scene.control.ListView?&gt;\n+&lt;?import javafx.scene.control.SplitPane?&gt;\n &lt;?import javafx.scene.control.TableView?&gt;\n-&lt;?import javafx.scene.control.TextArea?&gt;\n &lt;?import javafx.scene.control.TextField?&gt;\n &lt;?import javafx.scene.layout.AnchorPane?&gt;\n+&lt;?import javafx.scene.layout.BorderPane?&gt;\n &lt;?import javafx.scene.layout.HBox?&gt;\n &lt;?import javafx.scene.layout.VBox?&gt;\n &lt;?import javafx.scene.text.Font?&gt;\n \n-&lt;AnchorPane prefHeight=\&quot;600.0\&quot; prefWidth=\&quot;800.0\&quot; xmlns=\&quot;http://javafx.com/javafx/23.0.1\&quot; xmlns:fx=\&quot;http://javafx.com/fxml/1\&quot; fx:controller=\&quot;appli.user.TodoListController\&quot;&gt;\n+&lt;AnchorPane prefHeight=\&quot;600.0\&quot; prefWidth=\&quot;900.0\&quot; xmlns=\&quot;http://javafx.com/javafx/23.0.1\&quot; xmlns:fx=\&quot;http://javafx.com/fxml/1\&quot; fx:controller=\&quot;appli.user.TodoListController\&quot;&gt;\n    &lt;children&gt;\n-      &lt;VBox alignment=\&quot;TOP_CENTER\&quot; layoutX=\&quot;0.0\&quot; layoutY=\&quot;0.0\&quot; prefHeight=\&quot;600.0\&quot; prefWidth=\&quot;800.0\&quot; spacing=\&quot;10.0\&quot;&gt;\n-         &lt;children&gt;\n-            &lt;HBox alignment=\&quot;CENTER_LEFT\&quot; spacing=\&quot;10.0\&quot;&gt;\n+      &lt;BorderPane prefHeight=\&quot;600.0\&quot; prefWidth=\&quot;900.0\&quot;&gt;\n+         &lt;top&gt;\n+            &lt;VBox spacing=\&quot;5.0\&quot; BorderPane.alignment=\&quot;CENTER\&quot;&gt;\n                &lt;children&gt;\n-                  &lt;Button fx:id=\&quot;retourBtn\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#retour\&quot; style=\&quot;-fx-background-color: #4a90e2;\&quot; text=\&quot;Retour\&quot; textFill=\&quot;WHITE\&quot;&gt;\n-                     &lt;font&gt;\n-                        &lt;Font name=\&quot;System Bold\&quot; size=\&quot;12.0\&quot; /&gt;\n-                     &lt;/font&gt;\n-                  &lt;/Button&gt;\n-                  &lt;Label alignment=\&quot;CENTER\&quot; contentDisplay=\&quot;CENTER\&quot; text=\&quot;Gestion des Tâches\&quot; textAlignment=\&quot;CENTER\&quot; HBox.hgrow=\&quot;ALWAYS\&quot;&gt;\n-                     &lt;font&gt;\n-                        &lt;Font name=\&quot;System Bold\&quot; size=\&quot;24.0\&quot; /&gt;\n-                     &lt;/font&gt;\n-                     &lt;HBox.margin&gt;\n-                        &lt;Insets left=\&quot;250.0\&quot; /&gt;\n-                     &lt;/HBox.margin&gt;\n-                  &lt;/Label&gt;\n-               &lt;/children&gt;\n-               &lt;padding&gt;\n-                  &lt;Insets bottom=\&quot;10.0\&quot; left=\&quot;10.0\&quot; right=\&quot;10.0\&quot; top=\&quot;10.0\&quot; /&gt;\n-               &lt;/padding&gt;\n-            &lt;/HBox&gt;\n-            \n-            &lt;HBox spacing=\&quot;10.0\&quot;&gt;\n-               &lt;children&gt;\n-                  &lt;!-- Panneau de gauche pour la liste des tâches --&gt;\n-                  &lt;VBox prefHeight=\&quot;500.0\&quot; prefWidth=\&quot;400.0\&quot; spacing=\&quot;10.0\&quot;&gt;\n+                  &lt;HBox alignment=\&quot;CENTER_LEFT\&quot; spacing=\&quot;10.0\&quot;&gt;\n                      &lt;children&gt;\n-                        &lt;HBox alignment=\&quot;CENTER_LEFT\&quot; spacing=\&quot;10.0\&quot;&gt;\n-                           &lt;children&gt;\n-                              &lt;Label text=\&quot;Tâches de l'utilisateur :\&quot;&gt;\n-                                 &lt;font&gt;\n-                                    &lt;Font name=\&quot;System Bold\&quot; size=\&quot;14.0\&quot; /&gt;\n-                                 &lt;/font&gt;\n-                              &lt;/Label&gt;\n-                              &lt;Label fx:id=\&quot;nomUtilisateurLabel\&quot; text=\&quot;[Nom de l'utilisateur]\&quot;&gt;\n-                                 &lt;font&gt;\n-                                    &lt;Font size=\&quot;14.0\&quot; /&gt;\n-                                 &lt;/font&gt;\n-                              &lt;/Label&gt;\n-                           &lt;/children&gt;\n-                        &lt;/HBox&gt;\n-                        \n-                        &lt;HBox alignment=\&quot;CENTER_LEFT\&quot; spacing=\&quot;10.0\&quot;&gt;\n-                           &lt;children&gt;\n-                              &lt;TextField fx:id=\&quot;rechercheField\&quot; prefHeight=\&quot;30.0\&quot; prefWidth=\&quot;250.0\&quot; promptText=\&quot;Rechercher une tâche...\&quot;&gt;\n-                                 &lt;font&gt;\n-                                    &lt;Font size=\&quot;12.0\&quot; /&gt;\n-                                 &lt;/font&gt;\n-                              &lt;/TextField&gt;\n-                              &lt;Button fx:id=\&quot;rechercheBtn\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#rechercher\&quot; style=\&quot;-fx-background-color: #4a90e2;\&quot; text=\&quot;Rechercher\&quot; textFill=\&quot;WHITE\&quot; /&gt;\n-                           &lt;/children&gt;\n-                        &lt;/HBox&gt;\n-                        \n-                        &lt;TableView fx:id=\&quot;tableauTaches\&quot; onMouseClicked=\&quot;#cliqueTache\&quot; prefHeight=\&quot;400.0\&quot; prefWidth=\&quot;400.0\&quot; style=\&quot;-fx-border-color: #e0e0e0; -fx-border-width: 1px;\&quot; /&gt;\n+                        &lt;Button fx:id=\&quot;retourBtn\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#retour\&quot; style=\&quot;-fx-background-color: #3498db;\&quot; text=\&quot;Retour\&quot; textFill=\&quot;WHITE\&quot;&gt;\n+                           &lt;font&gt;\n+                              &lt;Font name=\&quot;System Bold\&quot; size=\&quot;12.0\&quot; /&gt;\n+                           &lt;/font&gt;\n+                        &lt;/Button&gt;\n+                        &lt;Label alignment=\&quot;CENTER\&quot; contentDisplay=\&quot;CENTER\&quot; text=\&quot;Gestion des Tâches\&quot; textAlignment=\&quot;CENTER\&quot; HBox.hgrow=\&quot;ALWAYS\&quot;&gt;\n+                           &lt;font&gt;\n+                              &lt;Font name=\&quot;System Bold\&quot; size=\&quot;24.0\&quot; /&gt;\n+                           &lt;/font&gt;\n+                           &lt;HBox.margin&gt;\n+                              &lt;Insets left=\&quot;300.0\&quot; /&gt;\n+                           &lt;/HBox.margin&gt;\n+                        &lt;/Label&gt;\n                      &lt;/children&gt;\n-                  &lt;/VBox&gt;\n-                  \n-                  &lt;!-- Panneau de droite pour les détails et l'ajout de tâches --&gt;\n-                  &lt;VBox prefHeight=\&quot;500.0\&quot; prefWidth=\&quot;380.0\&quot; spacing=\&quot;15.0\&quot; style=\&quot;-fx-background-color: #f8f9fa; -fx-border-color: #e0e0e0; -fx-border-width: 1px; -fx-border-radius: 5px;\&quot;&gt;\n+                     &lt;padding&gt;\n+                        &lt;Insets bottom=\&quot;5.0\&quot; left=\&quot;10.0\&quot; right=\&quot;10.0\&quot; top=\&quot;10.0\&quot; /&gt;\n+                     &lt;/padding&gt;\n+                  &lt;/HBox&gt;\n+                  &lt;HBox alignment=\&quot;CENTER_LEFT\&quot; spacing=\&quot;10.0\&quot;&gt;\n                      &lt;children&gt;\n-                        &lt;Label text=\&quot;Détails de la tâche\&quot; textAlignment=\&quot;CENTER\&quot;&gt;\n+                        &lt;Label text=\&quot;Utilisateur :\&quot;&gt;\n                            &lt;font&gt;\n-                              &lt;Font name=\&quot;System Bold\&quot; size=\&quot;16.0\&quot; /&gt;\n+                              &lt;Font name=\&quot;System Bold\&quot; size=\&quot;14.0\&quot; /&gt;\n                            &lt;/font&gt;\n                         &lt;/Label&gt;\n-                        \n-                        &lt;HBox alignment=\&quot;CENTER_LEFT\&quot; spacing=\&quot;10.0\&quot;&gt;\n-                           &lt;children&gt;\n-                              &lt;Label prefWidth=\&quot;80.0\&quot; text=\&quot;Titre :\&quot;&gt;\n-                                 &lt;font&gt;\n-                                    &lt;Font name=\&quot;System Bold\&quot; size=\&quot;12.0\&quot; /&gt;\n-                                 &lt;/font&gt;\n-                              &lt;/Label&gt;\n-                              &lt;TextField fx:id=\&quot;titreField\&quot; prefHeight=\&quot;25.0\&quot; prefWidth=\&quot;250.0\&quot; /&gt;\n-                           &lt;/children&gt;\n-                        &lt;/HBox&gt;\n-                        \n-                        &lt;HBox alignment=\&quot;CENTER_LEFT\&quot; spacing=\&quot;10.0\&quot;&gt;\n-                           &lt;children&gt;\n-                              &lt;Label prefWidth=\&quot;80.0\&quot; text=\&quot;Description :\&quot;&gt;\n-                                 &lt;font&gt;\n-                                    &lt;Font name=\&quot;System Bold\&quot; size=\&quot;12.0\&quot; /&gt;\n-                                 &lt;/font&gt;\n-                              &lt;/Label&gt;\n-                              &lt;TextArea fx:id=\&quot;descriptionArea\&quot; prefHeight=\&quot;100.0\&quot; prefWidth=\&quot;250.0\&quot; wrapText=\&quot;true\&quot; /&gt;\n-                           &lt;/children&gt;\n-                        &lt;/HBox&gt;\n-                        \n-                        &lt;HBox alignment=\&quot;CENTER_LEFT\&quot; spacing=\&quot;10.0\&quot;&gt;\n-                           &lt;children&gt;\n-                              &lt;Label prefWidth=\&quot;80.0\&quot; text=\&quot;Date limite :\&quot;&gt;\n-                                 &lt;font&gt;\n-                                    &lt;Font name=\&quot;System Bold\&quot; size=\&quot;12.0\&quot; /&gt;\n-                                 &lt;/font&gt;\n-                              &lt;/Label&gt;\n-                              &lt;DatePicker fx:id=\&quot;dateEcheancePicker\&quot; prefHeight=\&quot;25.0\&quot; prefWidth=\&quot;250.0\&quot; /&gt;\n-                           &lt;/children&gt;\n-                        &lt;/HBox&gt;\n-                        \n-                        &lt;HBox alignment=\&quot;CENTER_LEFT\&quot; spacing=\&quot;10.0\&quot;&gt;\n-                           &lt;children&gt;\n-                              &lt;Label prefWidth=\&quot;80.0\&quot; text=\&quot;Priorité :\&quot;&gt;\n-                                 &lt;font&gt;\n-                                    &lt;Font name=\&quot;System Bold\&quot; size=\&quot;12.0\&quot; /&gt;\n-                                 &lt;/font&gt;\n-                              &lt;/Label&gt;\n-                              &lt;ComboBox fx:id=\&quot;prioriteComboBox\&quot; prefHeight=\&quot;25.0\&quot; prefWidth=\&quot;250.0\&quot; /&gt;\n-                           &lt;/children&gt;\n-                        &lt;/HBox&gt;\n-                        \n-                        &lt;HBox alignment=\&quot;CENTER_LEFT\&quot; spacing=\&quot;10.0\&quot;&gt;\n-                           &lt;children&gt;\n-                              &lt;Label prefWidth=\&quot;80.0\&quot; text=\&quot;Statut :\&quot;&gt;\n-                                 &lt;font&gt;\n-                                    &lt;Font name=\&quot;System Bold\&quot; size=\&quot;12.0\&quot; /&gt;\n-                                 &lt;/font&gt;\n-                              &lt;/Label&gt;\n-                              &lt;ComboBox fx:id=\&quot;statutComboBox\&quot; prefHeight=\&quot;25.0\&quot; prefWidth=\&quot;250.0\&quot; /&gt;\n-                           &lt;/children&gt;\n-                        &lt;/HBox&gt;\n-                        \n-                        &lt;HBox alignment=\&quot;CENTER\&quot; spacing=\&quot;20.0\&quot;&gt;\n-                           &lt;children&gt;\n-                              &lt;Button fx:id=\&quot;ajouterBtn\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#ajouterTache\&quot; style=\&quot;-fx-background-color: #2ecc71;\&quot; text=\&quot;Ajouter\&quot; textFill=\&quot;WHITE\&quot;&gt;\n-                                 &lt;font&gt;\n-                                    &lt;Font name=\&quot;System Bold\&quot; size=\&quot;12.0\&quot; /&gt;\n-                                 &lt;/font&gt;\n-                              &lt;/Button&gt;\n-                              &lt;Button fx:id=\&quot;modifierBtn\&quot; disable=\&quot;true\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#modifierTache\&quot; style=\&quot;-fx-background-color: #f39c12;\&quot; text=\&quot;Modifier\&quot; textFill=\&quot;WHITE\&quot;&gt;\n-                                 &lt;font&gt;\n-                                    &lt;Font name=\&quot;System Bold\&quot; size=\&quot;12.0\&quot; /&gt;\n-                                 &lt;/font&gt;\n-                              &lt;/Button&gt;\n-                              &lt;Button fx:id=\&quot;supprimerBtn\&quot; disable=\&quot;true\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#supprimerTache\&quot; style=\&quot;-fx-background-color: #e74c3c;\&quot; text=\&quot;Supprimer\&quot; textFill=\&quot;WHITE\&quot;&gt;\n-                                 &lt;font&gt;\n-                                    &lt;Font name=\&quot;System Bold\&quot; size=\&quot;12.0\&quot; /&gt;\n-                                 &lt;/font&gt;\n-                              &lt;/Button&gt;\n-                           &lt;/children&gt;\n-                           &lt;VBox.margin&gt;\n-                              &lt;Insets top=\&quot;10.0\&quot; /&gt;\n-                           &lt;/VBox.margin&gt;\n-                        &lt;/HBox&gt;\n-                        \n-                        &lt;Label fx:id=\&quot;messageLabel\&quot; alignment=\&quot;CENTER\&quot; textFill=\&quot;#2ecc71\&quot;&gt;\n+                        &lt;Label fx:id=\&quot;utilisateurLabel\&quot; text=\&quot;[Nom de l'utilisateur]\&quot;&gt;\n                            &lt;font&gt;\n-                              &lt;Font size=\&quot;12.0\&quot; /&gt;\n+                              &lt;Font size=\&quot;14.0\&quot; /&gt;\n                            &lt;/font&gt;\n                         &lt;/Label&gt;\n                      &lt;/children&gt;\n                      &lt;padding&gt;\n-                        &lt;Insets bottom=\&quot;10.0\&quot; left=\&quot;10.0\&quot; right=\&quot;10.0\&quot; top=\&quot;10.0\&quot; /&gt;\n+                        &lt;Insets bottom=\&quot;5.0\&quot; left=\&quot;10.0\&quot; right=\&quot;10.0\&quot; top=\&quot;5.0\&quot; /&gt;\n                      &lt;/padding&gt;\n-                  &lt;/VBox&gt;\n+                  &lt;/HBox&gt;\n                &lt;/children&gt;\n-               &lt;padding&gt;\n-                  &lt;Insets left=\&quot;10.0\&quot; right=\&quot;10.0\&quot; /&gt;\n-               &lt;/padding&gt;\n-            &lt;/HBox&gt;\n-         &lt;/children&gt;\n-      &lt;/VBox&gt;\n+            &lt;/VBox&gt;\n+         &lt;/top&gt;\n+         &lt;center&gt;\n+            &lt;SplitPane dividerPositions=\&quot;0.25\&quot; prefHeight=\&quot;160.0\&quot; prefWidth=\&quot;200.0\&quot; BorderPane.alignment=\&quot;CENTER\&quot;&gt;\n+              &lt;items&gt;\n+                &lt;AnchorPane minHeight=\&quot;0.0\&quot; minWidth=\&quot;0.0\&quot; prefHeight=\&quot;160.0\&quot; prefWidth=\&quot;100.0\&quot;&gt;\n+                     &lt;children&gt;\n+                        &lt;VBox prefHeight=\&quot;533.0\&quot; prefWidth=\&quot;221.0\&quot; spacing=\&quot;10.0\&quot; AnchorPane.bottomAnchor=\&quot;0.0\&quot; AnchorPane.leftAnchor=\&quot;0.0\&quot; AnchorPane.rightAnchor=\&quot;0.0\&quot; AnchorPane.topAnchor=\&quot;0.0\&quot;&gt;\n+                           &lt;children&gt;\n+                              &lt;Label text=\&quot;Listes\&quot;&gt;\n+                                 &lt;font&gt;\n+                                    &lt;Font name=\&quot;System Bold\&quot; size=\&quot;16.0\&quot; /&gt;\n+                                 &lt;/font&gt;\n+                              &lt;/Label&gt;\n+                              &lt;ListView fx:id=\&quot;listesListView\&quot; onMouseClicked=\&quot;#selectionnerListe\&quot; prefHeight=\&quot;200.0\&quot; prefWidth=\&quot;200.0\&quot; VBox.vgrow=\&quot;ALWAYS\&quot; /&gt;\n+                              &lt;HBox alignment=\&quot;CENTER\&quot; spacing=\&quot;10.0\&quot;&gt;\n+                                 &lt;children&gt;\n+                                    &lt;TextField fx:id=\&quot;nomListeField\&quot; promptText=\&quot;Nom de la liste\&quot; HBox.hgrow=\&quot;ALWAYS\&quot; /&gt;\n+                                    &lt;Button fx:id=\&quot;ajouterListeBtn\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#ajouterListe\&quot; style=\&quot;-fx-background-color: #2ecc71;\&quot; text=\&quot;+\&quot; textFill=\&quot;WHITE\&quot;&gt;\n+                                       &lt;font&gt;\n+                                          &lt;Font name=\&quot;System Bold\&quot; size=\&quot;12.0\&quot; /&gt;\n+                                       &lt;/font&gt;\n+                                    &lt;/Button&gt;\n+                                 &lt;/children&gt;\n+                              &lt;/HBox&gt;\n+                              &lt;HBox alignment=\&quot;CENTER\&quot; spacing=\&quot;10.0\&quot;&gt;\n+                                 &lt;children&gt;\n+                                    &lt;Button fx:id=\&quot;modifierListeBtn\&quot; disable=\&quot;true\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#modifierListe\&quot; style=\&quot;-fx-background-color: #f39c12;\&quot; text=\&quot;Modifier\&quot; textFill=\&quot;WHITE\&quot;&gt;\n+                                       &lt;font&gt;\n+                                          &lt;Font name=\&quot;System Bold\&quot; size=\&quot;12.0\&quot; /&gt;\n+                                       &lt;/font&gt;\n+                                    &lt;/Button&gt;\n+                                    &lt;Button fx:id=\&quot;supprimerListeBtn\&quot; disable=\&quot;true\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#supprimerListe\&quot; style=\&quot;-fx-background-color: #e74c3c;\&quot; text=\&quot;Supprimer\&quot; textFill=\&quot;WHITE\&quot;&gt;\n+                                       &lt;font&gt;\n+                                          &lt;Font name=\&quot;System Bold\&quot; size=\&quot;12.0\&quot; /&gt;\n+                                       &lt;/font&gt;\n+                                    &lt;/Button&gt;\n+                                 &lt;/children&gt;\n+                              &lt;/HBox&gt;\n+                           &lt;/children&gt;\n+                           &lt;padding&gt;\n+                              &lt;Insets bottom=\&quot;10.0\&quot; left=\&quot;10.0\&quot; right=\&quot;10.0\&quot; top=\&quot;10.0\&quot; /&gt;\n+                           &lt;/padding&gt;\n+                        &lt;/VBox&gt;\n+                     &lt;/children&gt;\n+                  &lt;/AnchorPane&gt;\n+                &lt;AnchorPane minHeight=\&quot;0.0\&quot; minWidth=\&quot;0.0\&quot; prefHeight=\&quot;160.0\&quot; prefWidth=\&quot;100.0\&quot;&gt;\n+                     &lt;children&gt;\n+                        &lt;BorderPane prefHeight=\&quot;533.0\&quot; prefWidth=\&quot;669.0\&quot; AnchorPane.bottomAnchor=\&quot;0.0\&quot; AnchorPane.leftAnchor=\&quot;0.0\&quot; AnchorPane.rightAnchor=\&quot;0.0\&quot; AnchorPane.topAnchor=\&quot;0.0\&quot;&gt;\n+                           &lt;top&gt;\n+                              &lt;VBox spacing=\&quot;10.0\&quot; BorderPane.alignment=\&quot;CENTER\&quot;&gt;\n+                                 &lt;children&gt;\n+                                    &lt;Label fx:id=\&quot;listeSelectionneeLabel\&quot; text=\&quot;[Nom de la liste sélectionnée]\&quot;&gt;\n+                                       &lt;font&gt;\n+                                          &lt;Font name=\&quot;System Bold\&quot; size=\&quot;16.0\&quot; /&gt;\n+                                       &lt;/font&gt;\n+                                    &lt;/Label&gt;\n+                                    &lt;HBox alignment=\&quot;CENTER_LEFT\&quot; spacing=\&quot;10.0\&quot;&gt;\n+                                       &lt;children&gt;\n+                                          &lt;TextField fx:id=\&quot;rechercheTacheField\&quot; promptText=\&quot;Rechercher une tâche...\&quot; HBox.hgrow=\&quot;ALWAYS\&quot; /&gt;\n+                                          &lt;Button fx:id=\&quot;rechercheTacheBtn\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#rechercherTache\&quot; style=\&quot;-fx-background-color: #3498db;\&quot; text=\&quot;Rechercher\&quot; textFill=\&quot;WHITE\&quot;&gt;\n+                                             &lt;font&gt;\n+                                                &lt;Font size=\&quot;12.0\&quot; /&gt;\n+                                             &lt;/font&gt;\n+                                          &lt;/Button&gt;\n+                                          &lt;Button fx:id=\&quot;resetRechercheTacheBtn\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#resetRechercheTache\&quot; style=\&quot;-fx-background-color: #7f8c8d;\&quot; text=\&quot;Réinitialiser\&quot; textFill=\&quot;WHITE\&quot;&gt;\n+                                             &lt;font&gt;\n+                                                &lt;Font size=\&quot;12.0\&quot; /&gt;\n+                                             &lt;/font&gt;\n+                                          &lt;/Button&gt;\n+                                       &lt;/children&gt;\n+                                    &lt;/HBox&gt;\n+                                 &lt;/children&gt;\n+                                 &lt;padding&gt;\n+                                    &lt;Insets bottom=\&quot;10.0\&quot; left=\&quot;10.0\&quot; right=\&quot;10.0\&quot; top=\&quot;10.0\&quot; /&gt;\n+                                 &lt;/padding&gt;\n+                              &lt;/VBox&gt;\n+                           &lt;/top&gt;\n+                           &lt;center&gt;\n+                              &lt;TableView fx:id=\&quot;tachesTableView\&quot; onMouseClicked=\&quot;#selectionnerTache\&quot; prefHeight=\&quot;200.0\&quot; prefWidth=\&quot;200.0\&quot; BorderPane.alignment=\&quot;CENTER\&quot;&gt;\n+                                 &lt;BorderPane.margin&gt;\n+                                    &lt;Insets bottom=\&quot;10.0\&quot; left=\&quot;10.0\&quot; right=\&quot;10.0\&quot; top=\&quot;0.0\&quot; /&gt;\n+                                 &lt;/BorderPane.margin&gt;\n+                              &lt;/TableView&gt;\n+                           &lt;/center&gt;\n+                           &lt;bottom&gt;\n+                              &lt;VBox spacing=\&quot;10.0\&quot; BorderPane.alignment=\&quot;CENTER\&quot;&gt;\n+                                 &lt;children&gt;\n+                                    &lt;HBox alignment=\&quot;CENTER_LEFT\&quot; spacing=\&quot;10.0\&quot;&gt;\n+                                       &lt;children&gt;\n+                                          &lt;TextField fx:id=\&quot;nomTacheField\&quot; promptText=\&quot;Nom de la tâche\&quot; HBox.hgrow=\&quot;ALWAYS\&quot; /&gt;\n+                                          &lt;ComboBox fx:id=\&quot;typeComboBox\&quot; prefWidth=\&quot;150.0\&quot; promptText=\&quot;Type\&quot; /&gt;\n+                                          &lt;ComboBox fx:id=\&quot;etatComboBox\&quot; prefWidth=\&quot;150.0\&quot; promptText=\&quot;État\&quot; /&gt;\n+                                       &lt;/children&gt;\n+                                    &lt;/HBox&gt;\n+                                    &lt;HBox alignment=\&quot;CENTER\&quot; spacing=\&quot;10.0\&quot;&gt;\n+                                       &lt;children&gt;\n+                                          &lt;Button fx:id=\&quot;ajouterTacheBtn\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#ajouterTache\&quot; style=\&quot;-fx-background-color: #2ecc71;\&quot; text=\&quot;Ajouter\&quot; textFill=\&quot;WHITE\&quot;&gt;\n+                                             &lt;font&gt;\n+                                                &lt;Font name=\&quot;System Bold\&quot; size=\&quot;12.0\&quot; /&gt;\n+                                             &lt;/font&gt;\n+                                          &lt;/Button&gt;\n+                                          &lt;Button fx:id=\&quot;modifierTacheBtn\&quot; disable=\&quot;true\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#modifierTache\&quot; style=\&quot;-fx-background-color: #f39c12;\&quot; text=\&quot;Modifier\&quot; textFill=\&quot;WHITE\&quot;&gt;\n+                                             &lt;font&gt;\n+                                                &lt;Font name=\&quot;System Bold\&quot; size=\&quot;12.0\&quot; /&gt;\n+                                             &lt;/font&gt;\n+                                          &lt;/Button&gt;\n+                                          &lt;Button fx:id=\&quot;supprimerTacheBtn\&quot; disable=\&quot;true\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#supprimerTache\&quot; style=\&quot;-fx-background-color: #e74c3c;\&quot; text=\&quot;Supprimer\&quot; textFill=\&quot;WHITE\&quot;&gt;\n+                                             &lt;font&gt;\n+                                                &lt;Font name=\&quot;System Bold\&quot; size=\&quot;12.0\&quot; /&gt;\n+                                             &lt;/font&gt;\n+                                          &lt;/Button&gt;\n+                                       &lt;/children&gt;\n+                                    &lt;/HBox&gt;\n+                                    &lt;Label fx:id=\&quot;messageLabel\&quot; alignment=\&quot;CENTER\&quot; textFill=\&quot;#2ecc71\&quot;&gt;\n+                                       &lt;font&gt;\n+                                          &lt;Font size=\&quot;14.0\&quot; /&gt;\n+                                       &lt;/font&gt;\n+                                    &lt;/Label&gt;\n+                                 &lt;/children&gt;\n+                                 &lt;padding&gt;\n+                                    &lt;Insets bottom=\&quot;10.0\&quot; left=\&quot;10.0\&quot; right=\&quot;10.0\&quot; top=\&quot;0.0\&quot; /&gt;\n+                                 &lt;/padding&gt;\n+                              &lt;/VBox&gt;\n+                           &lt;/bottom&gt;\n+                        &lt;/BorderPane&gt;\n+                     &lt;/children&gt;\n+                  &lt;/AnchorPane&gt;\n+              &lt;/items&gt;\n+            &lt;/SplitPane&gt;\n+         &lt;/center&gt;\n+      &lt;/BorderPane&gt;\n    &lt;/children&gt;\n &lt;/AnchorPane&gt;&quot;,&quot;refToolCallId&quot;:&quot;toolu_011QNoBpNNNqCPg8Sj7EA9Ld&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Enfin, créons le contrôleur TodoListController.java :&quot;},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_01KCxoMKW7Ao8DfttxmiVU5o&quot;,&quot;title&quot;:&quot;&quot;,&quot;statusText&quot;:&quot;File already exists&quot;,&quot;status&quot;:&quot;WARNING&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main/java/appli/user/TodoListController.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\appli\\user\\TodoListController.java&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Vérifions si le fichier TodoListController.java existe déjà et son contenu :&quot;},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_01MLsDuQzTZRisD8QBnHGMKr&quot;,&quot;statusText&quot;:&quot;Viewed file&quot;,&quot;status&quot;:&quot;SUCCESS&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main/java/appli/user/TodoListController.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\appli\\user\\TodoListController.java&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Mettons à jour le TodoListController.java pour qu'il corresponde à notre nouveau modèle de données :&quot;},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_01LFHSNxAXxmQbkcvGayCVB4&quot;,&quot;statusText&quot;:&quot;Change generated&quot;,&quot;status&quot;:&quot;SUCCESS&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main/java/appli/user/TodoListController.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\appli\\user\\TodoListController.java&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;codeHunk&quot;,&quot;lineBasedDiff&quot;:&quot;--- src/main/java/appli/user/TodoListController.java\n+++ src/main/java/appli/user/TodoListController.java\n@@ -3,95 +3,119 @@\n import appli.StartApplication;\n import javafx.collections.FXCollections;\n import javafx.collections.ObservableList;\n-import javafx.event.ActionEvent;\n import javafx.fxml.FXML;\n import javafx.fxml.Initializable;\n import javafx.scene.control.*;\n import javafx.scene.control.cell.PropertyValueFactory;\n import javafx.scene.input.MouseEvent;\n+import model.Liste;\n import model.Tache;\n+import model.Type;\n import model.Utilisateur;\n+import repository.ListeRepository;\n import repository.TacheRepository;\n+import repository.TypeRepository;\n \n import java.io.IOException;\n import java.net.URL;\n-import java.time.LocalDate;\n import java.util.ArrayList;\n import java.util.ResourceBundle;\n \n public class TodoListController implements Initializable {\n \n     @FXML\n-    private TableView&lt;Tache&gt; tableauTaches;\n-\n-    @FXML\n-    private TextField titreField;\n-\n-    @FXML\n-    private TextArea descriptionArea;\n-\n-    @FXML\n-    private DatePicker dateEcheancePicker;\n-\n-    @FXML\n-    private ComboBox&lt;String&gt; prioriteComboBox;\n-\n-    @FXML\n-    private ComboBox&lt;String&gt; statutComboBox;\n-\n-    @FXML\n-    private Button ajouterBtn;\n-\n-    @FXML\n-    private Button modifierBtn;\n-\n-    @FXML\n-    private Button supprimerBtn;\n-\n-    @FXML\n-    private TextField rechercheField;\n+    private Label utilisateurLabel;\n+\n+    @FXML\n+    private ListView&lt;Liste&gt; listesListView;\n+\n+    @FXML\n+    private TextField nomListeField;\n+\n+    @FXML\n+    private Button ajouterListeBtn;\n+\n+    @FXML\n+    private Button modifierListeBtn;\n+\n+    @FXML\n+    private Button supprimerListeBtn;\n+\n+    @FXML\n+    private Label listeSelectionneeLabel;\n+\n+    @FXML\n+    private TextField rechercheTacheField;\n+\n+    @FXML\n+    private Button rechercheTacheBtn;\n+\n+    @FXML\n+    private Button resetRechercheTacheBtn;\n+\n+    @FXML\n+    private TableView&lt;Tache&gt; tachesTableView;\n+\n+    @FXML\n+    private TextField nomTacheField;\n+\n+    @FXML\n+    private ComboBox&lt;Type&gt; typeComboBox;\n+\n+    @FXML\n+    private ComboBox&lt;String&gt; etatComboBox;\n+\n+    @FXML\n+    private Button ajouterTacheBtn;\n+\n+    @FXML\n+    private Button modifierTacheBtn;\n+\n+    @FXML\n+    private Button supprimerTacheBtn;\n \n     @FXML\n     private Label messageLabel;\n \n-    @FXML\n-    private Label nomUtilisateurLabel;\n-\n     private Utilisateur utilisateur;\n+    private Liste listeSelectionnee;\n+    private Tache tacheSelectionnee;\n+    \n+    private ListeRepository listeRepository;\n     private TacheRepository tacheRepository;\n-    private ObservableList&lt;Tache&gt; listeTaches;\n-    private Tache tacheSelectionnee;\n+    private TypeRepository typeRepository;\n+    \n+    private ObservableList&lt;Liste&gt; listes;\n+    private ObservableList&lt;Tache&gt; taches;\n+    private ObservableList&lt;Type&gt; types;\n \n     @Override\n     public void initialize(URL location, ResourceBundle resources) {\n+        listeRepository = new ListeRepository();\n         tacheRepository = new TacheRepository();\n-\n-        // Configuration des colonnes du tableau\n-        TableColumn&lt;Tache, String&gt; colTitre = new TableColumn&lt;&gt;(\&quot;Titre\&quot;);\n-        colTitre.setCellValueFactory(new PropertyValueFactory&lt;&gt;(\&quot;titre\&quot;));\n-        colTitre.setPrefWidth(150);\n-\n-        TableColumn&lt;Tache, String&gt; colPriorite = new TableColumn&lt;&gt;(\&quot;Priorité\&quot;);\n-        colPriorite.setCellValueFactory(new PropertyValueFactory&lt;&gt;(\&quot;priorite\&quot;));\n-        colPriorite.setPrefWidth(80);\n-\n-        TableColumn&lt;Tache, LocalDate&gt; colDate = new TableColumn&lt;&gt;(\&quot;Date limite\&quot;);\n-        colDate.setCellValueFactory(new PropertyValueFactory&lt;&gt;(\&quot;dateEcheance\&quot;));\n-        colDate.setPrefWidth(100);\n-\n-        TableColumn&lt;Tache, String&gt; colStatut = new TableColumn&lt;&gt;(\&quot;Statut\&quot;);\n-        colStatut.setCellValueFactory(new PropertyValueFactory&lt;&gt;(\&quot;statut\&quot;));\n-        colStatut.setPrefWidth(80);\n-\n-        tableauTaches.getColumns().addAll(colTitre, colPriorite, colDate, colStatut);\n-\n-        // Configuration des ComboBox\n-        prioriteComboBox.setItems(FXCollections.observableArrayList(\&quot;Haute\&quot;, \&quot;Moyenne\&quot;, \&quot;Basse\&quot;));\n-        statutComboBox.setItems(FXCollections.observableArrayList(\&quot;À faire\&quot;, \&quot;En cours\&quot;, \&quot;Terminée\&quot;));\n-\n-        // Initialisation de la date à aujourd'hui\n-        dateEcheancePicker.setValue(LocalDate.now());\n-\n+        typeRepository = new TypeRepository();\n+        \n+        // Configuration des colonnes du tableau des tâches\n+        TableColumn&lt;Tache, String&gt; colNom = new TableColumn&lt;&gt;(\&quot;Nom\&quot;);\n+        colNom.setCellValueFactory(new PropertyValueFactory&lt;&gt;(\&quot;nom\&quot;));\n+        colNom.setPrefWidth(200);\n+        \n+        TableColumn&lt;Tache, String&gt; colEtat = new TableColumn&lt;&gt;(\&quot;État\&quot;);\n+        colEtat.setCellValueFactory(new PropertyValueFactory&lt;&gt;(\&quot;etatString\&quot;));\n+        colEtat.setPrefWidth(100);\n+        \n+        TableColumn&lt;Tache, String&gt; colType = new TableColumn&lt;&gt;(\&quot;Type\&quot;);\n+        colType.setCellValueFactory(new PropertyValueFactory&lt;&gt;(\&quot;nomType\&quot;));\n+        colType.setPrefWidth(100);\n+        \n+        tachesTableView.getColumns().addAll(colNom, colEtat, colType);\n+        \n+        // Configuration des états possibles\n+        etatComboBox.setItems(FXCollections.observableArrayList(\&quot;À faire\&quot;, \&quot;En cours\&quot;, \&quot;Terminée\&quot;));\n+        \n+        // Chargement des types\n+        chargerTypes();\n+        \n         // Effacer le message après 3 secondes\n         messageLabel.textProperty().addListener((observable, oldValue, newValue) -&gt; {\n             if (newValue != null &amp;&amp; !newValue.isEmpty()) {\n@@ -106,151 +130,416 @@\n             }\n         });\n     }\n-\n-    /**\n-     * Initialise les données de l'utilisateur et charge ses tâches\n-     * @param utilisateur L'utilisateur dont on veut afficher les tâches\n+    \n+    /**\n+     * Initialise les données de l'utilisateur et charge ses listes\n+     * @param utilisateur L'utilisateur dont on veut afficher les listes et tâches\n      */\n     public void initData(Utilisateur utilisateur) {\n         this.utilisateur = utilisateur;\n-        nomUtilisateurLabel.setText(utilisateur.getNom() + \&quot; \&quot; + utilisateur.getPrenom());\n-        chargerTaches();\n-    }\n-\n-    /**\n-     * Charge les tâches de l'utilisateur depuis la base de données\n-     */\n-    private void chargerTaches() {\n-        if (utilisateur != null) {\n-            ArrayList&lt;Tache&gt; taches = tacheRepository.getTachesParUtilisateur(utilisateur.getIdUtilisateur());\n-            listeTaches = FXCollections.observableArrayList(taches);\n-            tableauTaches.setItems(listeTaches);\n-        }\n-    }\n-\n-    /**\n-     * Gère le clic sur une tâche dans le tableau\n-     */\n-    @FXML\n-    public void cliqueTache(MouseEvent event) {\n-        tacheSelectionnee = tableauTaches.getSelectionModel().getSelectedItem();\n+        utilisateurLabel.setText(utilisateur.getNom() + \&quot; \&quot; + utilisateur.getPrenom());\n+        chargerListes();\n+    }\n+    \n+    /**\n+     * Charge les listes de l'utilisateur\n+     */\n+    private void chargerListes() {\n+        ArrayList&lt;Liste&gt; listesUtilisateur = listeRepository.getListesParUtilisateur(utilisateur.getIdUtilisateur());\n+        listes = FXCollections.observableArrayList(listesUtilisateur);\n+        listesListView.setItems(listes);\n+        \n+        if (listes.isEmpty()) {\n+            listeSelectionneeLabel.setText(\&quot;Aucune liste disponible\&quot;);\n+            tachesTableView.getItems().clear();\n+        }\n+    }\n+    \n+    /**\n+     * Charge les types de tâches\n+     */\n+    private void chargerTypes() {\n+        ArrayList&lt;Type&gt; typesDisponibles = typeRepository.getAllTypes();\n+        types = FXCollections.observableArrayList(typesDisponibles);\n+        typeComboBox.setItems(types);\n+        \n+        if (types.isEmpty()) {\n+            // Créer des types par défaut si aucun n'existe\n+            Type typeUrgent = new Type(\&quot;Urgent\&quot;, \&quot;#e74c3c\&quot;);\n+            Type typeImportant = new Type(\&quot;Important\&quot;, \&quot;#f39c12\&quot;);\n+            Type typeNormal = new Type(\&quot;Normal\&quot;, \&quot;#3498db\&quot;);\n+            \n+            int idUrgent = typeRepository.ajouterType(typeUrgent);\n+            int idImportant = typeRepository.ajouterType(typeImportant);\n+            int idNormal = typeRepository.ajouterType(typeNormal);\n+            \n+            if (idUrgent &gt; 0) {\n+                typeUrgent.setIdType(idUrgent);\n+                types.add(typeUrgent);\n+            }\n+            \n+            if (idImportant &gt; 0) {\n+                typeImportant.setIdType(idImportant);\n+                types.add(typeImportant);\n+            }\n+            \n+            if (idNormal &gt; 0) {\n+                typeNormal.setIdType(idNormal);\n+                types.add(typeNormal);\n+            }\n+        }\n+    }\n+    \n+    /**\n+     * Charge les tâches d'une liste\n+     * @param idListe L'ID de la liste\n+     */\n+    private void chargerTaches(int idListe) {\n+        ArrayList&lt;Tache&gt; tachesListe = tacheRepository.getTachesParListe(idListe);\n+        taches = FXCollections.observableArrayList(tachesListe);\n+        tachesTableView.setItems(taches);\n+    }\n+    \n+    /**\n+     * Gère la sélection d'une liste\n+     */\n+    @FXML\n+    public void selectionnerListe(MouseEvent event) {\n+        listeSelectionnee = listesListView.getSelectionModel().getSelectedItem();\n+        \n+        if (listeSelectionnee != null) {\n+            listeSelectionneeLabel.setText(listeSelectionnee.getNom());\n+            modifierListeBtn.setDisable(false);\n+            supprimerListeBtn.setDisable(false);\n+            \n+            // Charger les tâches de la liste\n+            chargerTaches(listeSelectionnee.getIdListe());\n+            \n+            // Réinitialiser les champs de tâche\n+            nomTacheField.clear();\n+            etatComboBox.getSelectionModel().clearSelection();\n+            typeComboBox.getSelectionModel().clearSelection();\n+            modifierTacheBtn.setDisable(true);\n+            supprimerTacheBtn.setDisable(true);\n+        } else {\n+            listeSelectionneeLabel.setText(\&quot;Aucune liste sélectionnée\&quot;);\n+            modifierListeBtn.setDisable(true);\n+            supprimerListeBtn.setDisable(true);\n+            tachesTableView.getItems().clear();\n+        }\n+    }\n+    \n+    /**\n+     * Gère la sélection d'une tâche\n+     */\n+    @FXML\n+    public void selectionnerTache(MouseEvent event) {\n+        tacheSelectionnee = tachesTableView.getSelectionModel().getSelectedItem();\n         \n         if (tacheSelectionnee != null) {\n-            // Activer les boutons de modification et suppression\n-            modifierBtn.setDisable(false);\n-            supprimerBtn.setDisable(false);\n-            \n-            // Remplir les champs avec les données de la tâche sélectionnée\n-            titreField.setText(tacheSelectionnee.getTitre());\n-            descriptionArea.setText(tacheSelectionnee.getDescription());\n-            dateEcheancePicker.setValue(tacheSelectionnee.getDateEcheance());\n-            prioriteComboBox.setValue(tacheSelectionnee.getPriorite());\n-            statutComboBox.setValue(tacheSelectionnee.getStatut());\n-        } else {\n-            // Désactiver les boutons si aucune tâche n'est sélectionnée\n-            modifierBtn.setDisable(true);\n-            supprimerBtn.setDisable(true);\n-            \n-            // Vider les champs\n-            viderChamps();\n-        }\n-    }\n-\n+            nomTacheField.setText(tacheSelectionnee.getNom());\n+            \n+            // Sélectionner l'état\n+            switch (tacheSelectionnee.getEtat()) {\n+                case 0:\n+                    etatComboBox.getSelectionModel().select(\&quot;À faire\&quot;);\n+                    break;\n+                case 1:\n+                    etatComboBox.getSelectionModel().select(\&quot;En cours\&quot;);\n+                    break;\n+                case 2:\n+                    etatComboBox.getSelectionModel().select(\&quot;Terminée\&quot;);\n+                    break;\n+            }\n+            \n+            // Sélectionner le type\n+            for (Type type : types) {\n+                if (type.getIdType() == tacheSelectionnee.getRefType()) {\n+                    typeComboBox.getSelectionModel().select(type);\n+                    break;\n+                }\n+            }\n+            \n+            modifierTacheBtn.setDisable(false);\n+            supprimerTacheBtn.setDisable(false);\n+        } else {\n+            nomTacheField.clear();\n+            etatComboBox.getSelectionModel().clearSelection();\n+            typeComboBox.getSelectionModel().clearSelection();\n+            modifierTacheBtn.setDisable(true);\n+            supprimerTacheBtn.setDisable(true);\n+        }\n+    }\n+    \n+    /**\n+     * Ajoute une nouvelle liste\n+     */\n+    @FXML\n+    public void ajouterListe() {\n+        String nomListe = nomListeField.getText().trim();\n+        \n+        if (nomListe.isEmpty()) {\n+            messageLabel.setText(\&quot;Veuillez saisir un nom pour la liste.\&quot;);\n+            messageLabel.setTextFill(javafx.scene.paint.Color.RED);\n+            return;\n+        }\n+        \n+        Liste nouvelleListe = new Liste(nomListe);\n+        int idListe = listeRepository.ajouterListe(nouvelleListe);\n+        \n+        if (idListe &gt; 0) {\n+            nouvelleListe.setIdListe(idListe);\n+            \n+            // Associer la liste à l'utilisateur\n+            boolean associationReussie = listeRepository.associerListeUtilisateur(idListe, utilisateur.getIdUtilisateur());\n+            \n+            if (associationReussie) {\n+                listes.add(nouvelleListe);\n+                nomListeField.clear();\n+                messageLabel.setText(\&quot;Liste ajoutée avec succès !\&quot;);\n+                messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);\n+            } else {\n+                messageLabel.setText(\&quot;Erreur lors de l'association de la liste à l'utilisateur.\&quot;);\n+                messageLabel.setTextFill(javafx.scene.paint.Color.RED);\n+            }\n+        } else {\n+            messageLabel.setText(\&quot;Erreur lors de l'ajout de la liste.\&quot;);\n+            messageLabel.setTextFill(javafx.scene.paint.Color.RED);\n+        }\n+    }\n+    \n+    /**\n+     * Modifie la liste sélectionnée\n+     */\n+    @FXML\n+    public void modifierListe() {\n+        if (listeSelectionnee == null) {\n+            messageLabel.setText(\&quot;Aucune liste sélectionnée.\&quot;);\n+            messageLabel.setTextFill(javafx.scene.paint.Color.RED);\n+            return;\n+        }\n+        \n+        String nouveauNom = nomListeField.getText().trim();\n+        \n+        if (nouveauNom.isEmpty()) {\n+            messageLabel.setText(\&quot;Veuillez saisir un nom pour la liste.\&quot;);\n+            messageLabel.setTextFill(javafx.scene.paint.Color.RED);\n+            return;\n+        }\n+        \n+        listeSelectionnee.setNom(nouveauNom);\n+        boolean succes = listeRepository.mettreAJourListe(listeSelectionnee);\n+        \n+        if (succes) {\n+            listesListView.refresh();\n+            listeSelectionneeLabel.setText(nouveauNom);\n+            nomListeField.clear();\n+            messageLabel.setText(\&quot;Liste modifiée avec succès !\&quot;);\n+            messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);\n+        } else {\n+            messageLabel.setText(\&quot;Erreur lors de la modification de la liste.\&quot;);\n+            messageLabel.setTextFill(javafx.scene.paint.Color.RED);\n+        }\n+    }\n+    \n+    /**\n+     * Supprime la liste sélectionnée\n+     */\n+    @FXML\n+    public void supprimerListe() {\n+        if (listeSelectionnee == null) {\n+            messageLabel.setText(\&quot;Aucune liste sélectionnée.\&quot;);\n+            messageLabel.setTextFill(javafx.scene.paint.Color.RED);\n+            return;\n+        }\n+        \n+        boolean succes = listeRepository.supprimerListe(listeSelectionnee.getIdListe());\n+        \n+        if (succes) {\n+            listes.remove(listeSelectionnee);\n+            listeSelectionnee = null;\n+            listeSelectionneeLabel.setText(\&quot;Aucune liste sélectionnée\&quot;);\n+            tachesTableView.getItems().clear();\n+            nomListeField.clear();\n+            modifierListeBtn.setDisable(true);\n+            supprimerListeBtn.setDisable(true);\n+            messageLabel.setText(\&quot;Liste supprimée avec succès !\&quot;);\n+            messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);\n+        } else {\n+            messageLabel.setText(\&quot;Erreur lors de la suppression de la liste.\&quot;);\n+            messageLabel.setTextFill(javafx.scene.paint.Color.RED);\n+        }\n+    }\n+    \n     /**\n      * Ajoute une nouvelle tâche\n      */\n     @FXML\n     public void ajouterTache() {\n-        if (validerChamps()) {\n-            Tache nouvelleTache = new Tache(\n-                    titreField.getText(),\n-                    descriptionArea.getText(),\n-                    dateEcheancePicker.getValue(),\n-                    prioriteComboBox.getValue(),\n-                    statutComboBox.getValue(),\n-                    utilisateur.getIdUtilisateur()\n-            );\n-            \n-            int idTache = tacheRepository.ajouterTache(nouvelleTache);\n-            \n-            if (idTache &gt; 0) {\n-                nouvelleTache.setIdTache(idTache);\n-                listeTaches.add(nouvelleTache);\n-                messageLabel.setText(\&quot;Tâche ajoutée avec succès !\&quot;);\n-                messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);\n-                viderChamps();\n-            } else {\n-                messageLabel.setText(\&quot;Erreur lors de l'ajout de la tâche.\&quot;);\n-                messageLabel.setTextFill(javafx.scene.paint.Color.RED);\n-            }\n-        }\n-    }\n-\n+        if (listeSelectionnee == null) {\n+            messageLabel.setText(\&quot;Veuillez sélectionner une liste.\&quot;);\n+            messageLabel.setTextFill(javafx.scene.paint.Color.RED);\n+            return;\n+        }\n+        \n+        String nomTache = nomTacheField.getText().trim();\n+        Type typeSelectionne = typeComboBox.getValue();\n+        String etatSelectionne = etatComboBox.getValue();\n+        \n+        if (nomTache.isEmpty() || typeSelectionne == null || etatSelectionne == null) {\n+            messageLabel.setText(\&quot;Veuillez remplir tous les champs.\&quot;);\n+            messageLabel.setTextFill(javafx.scene.paint.Color.RED);\n+            return;\n+        }\n+        \n+        // Convertir l'état en entier\n+        int etat;\n+        switch (etatSelectionne) {\n+            case \&quot;En cours\&quot;:\n+                etat = 1;\n+                break;\n+            case \&quot;Terminée\&quot;:\n+                etat = 2;\n+                break;\n+            default:\n+                etat = 0; // À faire\n+        }\n+        \n+        Tache nouvelleTache = new Tache(nomTache, etat, listeSelectionnee.getIdListe(), typeSelectionne.getIdType());\n+        int idTache = tacheRepository.ajouterTache(nouvelleTache);\n+        \n+        if (idTache &gt; 0) {\n+            nouvelleTache.setIdTache(idTache);\n+            nouvelleTache.setNomListe(listeSelectionnee.getNom());\n+            nouvelleTache.setNomType(typeSelectionne.getNom());\n+            nouvelleTache.setCodeCouleur(typeSelectionne.getCodeCouleur());\n+            \n+            taches.add(nouvelleTache);\n+            nomTacheField.clear();\n+            etatComboBox.getSelectionModel().clearSelection();\n+            typeComboBox.getSelectionModel().clearSelection();\n+            messageLabel.setText(\&quot;Tâche ajoutée avec succès !\&quot;);\n+            messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);\n+        } else {\n+            messageLabel.setText(\&quot;Erreur lors de l'ajout de la tâche.\&quot;);\n+            messageLabel.setTextFill(javafx.scene.paint.Color.RED);\n+        }\n+    }\n+    \n     /**\n      * Modifie la tâche sélectionnée\n      */\n     @FXML\n     public void modifierTache() {\n-        if (tacheSelectionnee != null &amp;&amp; validerChamps()) {\n-            tacheSelectionnee.setTitre(titreField.getText());\n-            tacheSelectionnee.setDescription(descriptionArea.getText());\n-            tacheSelectionnee.setDateEcheance(dateEcheancePicker.getValue());\n-            tacheSelectionnee.setPriorite(prioriteComboBox.getValue());\n-            tacheSelectionnee.setStatut(statutComboBox.getValue());\n-            \n-            boolean succes = tacheRepository.mettreAJourTache(tacheSelectionnee);\n-            \n-            if (succes) {\n-                // Rafraîchir le tableau\n-                tableauTaches.refresh();\n-                messageLabel.setText(\&quot;Tâche modifiée avec succès !\&quot;);\n-                messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);\n-                viderChamps();\n-                modifierBtn.setDisable(true);\n-                supprimerBtn.setDisable(true);\n-            } else {\n-                messageLabel.setText(\&quot;Erreur lors de la modification de la tâche.\&quot;);\n-                messageLabel.setTextFill(javafx.scene.paint.Color.RED);\n-            }\n-        }\n-    }\n-\n+        if (tacheSelectionnee == null) {\n+            messageLabel.setText(\&quot;Aucune tâche sélectionnée.\&quot;);\n+            messageLabel.setTextFill(javafx.scene.paint.Color.RED);\n+            return;\n+        }\n+        \n+        String nomTache = nomTacheField.getText().trim();\n+        Type typeSelectionne = typeComboBox.getValue();\n+        String etatSelectionne = etatComboBox.getValue();\n+        \n+        if (nomTache.isEmpty() || typeSelectionne == null || etatSelectionne == null) {\n+            messageLabel.setText(\&quot;Veuillez remplir tous les champs.\&quot;);\n+            messageLabel.setTextFill(javafx.scene.paint.Color.RED);\n+            return;\n+        }\n+        \n+        // Convertir l'état en entier\n+        int etat;\n+        switch (etatSelectionne) {\n+            case \&quot;En cours\&quot;:\n+                etat = 1;\n+                break;\n+            case \&quot;Terminée\&quot;:\n+                etat = 2;\n+                break;\n+            default:\n+                etat = 0; // À faire\n+        }\n+        \n+        tacheSelectionnee.setNom(nomTache);\n+        tacheSelectionnee.setEtat(etat);\n+        tacheSelectionnee.setRefType(typeSelectionne.getIdType());\n+        tacheSelectionnee.setNomType(typeSelectionne.getNom());\n+        tacheSelectionnee.setCodeCouleur(typeSelectionne.getCodeCouleur());\n+        \n+        boolean succes = tacheRepository.mettreAJourTache(tacheSelectionnee);\n+        \n+        if (succes) {\n+            tachesTableView.refresh();\n+            nomTacheField.clear();\n+            etatComboBox.getSelectionModel().clearSelection();\n+            typeComboBox.getSelectionModel().clearSelection();\n+            modifierTacheBtn.setDisable(true);\n+            supprimerTacheBtn.setDisable(true);\n+            messageLabel.setText(\&quot;Tâche modifiée avec succès !\&quot;);\n+            messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);\n+        } else {\n+            messageLabel.setText(\&quot;Erreur lors de la modification de la tâche.\&quot;);\n+            messageLabel.setTextFill(javafx.scene.paint.Color.RED);\n+        }\n+    }\n+    \n     /**\n      * Supprime la tâche sélectionnée\n      */\n     @FXML\n     public void supprimerTache() {\n-        if (tacheSelectionnee != null) {\n-            boolean succes = tacheRepository.supprimerTache(tacheSelectionnee.getIdTache());\n-            \n-            if (succes) {\n-                listeTaches.remove(tacheSelectionnee);\n-                messageLabel.setText(\&quot;Tâche supprimée avec succès !\&quot;);\n-                messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);\n-                viderChamps();\n-                modifierBtn.setDisable(true);\n-                supprimerBtn.setDisable(true);\n-            } else {\n-                messageLabel.setText(\&quot;Erreur lors de la suppression de la tâche.\&quot;);\n-                messageLabel.setTextFill(javafx.scene.paint.Color.RED);\n-            }\n-        }\n-    }\n-\n+        if (tacheSelectionnee == null) {\n+            messageLabel.setText(\&quot;Aucune tâche sélectionnée.\&quot;);\n+            messageLabel.setTextFill(javafx.scene.paint.Color.RED);\n+            return;\n+        }\n+        \n+        boolean succes = tacheRepository.supprimerTache(tacheSelectionnee.getIdTache());\n+        \n+        if (succes) {\n+            taches.remove(tacheSelectionnee);\n+            tacheSelectionnee = null;\n+            nomTacheField.clear();\n+            etatComboBox.getSelectionModel().clearSelection();\n+            typeComboBox.getSelectionModel().clearSelection();\n+            modifierTacheBtn.setDisable(true);\n+            supprimerTacheBtn.setDisable(true);\n+            messageLabel.setText(\&quot;Tâche supprimée avec succès !\&quot;);\n+            messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);\n+        } else {\n+            messageLabel.setText(\&quot;Erreur lors de la suppression de la tâche.\&quot;);\n+            messageLabel.setTextFill(javafx.scene.paint.Color.RED);\n+        }\n+    }\n+    \n     /**\n      * Recherche des tâches par mot-clé\n      */\n     @FXML\n-    public void rechercher() {\n-        String motCle = rechercheField.getText().trim();\n+    public void rechercherTache() {\n+        if (listeSelectionnee == null) {\n+            messageLabel.setText(\&quot;Veuillez sélectionner une liste.\&quot;);\n+            messageLabel.setTextFill(javafx.scene.paint.Color.RED);\n+            return;\n+        }\n+        \n+        String motCle = rechercheTacheField.getText().trim();\n         \n         if (motCle.isEmpty()) {\n-            tableauTaches.setItems(listeTaches);\n-            return;\n-        }\n-        \n-        ArrayList&lt;Tache&gt; tachesRecherchees = tacheRepository.rechercherTaches(utilisateur.getIdUtilisateur(), motCle);\n-        tableauTaches.setItems(FXCollections.observableArrayList(tachesRecherchees));\n+            chargerTaches(listeSelectionnee.getIdListe());\n+            return;\n+        }\n+        \n+        ArrayList&lt;Tache&gt; tachesRecherchees = new ArrayList&lt;&gt;();\n+        \n+        // Filtrer les tâches localement\n+        for (Tache tache : taches) {\n+            if (tache.getNom().toLowerCase().contains(motCle.toLowerCase())) {\n+                tachesRecherchees.add(tache);\n+            }\n+        }\n+        \n+        tachesTableView.setItems(FXCollections.observableArrayList(tachesRecherchees));\n         \n         if (tachesRecherchees.isEmpty()) {\n             messageLabel.setText(\&quot;Aucune tâche trouvée pour cette recherche.\&quot;);\n@@ -260,45 +549,20 @@\n             messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);\n         }\n     }\n-\n-    /**\n-     * Valide les champs du formulaire\n-     * @return true si tous les champs sont valides, false sinon\n-     */\n-    private boolean validerChamps() {\n-        if (titreField.getText().trim().isEmpty()) {\n-            messageLabel.setText(\&quot;Le titre est obligatoire.\&quot;);\n-            messageLabel.setTextFill(javafx.scene.paint.Color.RED);\n-            return false;\n-        }\n-        \n-        if (prioriteComboBox.getValue() == null) {\n-            messageLabel.setText(\&quot;Veuillez sélectionner une priorité.\&quot;);\n-            messageLabel.setTextFill(javafx.scene.paint.Color.RED);\n-            return false;\n-        }\n-        \n-        if (statutComboBox.getValue() == null) {\n-            messageLabel.setText(\&quot;Veuillez sélectionner un statut.\&quot;);\n-            messageLabel.setTextFill(javafx.scene.paint.Color.RED);\n-            return false;\n-        }\n-        \n-        return true;\n-    }\n-\n-    /**\n-     * Vide les champs du formulaire\n-     */\n-    private void viderChamps() {\n-        titreField.clear();\n-        descriptionArea.clear();\n-        dateEcheancePicker.setValue(LocalDate.now());\n-        prioriteComboBox.getSelectionModel().clearSelection();\n-        statutComboBox.getSelectionModel().clearSelection();\n-        tableauTaches.getSelectionModel().clearSelection();\n-    }\n-\n+    \n+    /**\n+     * Réinitialise la recherche de tâches\n+     */\n+    @FXML\n+    public void resetRechercheTache() {\n+        if (listeSelectionnee != null) {\n+            rechercheTacheField.clear();\n+            chargerTaches(listeSelectionnee.getIdListe());\n+            messageLabel.setText(\&quot;Recherche réinitialisée.\&quot;);\n+            messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);\n+        }\n+    }\n+    \n     /**\n      * Retourne à la page de gestion des utilisateurs\n      */&quot;,&quot;refToolCallId&quot;:&quot;toolu_01LFHSNxAXxmQbkcvGayCVB4&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Voilà ! J'ai créé une interface complète pour la gestion des utilisateurs et des tâches dans votre application TodoListFX, en utilisant la structure de base de données que vous avez fournie.\n\nVoici un résumé de ce que j'ai fait :\n\n1. **Modèles de données** :\n   - Mis à jour le modèle `Tache.java` pour correspondre à votre schéma de base de données\n   - Créé un modèle `Type.java` pour gérer les types de tâches avec leurs couleurs\n\n2. **Repositories** :\n   - Créé `ListeRepository.java` pour gérer les opérations CRUD sur les listes\n   - Créé `TypeRepository.java` pour gérer les opérations CRUD sur les types\n   - Mis à jour `TacheRepository.java` pour correspondre à votre schéma de base de données\n\n3. **Interface utilisateur** :\n   - Amélioré `GestionUserView.fxml` avec une interface moderne et fonctionnelle\n   - Mis à jour `GestionUserController.java` pour gérer les nouvelles fonctionnalités\n   - Créé une interface `TodoListView.fxml` pour la gestion des listes et des tâches\n   - Mis à jour `TodoListController.java` pour gérer les listes et les tâches\n\n4. **Fonctionnalités** :\n   - Gestion des utilisateurs (affichage, recherche, ajout, modification, suppression)\n   - Gestion des listes (affichage, ajout, modification, suppression)\n   - Gestion des tâches (affichage, ajout, modification, suppression)\n   - Recherche de tâches\n   - Gestion des types de tâches avec codes couleur\n\nPour utiliser cette application :\n\n1. Assurez-vous que votre base de données est configurée selon le schéma fourni\n2. Lancez l'application\n3. Connectez-vous avec un compte utilisateur\n4. Accédez à la gestion des utilisateurs\n5. Sélectionnez un utilisateur et cliquez sur \&quot;Todo List\&quot; pour gérer ses listes et tâches\n\nCette implémentation offre une interface utilisateur intuitive et fonctionnelle pour gérer à la fois les utilisateurs et leurs tâches, tout en respectant l'architecture existante de votre application.&quot;},{&quot;type&quot;:&quot;codePatch&quot;,&quot;diffs&quot;:[{&quot;path&quot;:&quot;src/main/java/repository/TacheRepository.java&quot;,&quot;patch&quot;:&quot;@@ -59,16 +59,35 @@\n l.Tache;\n+%0Aimport model.Type;\n %0A%0Aimport\n@@ -103,36 +103,8 @@\n .*;%0A\n-import java.time.LocalDate;%0A\n impo\n@@ -323,32 +323,8 @@\n %C3%A2che\n- dans la base de donn%C3%A9es\n %0A   \n@@ -516,5893 +516,7710 @@\n he (\n-titre, description, date_echeance, priorite, statut, id_utilisateur) VALUES (?, ?, ?, ?, ?, ?)%22;%0A        try %7B%0A            PreparedStatement stmt = connection.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);%0A            stmt.setString(1, tache.getTitre());%0A            stmt.setString(2, tache.getDescription());%0A            stmt.setDate(3, tache.getDateEcheance() != null ? Date.valueOf(tache.getDateEcheance()) : null);%0A            stmt.setString(4, tache.getPriorite());%0A            stmt.setString(5, tache.getStatut());%0A            stmt.setInt(6, tache.getIdUtilisateur());%0A            %0A            int affectedRows = stmt.executeUpdate();%0A            %0A            if (affectedRows %3E 0) %7B%0A                ResultSet generatedKeys = stmt.getGeneratedKeys();%0A                if (generatedKeys.next()) %7B%0A                    return generatedKeys.getInt(1);%0A                %7D%0A            %7D%0A        %7D catch (SQLException e) %7B%0A            System.out.println(%22Erreur lors de l'ajout de la t%C3%A2che : %22 + e.getMessage());%0A        %7D%0A        return -1;%0A    %7D%0A%0A    /**%0A     * R%C3%A9cup%C3%A8re toutes les t%C3%A2ches d'un utilisateur%0A     * @param idUtilisateur L'ID de l'utilisateur%0A     * @return Une liste de t%C3%A2ches%0A     */%0A    public ArrayList%3CTache%3E getTachesParUtilisateur(int idUtilisateur) %7B%0A        ArrayList%3CTache%3E taches = new ArrayList%3C%3E();%0A        String sql = %22SELECT * FROM tache WHERE id_utilisateur = ? ORDER BY date_echeance ASC%22;%0A        %0A        try %7B%0A            PreparedStatement stmt = connection.prepareStatement(sql);%0A            stmt.setInt(1, idUtilisateur);%0A            ResultSet rs = stmt.executeQuery();%0A            %0A            while (rs.next()) %7B%0A                Date dateSQL = rs.getDate(%22date_echeance%22);%0A                LocalDate dateEcheance = dateSQL != null ? dateSQL.toLocalDate() : null;%0A                %0A                Tache tache = new Tache(%0A                        rs.getInt(%22id_tache%22),%0A                        rs.getString(%22titre%22),%0A                        rs.getString(%22description%22),%0A                        dateEcheance,%0A                        rs.getString(%22priorite%22),%0A                        rs.getString(%22statut%22),%0A                        rs.getInt(%22id_utilisateur%22)%0A                );%0A                taches.add(tache);%0A            %7D%0A        %7D catch (SQLException e) %7B%0A            System.out.println(%22Erreur lors de la r%C3%A9cup%C3%A9ration des t%C3%A2ches : %22 + e.getMessage());%0A        %7D%0A        return taches;%0A    %7D%0A%0A    /**%0A     * Met %C3%A0 jour une t%C3%A2che existante%0A     * @param tache La t%C3%A2che %C3%A0 mettre %C3%A0 jour%0A     * @return true si la mise %C3%A0 jour a r%C3%A9ussi, false sinon%0A     */%0A    public boolean mettreAJourTache(Tache tache) %7B%0A        String sql = %22UPDATE tache SET titre = ?, description = ?, date_echeance = ?, priorite = ?, statut = ? WHERE id_tache = ?%22;%0A        try %7B%0A            PreparedStatement stmt = connection.prepareStatement(sql);%0A            stmt.setString(1, tache.getTitre());%0A            stmt.setString(2, tache.getDescription());%0A            stmt.setDate(3, tache.getDateEcheance() != null ? Date.valueOf(tache.getDateEcheance()) : null);%0A            stmt.setString(4, tache.getPriorite());%0A            stmt.setString(5, tache.getStatut());%0A            stmt.setInt(6, tache.getIdTache());%0A            %0A            int rowsUpdated = stmt.executeUpdate();%0A            return rowsUpdated %3E 0;%0A        %7D catch (SQLException e) %7B%0A            System.out.println(%22Erreur lors de la mise %C3%A0 jour de la t%C3%A2che : %22 + e.getMessage());%0A            return false;%0A        %7D%0A    %7D%0A%0A    /**%0A     * Supprime une t%C3%A2che%0A     * @param idTache L'ID de la t%C3%A2che %C3%A0 supprimer%0A     * @return true si la suppression a r%C3%A9ussi, false sinon%0A     */%0A    public boolean supprimerTache(int idTache) %7B%0A        String sql = %22DELETE FROM tache WHERE id_tache = ?%22;%0A        try %7B%0A            PreparedStatement stmt = connection.prepareStatement(sql);%0A            stmt.setInt(1, idTache);%0A            %0A            int rowsDeleted = stmt.executeUpdate();%0A            return rowsDeleted %3E 0;%0A        %7D catch (SQLException e) %7B%0A            System.out.println(%22Erreur lors de la suppression de la t%C3%A2che : %22 + e.getMessage());%0A            return false;%0A        %7D%0A    %7D%0A%0A    /**%0A     * R%C3%A9cup%C3%A8re une t%C3%A2che par son ID%0A     * @param idTache L'ID de la t%C3%A2che%0A     * @return La t%C3%A2che ou null si non trouv%C3%A9e%0A     */%0A    public Tache getTacheParId(int idTache) %7B%0A        String sql = %22SELECT * FROM tache WHERE id_tache = ?%22;%0A        try %7B%0A            PreparedStatement stmt = connection.prepareStatement(sql);%0A            stmt.setInt(1, idTache);%0A            ResultSet rs = stmt.executeQuery();%0A            %0A            if (rs.next()) %7B%0A                Date dateSQL = rs.getDate(%22date_echeance%22);%0A                LocalDate dateEcheance = dateSQL != null ? dateSQL.toLocalDate() : null;%0A                %0A                return new Tache(%0A                        rs.getInt(%22id_tache%22),%0A                        rs.getString(%22titre%22),%0A                        rs.getString(%22description%22),%0A                        dateEcheance,%0A                        rs.getString(%22priorite%22),%0A                        rs.getString(%22statut%22),%0A                        rs.getInt(%22id_utilisateur%22)%0A                );%0A            %7D%0A        %7D catch (SQLException e) %7B%0A            System.out.println(%22Erreur lors de la r%C3%A9cup%C3%A9ration de la t%C3%A2che : %22 + e.getMessage());%0A        %7D%0A        return null;%0A    %7D%0A    %0A    /**%0A     * Recherche des t%C3%A2ches par mot-cl%C3%A9 pour un utilisateur sp%C3%A9cifique%0A     * @param idUtilisateur L'ID de l'utilisateur%0A     * @param motCle Le mot-cl%C3%A9 %C3%A0 rechercher%0A     * @return Une liste de t%C3%A2ches correspondant %C3%A0 la recherche%0A     */%0A    public ArrayList%3CTache%3E rechercherTaches(int idUtilisateur, String motCle) %7B%0A        ArrayList%3CTache%3E taches = new ArrayList%3C%3E();%0A        String sql = %22SELECT * FROM tache WHERE id_utilisateur = ? AND (titre LIKE ? OR description LIKE ?) ORDER BY date_echeance ASC\n+nom, etat, ref_liste, ref_type) VALUES (?, ?, ?, ?)%22;%0A        try %7B%0A            PreparedStatement stmt = connection.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);%0A            stmt.setString(1, tache.getNom());%0A            stmt.setInt(2, tache.getEtat());%0A            stmt.setInt(3, tache.getRefListe());%0A            stmt.setInt(4, tache.getRefType());%0A            %0A            int affectedRows = stmt.executeUpdate();%0A            %0A            if (affectedRows %3E 0) %7B%0A                ResultSet generatedKeys = stmt.getGeneratedKeys();%0A                if (generatedKeys.next()) %7B%0A                    return generatedKeys.getInt(1);%0A                %7D%0A            %7D%0A        %7D catch (SQLException e) %7B%0A            System.out.println(%22Erreur lors de l'ajout de la t%C3%A2che : %22 + e.getMessage());%0A        %7D%0A        return -1;%0A    %7D%0A%0A    /**%0A     * R%C3%A9cup%C3%A8re toutes les t%C3%A2ches d'une liste%0A     * @param idListe L'ID de la liste%0A     * @return Une liste de t%C3%A2ches%0A     */%0A    public ArrayList%3CTache%3E getTachesParListe(int idListe) %7B%0A        ArrayList%3CTache%3E taches = new ArrayList%3C%3E();%0A        String sql = %22SELECT t.*, l.nom as nom_liste, ty.nom as nom_type, ty.code_couleur %22 +%0A                     %22FROM tache t %22 +%0A                     %22JOIN liste l ON t.ref_liste = l.id_liste %22 +%0A                     %22JOIN type ty ON t.ref_type = ty.id_type %22 +%0A                     %22WHERE t.ref_liste = ?%22;%0A        %0A        try %7B%0A            PreparedStatement stmt = connection.prepareStatement(sql);%0A            stmt.setInt(1, idListe);%0A            ResultSet rs = stmt.executeQuery();%0A            %0A            while (rs.next()) %7B%0A                Tache tache = new Tache(%0A                        rs.getInt(%22id_tache%22),%0A                        rs.getString(%22nom%22),%0A                        rs.getInt(%22etat%22),%0A                        rs.getInt(%22ref_liste%22),%0A                        rs.getInt(%22ref_type%22)%0A                );%0A                tache.setNomListe(rs.getString(%22nom_liste%22));%0A                tache.setNomType(rs.getString(%22nom_type%22));%0A                tache.setCodeCouleur(rs.getString(%22code_couleur%22));%0A                taches.add(tache);%0A            %7D%0A        %7D catch (SQLException e) %7B%0A            System.out.println(%22Erreur lors de la r%C3%A9cup%C3%A9ration des t%C3%A2ches : %22 + e.getMessage());%0A        %7D%0A        return taches;%0A    %7D%0A%0A    /**%0A     * R%C3%A9cup%C3%A8re toutes les t%C3%A2ches d'un utilisateur%0A     * @param idUtilisateur L'ID de l'utilisateur%0A     * @return Une liste de t%C3%A2ches%0A     */%0A    public ArrayList%3CTache%3E getTachesParUtilisateur(int idUtilisateur) %7B%0A        ArrayList%3CTache%3E taches = new ArrayList%3C%3E();%0A        String sql = %22SELECT t.*, l.nom as nom_liste, ty.nom as nom_type, ty.code_couleur %22 +%0A                     %22FROM tache t %22 +%0A                     %22JOIN liste l ON t.ref_liste = l.id_liste %22 +%0A                     %22JOIN type ty ON t.ref_type = ty.id_type %22 +%0A                     %22JOIN utilisateur_liste ul ON l.id_liste = ul.ref_liste %22 +%0A                     %22WHERE ul.ref_utilisateur = ?%22;%0A        %0A        try %7B%0A            PreparedStatement stmt = connection.prepareStatement(sql);%0A            stmt.setInt(1, idUtilisateur);%0A            ResultSet rs = stmt.executeQuery();%0A            %0A            while (rs.next()) %7B%0A                Tache tache = new Tache(%0A                        rs.getInt(%22id_tache%22),%0A                        rs.getString(%22nom%22),%0A                        rs.getInt(%22etat%22),%0A                        rs.getInt(%22ref_liste%22),%0A                        rs.getInt(%22ref_type%22)%0A                );%0A                tache.setNomListe(rs.getString(%22nom_liste%22));%0A                tache.setNomType(rs.getString(%22nom_type%22));%0A                tache.setCodeCouleur(rs.getString(%22code_couleur%22));%0A                taches.add(tache);%0A            %7D%0A        %7D catch (SQLException e) %7B%0A            System.out.println(%22Erreur lors de la r%C3%A9cup%C3%A9ration des t%C3%A2ches : %22 + e.getMessage());%0A        %7D%0A        return taches;%0A    %7D%0A%0A    /**%0A     * R%C3%A9cup%C3%A8re une t%C3%A2che par son ID%0A     * @param idTache L'ID de la t%C3%A2che%0A     * @return La t%C3%A2che ou null si non trouv%C3%A9e%0A     */%0A    public Tache getTacheParId(int idTache) %7B%0A        String sql = %22SELECT t.*, l.nom as nom_liste, ty.nom as nom_type, ty.code_couleur %22 +%0A                     %22FROM tache t %22 +%0A                     %22JOIN liste l ON t.ref_liste = l.id_liste %22 +%0A                     %22JOIN type ty ON t.ref_type = ty.id_type %22 +%0A                     %22WHERE t.id_tache = ?%22;%0A        try %7B%0A            PreparedStatement stmt = connection.prepareStatement(sql);%0A            stmt.setInt(1, idTache);%0A            ResultSet rs = stmt.executeQuery();%0A            %0A            if (rs.next()) %7B%0A                Tache tache = new Tache(%0A                        rs.getInt(%22id_tache%22),%0A                        rs.getString(%22nom%22),%0A                        rs.getInt(%22etat%22),%0A                        rs.getInt(%22ref_liste%22),%0A                        rs.getInt(%22ref_type%22)%0A                );%0A                tache.setNomListe(rs.getString(%22nom_liste%22));%0A                tache.setNomType(rs.getString(%22nom_type%22));%0A                tache.setCodeCouleur(rs.getString(%22code_couleur%22));%0A                return tache;%0A            %7D%0A        %7D catch (SQLException e) %7B%0A            System.out.println(%22Erreur lors de la r%C3%A9cup%C3%A9ration de la t%C3%A2che : %22 + e.getMessage());%0A        %7D%0A        return null;%0A    %7D%0A%0A    /**%0A     * Met %C3%A0 jour une t%C3%A2che existante%0A     * @param tache La t%C3%A2che %C3%A0 mettre %C3%A0 jour%0A     * @return true si la mise %C3%A0 jour a r%C3%A9ussi, false sinon%0A     */%0A    public boolean mettreAJourTache(Tache tache) %7B%0A        String sql = %22UPDATE tache SET nom = ?, etat = ?, ref_liste = ?, ref_type = ? WHERE id_tache = ?%22;%0A        try %7B%0A            PreparedStatement stmt = connection.prepareStatement(sql);%0A            stmt.setString(1, tache.getNom());%0A            stmt.setInt(2, tache.getEtat());%0A            stmt.setInt(3, tache.getRefListe());%0A            stmt.setInt(4, tache.getRefType());%0A            stmt.setInt(5, tache.getIdTache());%0A            %0A            int rowsUpdated = stmt.executeUpdate();%0A            return rowsUpdated %3E 0;%0A        %7D catch (SQLException e) %7B%0A            System.out.println(%22Erreur lors de la mise %C3%A0 jour de la t%C3%A2che : %22 + e.getMessage());%0A            return false;%0A        %7D%0A    %7D%0A%0A    /**%0A     * Supprime une t%C3%A2che%0A     * @param idTache L'ID de la t%C3%A2che %C3%A0 supprimer%0A     * @return true si la suppression a r%C3%A9ussi, false sinon%0A     */%0A    public boolean supprimerTache(int idTache) %7B%0A        String sql = %22DELETE FROM tache WHERE id_tache = ?%22;%0A        try %7B%0A            PreparedStatement stmt = connection.prepareStatement(sql);%0A            stmt.setInt(1, idTache);%0A            %0A            int rowsDeleted = stmt.executeUpdate();%0A            return rowsDeleted %3E 0;%0A        %7D catch (SQLException e) %7B%0A            System.out.println(%22Erreur lors de la suppression de la t%C3%A2che : %22 + e.getMessage());%0A            return false;%0A        %7D%0A    %7D%0A    %0A    /**%0A     * Recherche des t%C3%A2ches par mot-cl%C3%A9 pour un utilisateur sp%C3%A9cifique%0A     * @param idUtilisateur L'ID de l'utilisateur%0A     * @param motCle Le mot-cl%C3%A9 %C3%A0 rechercher%0A     * @return Une liste de t%C3%A2ches correspondant %C3%A0 la recherche%0A     */%0A    public ArrayList%3CTache%3E rechercherTaches(int idUtilisateur, String motCle) %7B%0A        ArrayList%3CTache%3E taches = new ArrayList%3C%3E();%0A        String sql = %22SELECT t.*, l.nom as nom_liste, ty.nom as nom_type, ty.code_couleur %22 +%0A                     %22FROM tache t %22 +%0A                     %22JOIN liste l ON t.ref_liste = l.id_liste %22 +%0A                     %22JOIN type ty ON t.ref_type = ty.id_type %22 +%0A                     %22JOIN utilisateur_liste ul ON l.id_liste = ul.ref_liste %22 +%0A                     %22WHERE ul.ref_utilisateur = ? AND t.nom LIKE ?\n %22;%0A \n@@ -8409,59 +8409,8 @@\n %22);%0A\n-            stmt.setString(3, %22%25%22 + motCle + %22%25%22);%0A\n     \n@@ -8518,550 +8518,468 @@\n     \n-Date dateSQL = rs.getDate(%22date_echeance%22);%0A                LocalDate dateEcheance = dateSQL != null ? dateSQL.toLocalDate() : null;%0A                %0A                Tache tache = new Tache(%0A                        rs.getInt(%22id_tache%22),%0A                        rs.getString(%22titre%22),%0A                        rs.getString(%22description%22),%0A                        dateEcheance,%0A                        rs.getString(%22priorite%22),%0A                        rs.getString(%22statut%22),%0A                        rs.getInt(%22id_utilisateur%22)%0A                \n+Tache tache = new Tache(%0A                        rs.getInt(%22id_tache%22),%0A                        rs.getString(%22nom%22),%0A                        rs.getInt(%22etat%22),%0A                        rs.getInt(%22ref_liste%22),%0A                        rs.getInt(%22ref_type%22)%0A                );%0A                tache.setNomListe(rs.getString(%22nom_liste%22));%0A                tache.setNomType(rs.getString(%22nom_type%22));%0A                tache.setCodeCouleur(rs.getString(%22code_couleur%22)\n );%0A \n&quot;,&quot;isNew&quot;:false,&quot;isApplied&quot;:true},{&quot;path&quot;:&quot;src/main/java/repository/ListeRepository.java&quot;,&quot;patch&quot;:&quot;@@ -0,0 +1,5765 @@\n+package repository;%0A%0Aimport database.Database;%0Aimport model.Liste;%0Aimport model.Utilisateur;%0A%0Aimport java.sql.*;%0Aimport java.util.ArrayList;%0A%0Apublic class ListeRepository %7B%0A    private Connection connection;%0A%0A    public ListeRepository() %7B%0A        connection = Database.getConnexion();%0A    %7D%0A%0A    /**%0A     * Ajoute une nouvelle liste%0A     * @param liste La liste %C3%A0 ajouter%0A     * @return L'ID de la liste cr%C3%A9%C3%A9e, ou -1 en cas d'erreur%0A     */%0A    public int ajouterListe(Liste liste) %7B%0A        String sql = %22INSERT INTO liste (nom) VALUES (?)%22;%0A        try %7B%0A            PreparedStatement stmt = connection.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);%0A            stmt.setString(1, liste.getNom());%0A            %0A            int affectedRows = stmt.executeUpdate();%0A            %0A            if (affectedRows %3E 0) %7B%0A                ResultSet generatedKeys = stmt.getGeneratedKeys();%0A                if (generatedKeys.next()) %7B%0A                    return generatedKeys.getInt(1);%0A                %7D%0A            %7D%0A        %7D catch (SQLException e) %7B%0A            System.out.println(%22Erreur lors de l'ajout de la liste : %22 + e.getMessage());%0A        %7D%0A        return -1;%0A    %7D%0A%0A    /**%0A     * Associe une liste %C3%A0 un utilisateur%0A     * @param idListe L'ID de la liste%0A     * @param idUtilisateur L'ID de l'utilisateur%0A     * @return true si l'association a r%C3%A9ussi, false sinon%0A     */%0A    public boolean associerListeUtilisateur(int idListe, int idUtilisateur) %7B%0A        String sql = %22INSERT INTO utilisateur_liste (ref_utilisateur, ref_liste) VALUES (?, ?)%22;%0A        try %7B%0A            PreparedStatement stmt = connection.prepareStatement(sql);%0A            stmt.setInt(1, idUtilisateur);%0A            stmt.setInt(2, idListe);%0A            %0A            int rowsInserted = stmt.executeUpdate();%0A            return rowsInserted %3E 0;%0A        %7D catch (SQLException e) %7B%0A            System.out.println(%22Erreur lors de l'association liste-utilisateur : %22 + e.getMessage());%0A            return false;%0A        %7D%0A    %7D%0A%0A    /**%0A     * R%C3%A9cup%C3%A8re toutes les listes d'un utilisateur%0A     * @param idUtilisateur L'ID de l'utilisateur%0A     * @return Une liste de listes%0A     */%0A    public ArrayList%3CListe%3E getListesParUtilisateur(int idUtilisateur) %7B%0A        ArrayList%3CListe%3E listes = new ArrayList%3C%3E();%0A        String sql = %22SELECT l.* FROM liste l %22 +%0A                     %22JOIN utilisateur_liste ul ON l.id_liste = ul.ref_liste %22 +%0A                     %22WHERE ul.ref_utilisateur = ?%22;%0A        %0A        try %7B%0A            PreparedStatement stmt = connection.prepareStatement(sql);%0A            stmt.setInt(1, idUtilisateur);%0A            ResultSet rs = stmt.executeQuery();%0A            %0A            while (rs.next()) %7B%0A                Liste liste = new Liste(rs.getInt(%22id_liste%22));%0A                liste.setNom(rs.getString(%22nom%22));%0A                listes.add(liste);%0A            %7D%0A        %7D catch (SQLException e) %7B%0A            System.out.println(%22Erreur lors de la r%C3%A9cup%C3%A9ration des listes : %22 + e.getMessage());%0A        %7D%0A        return listes;%0A    %7D%0A%0A    /**%0A     * R%C3%A9cup%C3%A8re une liste par son ID%0A     * @param idListe L'ID de la liste%0A     * @return La liste ou null si non trouv%C3%A9e%0A     */%0A    public Liste getListeParId(int idListe) %7B%0A        String sql = %22SELECT * FROM liste WHERE id_liste = ?%22;%0A        try %7B%0A            PreparedStatement stmt = connection.prepareStatement(sql);%0A            stmt.setInt(1, idListe);%0A            ResultSet rs = stmt.executeQuery();%0A            %0A            if (rs.next()) %7B%0A                Liste liste = new Liste(rs.getInt(%22id_liste%22));%0A                liste.setNom(rs.getString(%22nom%22));%0A                return liste;%0A            %7D%0A        %7D catch (SQLException e) %7B%0A            System.out.println(%22Erreur lors de la r%C3%A9cup%C3%A9ration de la liste : %22 + e.getMessage());%0A        %7D%0A        return null;%0A    %7D%0A%0A    /**%0A     * Met %C3%A0 jour une liste existante%0A     * @param liste La liste %C3%A0 mettre %C3%A0 jour%0A     * @return true si la mise %C3%A0 jour a r%C3%A9ussi, false sinon%0A     */%0A    public boolean mettreAJourListe(Liste liste) %7B%0A        String sql = %22UPDATE liste SET nom = ? WHERE id_liste = ?%22;%0A        try %7B%0A            PreparedStatement stmt = connection.prepareStatement(sql);%0A            stmt.setString(1, liste.getNom());%0A            stmt.setInt(2, liste.getIdListe());%0A            %0A            int rowsUpdated = stmt.executeUpdate();%0A            return rowsUpdated %3E 0;%0A        %7D catch (SQLException e) %7B%0A            System.out.println(%22Erreur lors de la mise %C3%A0 jour de la liste : %22 + e.getMessage());%0A            return false;%0A        %7D%0A    %7D%0A%0A    /**%0A     * Supprime une liste%0A     * @param idListe L'ID de la liste %C3%A0 supprimer%0A     * @return true si la suppression a r%C3%A9ussi, false sinon%0A     */%0A    public boolean supprimerListe(int idListe) %7B%0A        // D'abord supprimer les associations avec les utilisateurs%0A        String sqlAssoc = %22DELETE FROM utilisateur_liste WHERE ref_liste = ?%22;%0A        try %7B%0A            PreparedStatement stmtAssoc = connection.prepareStatement(sqlAssoc);%0A            stmtAssoc.setInt(1, idListe);%0A            stmtAssoc.executeUpdate();%0A        %7D catch (SQLException e) %7B%0A            System.out.println(%22Erreur lors de la suppression des associations : %22 + e.getMessage());%0A            return false;%0A        %7D%0A        %0A        // Ensuite supprimer la liste%0A        String sql = %22DELETE FROM liste WHERE id_liste = ?%22;%0A        try %7B%0A            PreparedStatement stmt = connection.prepareStatement(sql);%0A            stmt.setInt(1, idListe);%0A            %0A            int rowsDeleted = stmt.executeUpdate();%0A            return rowsDeleted %3E 0;%0A        %7D catch (SQLException e) %7B%0A            System.out.println(%22Erreur lors de la suppression de la liste : %22 + e.getMessage());%0A            return false;%0A        %7D%0A    %7D%0A%7D\n&quot;,&quot;isNew&quot;:true,&quot;isApplied&quot;:true},{&quot;path&quot;:&quot;src/main/java/appli/accueil/GestionUserController.java&quot;,&quot;patch&quot;:&quot;@@ -92,24 +92,148 @@\n ontroller;%0D%0A\n+import appli.user.TodoListController;%0D%0Aimport javafx.collections.FXCollections;%0D%0Aimport javafx.collections.ObservableList;%0D%0A\n import javaf\n@@ -470,16 +470,56 @@\n eView;%0D%0A\n+import javafx.scene.control.TextField;%0D%0A\n import j\n@@ -759,24 +759,53 @@\n a.net.URL;%0D%0A\n+import java.util.ArrayList;%0D%0A\n import java.\n@@ -825,16 +825,53 @@\n Bundle;%0D\n+%0Aimport java.util.stream.Collectors;%0D\n %0A%0D%0Apubli\n@@ -1035,110 +1035,756 @@\n p;%0D%0A\n-%0D%0A    @Override%0D%0A    public void initialize(URL location, ResourceBundle resources) %7B%0D%0A        String \n+    %0D%0A    @FXML%0D%0A    private Button modifierBtn;%0D%0A    %0D%0A    @FXML%0D%0A    private Button todoListBtn;%0D%0A    %0D%0A    @FXML%0D%0A    private Button retourBtn;%0D%0A    %0D%0A    @FXML%0D%0A    private TextField rechercheField;%0D%0A    %0D%0A    @FXML%0D%0A    private Button rechercheBtn;%0D%0A    %0D%0A    @FXML%0D%0A    private Button resetBtn;%0D%0A    %0D%0A    @FXML%0D%0A    private Button ajouterBtn;%0D%0A    %0D%0A    @FXML%0D%0A    private Label messageLabel;%0D%0A    %0D%0A    private ObservableList%3CUtilisateur%3E listeUtilisateurs;%0D%0A    private UtilisateurRepository utilisateurRepository;%0D%0A%0D%0A    @Override%0D%0A    public void initialize(URL location, ResourceBundle resources) %7B%0D%0A        utilisateurRepository = new UtilisateurRepository();%0D%0A        %0D%0A        // Configuration des colonnes du tableau%0D%0A        String\n %5B%5D%5B%5D\n@@ -1815,17 +1815,16 @@\n        %7B\n- \n %22Id Util\n@@ -1832,16 +1832,17 @@\n sateur%22,\n+ \n %22idUtili\n@@ -1848,17 +1848,16 @@\n isateur%22\n- \n %7D,%0D%0A    \n@@ -1873,21 +1873,20 @@\n    %7B\n- \n %22Nom%22,\n+ \n %22nom%22\n- \n %7D,%0D%0A\n@@ -1902,17 +1902,16 @@\n        %7B\n- \n %22Pr%C3%A9nom%22\n@@ -1915,16 +1915,17 @@\n om%22,\n+ \n %22prenom%22\n  %7D,%0D\n@@ -1920,17 +1920,16 @@\n %22prenom%22\n- \n %7D,%0D%0A    \n@@ -1945,17 +1945,16 @@\n    %7B\n- \n %22Email%22,\n %22ema\n@@ -1953,16 +1953,16 @@\n il%22,\n+ \n %22email%22\n- \n %7D,%0D%0A\n@@ -1982,23 +1982,22 @@\n    %7B\n- \n %22R%C3%B4le%22,\n+ \n %22role%22\n- \n %7D,%0D%0A\n@@ -2023,17 +2023,16 @@\n    for (\n- \n int i = \n@@ -2032,17 +2032,16 @@\n nt i = 0\n- \n ; i %3C co\n@@ -2057,17 +2057,15 @@\n ngth\n- \n ; i\n- \n ++\n- \n )\n+ \n %7B%0D%0A \n@@ -2095,24 +2095,25 @@\n Utilisateur,\n+ \n String%3E maCo\n@@ -2249,16 +2249,17 @@\n isateur,\n+ \n String%3E(\n@@ -2293,187 +2293,1163 @@\n     \n-tableauUser.getColumns().add(maCol);%0D%0A        %7D%0D%0A        UtilisateurRepository us = new UtilisateurRepository();%0D%0A        tableauUser.getItems().addAll(us.getAllUtilisateurs());%0D%0A\n+maCol.setPrefWidth(150); // D%C3%A9finir une largeur pour chaque colonne%0D%0A            tableauUser.getColumns().add(maCol);%0D%0A        %7D%0D%0A        %0D%0A        // Chargement des utilisateurs%0D%0A        chargerUtilisateurs();%0D%0A        %0D%0A        // Effacer le message apr%C3%A8s 3 secondes%0D%0A        messageLabel.textProperty().addListener((observable, oldValue, newValue) -%3E %7B%0D%0A            if (newValue != null &amp;&amp; !newValue.isEmpty()) %7B%0D%0A                new Thread(() -%3E %7B%0D%0A                    try %7B%0D%0A                        Thread.sleep(3000);%0D%0A                        javafx.application.Platform.runLater(() -%3E messageLabel.setText(%22%22));%0D%0A                    %7D catch (InterruptedException e) %7B%0D%0A                        e.printStackTrace();%0D%0A                    %7D%0D%0A                %7D).start();%0D%0A            %7D%0D%0A        %7D);%0D%0A    %7D%0D%0A    %0D%0A    /**%0D%0A     * Charge tous les utilisateurs depuis la base de donn%C3%A9es%0D%0A     */%0D%0A    private void chargerUtilisateurs() %7B%0D%0A        ArrayList%3CUtilisateur%3E utilisateurs = utilisateurRepository.getAllUtilisateurs();%0D%0A        listeUtilisateurs = FXCollections.observableArrayList(utilisateurs);%0D%0A        tableauUser.setItems(listeUtilisateurs);\n %0D%0A  \n@@ -3449,24 +3449,30 @@\n s);%0D%0A    %7D%0D%0A\n+    %0D%0A\n     @FXML%0D%0A \n@@ -3716,13 +3716,103 @@\n     \n-%7D\n+    modifierBtn.setDisable(false);%0D%0A            todoListBtn.setDisable(false);%0D%0A        %7D \n else\n+ \n %7B%0D%0A \n@@ -3862,844 +3862,4990 @@\n     \n-%7D%0D%0A        if (mouseEvent.getClickCount() == 2) %7B%0D%0A            if (selection != null) %7B%0D%0A                StartApplication.changeScene(%22user/modificationUser%22);%0D%0A                ModificationUserController controller = (ModificationUserController)%0D%0A                        StartApplication. getControllerFromStage();%0D%0A                controller.initData(selection);%0D%0A            %7D%0D%0A        %7D%0D%0A    %7D%0D%0A%0D%0A    @FXML%0D%0A    public void supprimer(ActionEvent actionEvent) %7B%0D%0A        Utilisateur utilisateurSelectionne = tableauUser.getSelectionModel().getSelectedItem();%0D%0A%0D%0A        if (utilisateurSelectionne != null) %7B%0D%0A            UtilisateurRepository rep = new UtilisateurRepository();%0D%0A            rep.supprimerUtilisateurParEmail(utilisateurSelectionne.getEmail());%0D%0A%0D%0A        %7D%0D%0A        tableauUser.getItems().remove(utilisateurSelectionne\n+    modifierBtn.setDisable(true);%0D%0A            todoListBtn.setDisable(true);%0D%0A        %7D%0D%0A        %0D%0A        // Double-clic pour modifier un utilisateur%0D%0A        if (mouseEvent.getClickCount() == 2) %7B%0D%0A            if (selection != null) %7B%0D%0A                modifierUtilisateur();%0D%0A            %7D%0D%0A        %7D%0D%0A    %7D%0D%0A%0D%0A    @FXML%0D%0A    public void supprimer(ActionEvent actionEvent) %7B%0D%0A        Utilisateur utilisateurSelectionne = tableauUser.getSelectionModel().getSelectedItem();%0D%0A%0D%0A        if (utilisateurSelectionne != null) %7B%0D%0A            boolean supprime = utilisateurRepository.supprimerUtilisateurParEmail(utilisateurSelectionne.getEmail());%0D%0A            %0D%0A            if (supprime) %7B%0D%0A                tableauUser.getItems().remove(utilisateurSelectionne);%0D%0A                messageLabel.setText(%22Utilisateur supprim%C3%A9 avec succ%C3%A8s !%22);%0D%0A                messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);%0D%0A            %7D else %7B%0D%0A                messageLabel.setText(%22Erreur lors de la suppression de l'utilisateur.%22);%0D%0A                messageLabel.setTextFill(javafx.scene.paint.Color.RED);%0D%0A            %7D%0D%0A            %0D%0A            // R%C3%A9initialiser les boutons%0D%0A            userSupp.setDisable(true);%0D%0A            modifierBtn.setDisable(true);%0D%0A            todoListBtn.setDisable(true);%0D%0A        %7D%0D%0A    %7D%0D%0A    %0D%0A    @FXML%0D%0A    public void modifierUtilisateur() %7B%0D%0A        Utilisateur utilisateurSelectionne = tableauUser.getSelectionModel().getSelectedItem();%0D%0A        %0D%0A        if (utilisateurSelectionne != null) %7B%0D%0A            try %7B%0D%0A                StartApplication.changeScene(%22user/modificationUser%22);%0D%0A                ModificationUserController controller = (ModificationUserController)%0D%0A                        StartApplication.getControllerFromStage();%0D%0A                controller.initData(utilisateurSelectionne);%0D%0A            %7D catch (IOException e) %7B%0D%0A                messageLabel.setText(%22Erreur lors de l'ouverture de la page de modification.%22);%0D%0A                messageLabel.setTextFill(javafx.scene.paint.Color.RED);%0D%0A                e.printStackTrace();%0D%0A            %7D%0D%0A        %7D%0D%0A    %7D%0D%0A    %0D%0A    @FXML%0D%0A    public void ajouterUtilisateur() %7B%0D%0A        try %7B%0D%0A            StartApplication.changeScene(%22accueil/Inscription%22);%0D%0A        %7D catch (IOException e) %7B%0D%0A            messageLabel.setText(%22Erreur lors de l'ouverture de la page d'inscription.%22);%0D%0A            messageLabel.setTextFill(javafx.scene.paint.Color.RED);%0D%0A            e.printStackTrace();%0D%0A        %7D%0D%0A    %7D%0D%0A    %0D%0A    @FXML%0D%0A    public void gererTodoList() %7B%0D%0A        Utilisateur utilisateurSelectionne = tableauUser.getSelectionModel().getSelectedItem();%0D%0A        %0D%0A        if (utilisateurSelectionne != null) %7B%0D%0A            try %7B%0D%0A                StartApplication.changeScene(%22user/TodoList%22);%0D%0A                TodoListController controller = (TodoListController)%0D%0A                        StartApplication.getControllerFromStage();%0D%0A                controller.initData(utilisateurSelectionne);%0D%0A                messageLabel.setText(%22Chargement des t%C3%A2ches de l'utilisateur...%22);%0D%0A                messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);%0D%0A            %7D catch (IOException e) %7B%0D%0A                messageLabel.setText(%22Erreur lors de l'ouverture de la page des t%C3%A2ches.%22);%0D%0A                messageLabel.setTextFill(javafx.scene.paint.Color.RED);%0D%0A                e.printStackTrace();%0D%0A            %7D%0D%0A        %7D%0D%0A    %7D%0D%0A    %0D%0A    @FXML%0D%0A    public void rechercher() %7B%0D%0A        String recherche = rechercheField.getText().toLowerCase().trim();%0D%0A        %0D%0A        if (recherche.isEmpty()) %7B%0D%0A            tableauUser.setItems(listeUtilisateurs);%0D%0A            return;%0D%0A        %7D%0D%0A        %0D%0A        // Filtrer les utilisateurs selon le texte de recherche%0D%0A        ObservableList%3CUtilisateur%3E utilisateursFiltres = listeUtilisateurs.stream()%0D%0A                .filter(u -%3E u.getNom().toLowerCase().contains(recherche) %7C%7C%0D%0A                        u.getPrenom().toLowerCase().contains(recherche) %7C%7C%0D%0A                        u.getEmail().toLowerCase().contains(recherche) %7C%7C%0D%0A                        (u.getRole() != null &amp;&amp; u.getRole().toLowerCase().contains(recherche)))%0D%0A                .collect(Collectors.toCollection(FXCollections::observableArrayList));%0D%0A        %0D%0A        tableauUser.setItems(utilisateursFiltres);%0D%0A        %0D%0A        if (utilisateursFiltres.isEmpty()) %7B%0D%0A            messageLabel.setText(%22Aucun utilisateur trouv%C3%A9 pour cette recherche.%22);%0D%0A            messageLabel.setTextFill(javafx.scene.paint.Color.ORANGE);%0D%0A        %7D else %7B%0D%0A            messageLabel.setText(utilisateursFiltres.size() + %22 utilisateur(s) trouv%C3%A9(s).%22);%0D%0A            messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);%0D%0A        %7D%0D%0A    %7D%0D%0A    %0D%0A    @FXML%0D%0A    public void resetRecherche() %7B%0D%0A        rechercheField.clear();%0D%0A        tableauUser.setItems(listeUtilisateurs);%0D%0A        messageLabel.setText(%22Recherche r%C3%A9initialis%C3%A9e.%22);%0D%0A        messageLabel.setTextFill(javafx.scene.paint.Color.GREEN\n );%0D%0A\n&quot;,&quot;isNew&quot;:false,&quot;isApplied&quot;:true},{&quot;path&quot;:&quot;src/main/resources/appli/accueil/GestionUserView.fxml&quot;,&quot;patch&quot;:&quot;@@ -33,16 +33,50 @@\n F-8%22?%3E%0A%0A\n+%3C?import javafx.geometry.Insets?%3E%0A\n %3C?import\n@@ -140,59 +140,287 @@\n rol.\n-TableView?%3E%0A%3C?import javafx.scene.layout.AnchorPane\n+Label?%3E%0A%3C?import javafx.scene.control.TableView?%3E%0A%3C?import javafx.scene.control.TextField?%3E%0A%3C?import javafx.scene.layout.AnchorPane?%3E%0A%3C?import javafx.scene.layout.BorderPane?%3E%0A%3C?import javafx.scene.layout.HBox?%3E%0A%3C?import javafx.scene.layout.VBox?%3E%0A%3C?import javafx.scene.text.Font\n ?%3E%0A%0A\n@@ -443,17 +443,17 @@\n Height=%22\n-4\n+6\n 00.0%22 pr\n@@ -461,17 +461,17 @@\n fWidth=%22\n-6\n+8\n 00.0%22 xm\n@@ -622,66 +622,2634 @@\n    %3C\n-TableView fx:id=%22tableauUser%22 layoutX=%2242.0%22 layoutY=%2239.0\n+BorderPane prefHeight=%22600.0%22 prefWidth=%22800.0%22%3E%0A         %3Ctop%3E%0A            %3CVBox spacing=%2210.0%22 BorderPane.alignment=%22CENTER%22%3E%0A               %3Cchildren%3E%0A                  %3CHBox alignment=%22CENTER_LEFT%22 spacing=%2210.0%22%3E%0A                     %3Cchildren%3E%0A                        %3CButton fx:id=%22retourBtn%22 mnemonicParsing=%22false%22 onAction=%22#retour%22 style=%22-fx-background-color: #3498db;%22 text=%22Retour%22 textFill=%22WHITE%22%3E%0A                           %3Cfont%3E%0A                              %3CFont name=%22System Bold%22 size=%2212.0%22 /%3E%0A                           %3C/font%3E%0A                        %3C/Button%3E%0A                        %3CLabel alignment=%22CENTER%22 contentDisplay=%22CENTER%22 text=%22Gestion des Utilisateurs%22 textAlignment=%22CENTER%22 HBox.hgrow=%22ALWAYS%22%3E%0A                           %3Cfont%3E%0A                              %3CFont name=%22System Bold%22 size=%2224.0%22 /%3E%0A                           %3C/font%3E%0A                           %3CHBox.margin%3E%0A                              %3CInsets left=%22220.0%22 /%3E%0A                           %3C/HBox.margin%3E%0A                        %3C/Label%3E%0A                     %3C/children%3E%0A                     %3Cpadding%3E%0A                        %3CInsets bottom=%225.0%22 left=%2210.0%22 right=%2210.0%22 top=%2210.0%22 /%3E%0A                     %3C/padding%3E%0A                  %3C/HBox%3E%0A                  %3CHBox alignment=%22CENTER%22 spacing=%2210.0%22%3E%0A                     %3Cchildren%3E%0A                        %3CTextField fx:id=%22rechercheField%22 prefHeight=%2230.0%22 prefWidth=%22300.0%22 promptText=%22Rechercher un utilisateur...%22%3E%0A                           %3Cfont%3E%0A                              %3CFont size=%2214.0%22 /%3E%0A                           %3C/font%3E%0A                        %3C/TextField%3E%0A                        %3CButton fx:id=%22rechercheBtn%22 mnemonicParsing=%22false%22 onAction=%22#rechercher%22 style=%22-fx-background-color: #3498db;%22 text=%22Rechercher%22 textFill=%22WHITE%22%3E%0A                           %3Cfont%3E%0A                              %3CFont size=%2214.0%22 /%3E%0A                           %3C/font%3E%0A                        %3C/Button%3E%0A                        %3CButton fx:id=%22resetBtn%22 mnemonicParsing=%22false%22 onAction=%22#resetRecherche%22 style=%22-fx-background-color: #7f8c8d;%22 text=%22R%C3%A9initialiser%22 textFill=%22WHITE%22%3E%0A                           %3Cfont%3E%0A                              %3CFont size=%2214.0%22 /%3E%0A                           %3C/font%3E%0A                        %3C/Button%3E%0A                     %3C/children%3E%0A                     %3Cpadding%3E%0A                        %3CInsets bottom=%2210.0%22 left=%2210.0%22 right=%2210.0%22 top=%225.0%22 /%3E%0A                     %3C/padding%3E%0A                  %3C/HBox%3E%0A               %3C/children%3E%0A            %3C/VBox%3E%0A         %3C/top%3E%0A         %3Ccenter%3E%0A            %3CTableView fx:id=%22tableauUser\n %22 on\n@@ -3294,11 +3294,11 @@\n ht=%22\n-323\n+400\n .0%22 \n@@ -3312,263 +3312,2522 @@\n th=%22\n-517.0%22 /%3E%0A      %3CButton fx:id=%22userSupp%22 disable=%22true%22 layoutX=%22265.0%22 layoutY=%22366.0%22 mnemonicParsing=%22false%22 onAction=%22#supprimer%22 text=%22supprimer%22 /%3E%0A      %3CButton fx:id=%22retour%22 layoutY=%222.0%22 mnemonicParsing=%22false%22 onAction=%22#retour%22 text=%22retour%22 /\n+780.0%22 BorderPane.alignment=%22CENTER%22%3E%0A               %3CBorderPane.margin%3E%0A                  %3CInsets bottom=%2210.0%22 left=%2210.0%22 right=%2210.0%22 top=%2210.0%22 /%3E%0A               %3C/BorderPane.margin%3E%0A            %3C/TableView%3E%0A         %3C/center%3E%0A         %3Cbottom%3E%0A            %3CVBox alignment=%22CENTER%22 spacing=%2210.0%22 BorderPane.alignment=%22CENTER%22%3E%0A               %3Cchildren%3E%0A                  %3CHBox alignment=%22CENTER%22 spacing=%2220.0%22%3E%0A                     %3Cchildren%3E%0A                        %3CButton fx:id=%22ajouterBtn%22 mnemonicParsing=%22false%22 onAction=%22#ajouterUtilisateur%22 style=%22-fx-background-color: #2ecc71;%22 text=%22Ajouter%22 textFill=%22WHITE%22%3E%0A                           %3Cfont%3E%0A                              %3CFont name=%22System Bold%22 size=%2214.0%22 /%3E%0A                           %3C/font%3E%0A                        %3C/Button%3E%0A                        %3CButton fx:id=%22modifierBtn%22 disable=%22true%22 mnemonicParsing=%22false%22 onAction=%22#modifierUtilisateur%22 style=%22-fx-background-color: #f39c12;%22 text=%22Modifier%22 textFill=%22WHITE%22%3E%0A                           %3Cfont%3E%0A                              %3CFont name=%22System Bold%22 size=%2214.0%22 /%3E%0A                           %3C/font%3E%0A                        %3C/Button%3E%0A                        %3CButton fx:id=%22todoListBtn%22 disable=%22true%22 mnemonicParsing=%22false%22 onAction=%22#gererTodoList%22 style=%22-fx-background-color: #9b59b6;%22 text=%22Todo List%22 textFill=%22WHITE%22%3E%0A                           %3Cfont%3E%0A                              %3CFont name=%22System Bold%22 size=%2214.0%22 /%3E%0A                           %3C/font%3E%0A                        %3C/Button%3E%0A                        %3CButton fx:id=%22userSupp%22 disable=%22true%22 mnemonicParsing=%22false%22 onAction=%22#supprimer%22 style=%22-fx-background-color: #e74c3c;%22 text=%22Supprimer%22 textFill=%22WHITE%22%3E%0A                           %3Cfont%3E%0A                              %3CFont name=%22System Bold%22 size=%2214.0%22 /%3E%0A                           %3C/font%3E%0A                        %3C/Button%3E%0A                     %3C/children%3E%0A                     %3Cpadding%3E%0A                        %3CInsets bottom=%225.0%22 left=%2210.0%22 right=%2210.0%22 top=%225.0%22 /%3E%0A                     %3C/padding%3E%0A                  %3C/HBox%3E%0A                  %3CLabel fx:id=%22messageLabel%22 alignment=%22CENTER%22 textFill=%22#2ecc71%22%3E%0A                     %3Cfont%3E%0A                        %3CFont size=%2214.0%22 /%3E%0A                     %3C/font%3E%0A                     %3CVBox.margin%3E%0A                        %3CInsets bottom=%2210.0%22 /%3E%0A                     %3C/VBox.margin%3E%0A                  %3C/Label%3E%0A               %3C/children%3E%0A            %3C/VBox%3E%0A         %3C/bottom%3E%0A      %3C/BorderPane\n %3E%0A  \n&quot;,&quot;isNew&quot;:false,&quot;isApplied&quot;:true},{&quot;path&quot;:&quot;src/main/java/appli/user/TodoListController.java&quot;,&quot;patch&quot;:&quot;@@ -132,41 +132,8 @@\n st;%0A\n-import javafx.event.ActionEvent;%0A\n impo\n@@ -311,16 +311,36 @@\n eEvent;%0A\n+import model.Liste;%0A\n import m\n@@ -351,16 +351,35 @@\n .Tache;%0A\n+import model.Type;%0A\n import m\n@@ -414,20 +414,89 @@\n ository.\n-Tach\n+ListeRepository;%0Aimport repository.TacheRepository;%0Aimport repository.Typ\n eReposit\n@@ -554,36 +554,8 @@\n RL;%0A\n-import java.time.LocalDate;%0A\n impo\n@@ -698,38 +698,85 @@\n ate \n-T\n+L\n ab\n-leView%3CTache%3E tableauTaches\n+el utilisateurLabel;%0A%0A    @FXML%0A    private ListView%3CListe%3E listesListView\n ;%0A%0A \n@@ -806,20 +806,23 @@\n xtField \n-titr\n+nomList\n eField;%0A\n@@ -848,86 +848,442 @@\n ate \n-TextArea descriptionArea;%0A%0A    @FXML%0A    private DatePicker dateEcheancePicker\n+Button ajouterListeBtn;%0A%0A    @FXML%0A    private Button modifierListeBtn;%0A%0A    @FXML%0A    private Button supprimerListeBtn;%0A%0A    @FXML%0A    private Label listeSelectionneeLabel;%0A%0A    @FXML%0A    private TextField rechercheTacheField;%0A%0A    @FXML%0A    private Button rechercheTacheBtn;%0A%0A    @FXML%0A    private Button resetRechercheTacheBtn;%0A%0A    @FXML%0A    private TableView%3CTache%3E tachesTableView;%0A%0A    @FXML%0A    private TextField nomTacheField\n ;%0A%0A \n@@ -1316,23 +1316,17 @@\n Box%3C\n-String%3E priorit\n+Type%3E typ\n eCom\n@@ -1372,22 +1372,20 @@\n String%3E \n-s\n+e\n tat\n-ut\n ComboBox\n@@ -1423,16 +1423,21 @@\n  ajouter\n+Tache\n Btn;%0A%0A  \n@@ -1471,16 +1471,21 @@\n modifier\n+Tache\n Btn;%0A%0A  \n@@ -1520,16 +1520,21 @@\n upprimer\n+Tache\n Btn;%0A%0A  \n@@ -1557,45 +1557,29 @@\n ate \n-TextField rechercheFi\n+Label messageLab\n el\n-d\n ;%0A%0A\n-    @FXML%0A\n     \n@@ -1590,78 +1590,111 @@\n ate \n-Label messageLabel\n+Utilisateur utilisateur\n ;%0A\n-%0A\n     \n-@FXML%0A    private Label nomUtilisateurLabel;%0A\n+private Liste listeSelectionnee;%0A    private Tache tacheSelectionnee;%0A    \n %0A   \n@@ -1702,39 +1702,47 @@\n private \n-Util\n+L\n is\n-a\n te\n-ur uti\n+Repository \n lis\n-a\n te\n-ur\n+Repository\n ;%0A    pr\n@@ -1772,32 +1772,80 @@\n acheRepository;%0A\n+    private TypeRepository typeRepository;%0A    %0A\n     private Obse\n@@ -1859,20 +1859,20 @@\n ist%3C\n-Tach\n+List\n e%3E liste\n Tach\n@@ -1867,21 +1867,16 @@\n e%3E liste\n-Tache\n s;%0A    p\n@@ -1882,39 +1882,84 @@\n private \n+ObservableList%3C\n Tache\n+%3E\n  tache\n-Selectionnee\n+s;%0A    private ObservableList%3CType%3E types\n ;%0A%0A    @\n@@ -2044,20 +2044,20 @@\n         \n-tach\n+list\n eReposit\n@@ -2066,20 +2066,20 @@\n y = new \n-Tach\n+List\n eReposit\n@@ -2085,25 +2085,24 @@\n tory();%0A\n-%0A\n         \n // Confi\n@@ -2097,234 +2097,164 @@\n     \n-// Configuration des colonnes du tableau%0A        TableColumn%3CTache, String%3E colTitre = new TableColumn%3C%3E(%22Titre%22);%0A        colTitre.setCellValueFac\n+tacheRepository = new TacheRepository();%0A        typeReposi\n tory\n-(\n+ = \n new \n-PropertyValueFactory%3C%3E(%22titre%22));%0A        colTitre.setPrefWidth(150);%0A\n+TypeRepository();%0A        %0A        // Configuration des colonnes du tableau des t%C3%A2ches\n %0A   \n@@ -2288,24 +2288,19 @@\n ing%3E col\n-Priorite\n+Nom\n  = new T\n@@ -2317,16 +2317,11 @@\n %3C%3E(%22\n-Priorit%C3%A9\n+Nom\n %22);%0A\n@@ -2327,32 +2327,27 @@\n %0A        col\n-Priorite\n+Nom\n .setCellValu\n@@ -2383,24 +2383,19 @@\n tory%3C%3E(%22\n-priorite\n+nom\n %22));%0A   \n@@ -2402,24 +2402,19 @@\n      col\n-Priorite\n+Nom\n .setPref\n@@ -2411,37 +2411,46 @@\n om.setPrefWidth(\n-8\n+20\n 0);%0A\n+        \n %0A        TableCo\n@@ -2465,26 +2465,23 @@\n he, \n-LocalDate\n+String\n %3E col\n-D\n+Et\n at\n-e\n  = n\n@@ -2502,19 +2502,12 @@\n %3C%3E(%22\n-Date limite\n+%C3%89tat\n %22);%0A\n@@ -2513,28 +2513,28 @@\n %0A        col\n-D\n+Et\n at\n-e\n .setCellValu\n@@ -2570,28 +2570,26 @@\n tory%3C%3E(%22\n-dateEcheance\n+etatString\n %22));%0A   \n@@ -2596,20 +2596,20 @@\n      col\n-D\n+Et\n at\n-e\n .setPref\n@@ -2616,24 +2616,32 @@\n Width(100);%0A\n+        \n %0A        Tab\n@@ -2667,22 +2667,20 @@\n ing%3E col\n-Statut\n+Type\n  = new T\n@@ -2693,22 +2693,20 @@\n lumn%3C%3E(%22\n-Statut\n+Type\n %22);%0A    \n@@ -2708,30 +2708,28 @@\n %0A        col\n-Statut\n+Type\n .setCellValu\n@@ -2765,22 +2765,23 @@\n tory%3C%3E(%22\n-statut\n+nomType\n %22));%0A   \n@@ -2788,22 +2788,20 @@\n      col\n-Statut\n+Type\n .setPref\n@@ -2810,13 +2810,22 @@\n dth(\n-8\n+10\n 0);%0A\n+        \n %0A   \n@@ -2827,35 +2827,37 @@\n  %0A        ta\n-bleauTaches\n+chesTableView\n .getColumns(\n@@ -2872,49 +2872,40 @@\n (col\n-Titre, colPriorite, colD\n+Nom, colEt\n at\n-e\n , col\n-Statut);%0A\n+Type);%0A        \n %0A   \n@@ -2934,115 +2934,23 @@\n des \n-ComboBox%0A        prioriteComboBox.setItems(FXCollections.observableArrayList(%22Haute%22, %22Moyenne%22, %22Basse%22));\n+%C3%A9tats possibles\n %0A   \n@@ -2946,38 +2946,36 @@\n ssibles%0A        \n-s\n+e\n tat\n-ut\n ComboBox.setItem\n@@ -3043,24 +3043,32 @@\n ermin%C3%A9e%22));%0A\n+        \n %0A        // \n@@ -3071,102 +3071,61 @@\n  // \n-Initialisation de la date %C3%A0 aujourd'hui%0A        dateEcheancePicker.setValue(LocalDate.now());%0A\n+Chargement des types%0A        chargerTypes();%0A        \n %0A   \n@@ -3686,32 +3686,36 @@\n       %7D);%0A    %7D%0A\n+    \n %0A    /**%0A     * \n@@ -3768,20 +3768,20 @@\n rge ses \n-t%C3%A2ch\n+list\n es%0A     \n@@ -3837,24 +3837,34 @@\n fficher les \n+listes et \n t%C3%A2ches%0A     \n@@ -3970,12 +3970,9 @@\n     \n-nomU\n+u\n tili\n@@ -4057,28 +4057,28 @@\n      charger\n-Tach\n+List\n es();%0A    %7D%0A\n@@ -4069,32 +4069,36 @@\n Listes();%0A    %7D%0A\n+    \n %0A    /**%0A     * \n@@ -4108,20 +4108,20 @@\n rge les \n-t%C3%A2ch\n+list\n es de l'\n@@ -4135,34 +4135,8 @@\n teur\n- depuis la base de donn%C3%A9es\n %0A   \n@@ -4168,96 +4168,68 @@\n rger\n-Taches() %7B%0A        if (util\n+L\n is\n-a\n te\n-ur != null) %7B%0A            ArrayList%3CTache%3E taches = tach\n+s() %7B%0A        ArrayList%3CListe%3E listesUtilisateur = list\n eRep\n@@ -4239,20 +4239,20 @@\n tory.get\n-Tach\n+List\n esParUti\n@@ -4301,30 +4301,21 @@\n         \n-    \n liste\n-Tache\n s = FXCo\n@@ -4344,20 +4344,72 @@\n rayList(\n-tach\n+listesUtilisateur);%0A        listesListView.setItems(list\n es);%0A   \n@@ -4417,46 +4417,157 @@\n     \n+%0A\n     \n-tableauTaches.setItems(listeTaches\n+    if (listes.isEmpty()) %7B%0A            listeSelectionneeLabel.setText(%22Aucune liste disponible%22);%0A            tachesTableView.getItems().clear(\n );%0A \n@@ -4573,32 +4573,36 @@\n         %7D%0A    %7D%0A\n+    \n %0A    /**%0A     * \n@@ -4605,2161 +4605,2662 @@\n   * \n-G%C3%A8re le clic sur une t%C3%A2che dans le tableau%0A     */%0A    @FXML%0A    public void cliqueTache(MouseEvent event) %7B%0A        tacheSelectionnee = tableauTaches.getSelectionModel().getSelectedItem();%0A        %0A        if (tacheSelectionnee != null) %7B%0A            // Activer les boutons de modification et suppression%0A            modifierBtn.setDisable(false);%0A            supprimerBtn.setDisable(false);%0A            %0A            // Remplir les champs avec les donn%C3%A9es de la t%C3%A2che s%C3%A9lectionn%C3%A9e%0A            titreField.setText(tacheSelectionnee.getTitre());%0A            descriptionArea.setText(tacheSelectionnee.getDescription());%0A            dateEcheancePicker.setValue(tacheSelectionnee.getDateEcheance());%0A            prioriteComboBox.setValue(tacheSelectionnee.getPriorite());%0A            statutComboBox.setValue(tacheSelectionnee.getStatut());%0A        %7D else %7B%0A            // D%C3%A9sactiver les boutons si aucune t%C3%A2che n'est s%C3%A9lectionn%C3%A9e%0A            modifierBtn.setDisable(true);%0A            supprimerBtn.setDisable(true);%0A            %0A            // Vider les champs%0A            viderChamps();%0A        %7D%0A    %7D%0A%0A    /**%0A     * Ajoute une nouvelle t%C3%A2che%0A     */%0A    @FXML%0A    public void ajouterTache() %7B%0A        if (validerChamps()) %7B%0A            Tache nouvelleTache = new Tache(%0A                    titreField.getText(),%0A                    descriptionArea.getText(),%0A                    dateEcheancePicker.getValue(),%0A                    prioriteComboBox.getValue(),%0A                    statutComboBox.getValue(),%0A                    utilisateur.getIdUtilisateur()%0A            );%0A            %0A            int idTache = tacheRepository.ajouterTache(nouvelleTache);%0A            %0A            if (idTache %3E 0) %7B%0A                nouvelleTache.setIdTache(idTache);%0A                listeTaches.add(nouvelleTache);%0A                messageLabel.setText(%22T%C3%A2che ajout%C3%A9e avec succ%C3%A8s !%22);%0A                messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);%0A                viderChamps();%0A            %7D else %7B%0A                messageLabel.setText(%22Erreur lors de l'ajout de la t%C3%A2che.%22);%0A                messageLabel.setTextFill(javafx.scene.paint.Color.RED);%0A            %7D\n+Charge les types de t%C3%A2ches%0A     */%0A    private void chargerTypes() %7B%0A        ArrayList%3CType%3E typesDisponibles = typeRepository.getAllTypes();%0A        types = FXCollections.observableArrayList(typesDisponibles);%0A        typeComboBox.setItems(types);%0A        %0A        if (types.isEmpty()) %7B%0A            // Cr%C3%A9er des types par d%C3%A9faut si aucun n'existe%0A            Type typeUrgent = new Type(%22Urgent%22, %22#e74c3c%22);%0A            Type typeImportant = new Type(%22Important%22, %22#f39c12%22);%0A            Type typeNormal = new Type(%22Normal%22, %22#3498db%22);%0A            %0A            int idUrgent = typeRepository.ajouterType(typeUrgent);%0A            int idImportant = typeRepository.ajouterType(typeImportant);%0A            int idNormal = typeRepository.ajouterType(typeNormal);%0A            %0A            if (idUrgent %3E 0) %7B%0A                typeUrgent.setIdType(idUrgent);%0A                types.add(typeUrgent);%0A            %7D%0A            %0A            if (idImportant %3E 0) %7B%0A                typeImportant.setIdType(idImportant);%0A                types.add(typeImportant);%0A            %7D%0A            %0A            if (idNormal %3E 0) %7B%0A                typeNormal.setIdType(idNormal);%0A                types.add(typeNormal);%0A            %7D%0A        %7D%0A    %7D%0A    %0A    /**%0A     * Charge les t%C3%A2ches d'une liste%0A     * @param idListe L'ID de la liste%0A     */%0A    private void chargerTaches(int idListe) %7B%0A        ArrayList%3CTache%3E tachesListe = tacheRepository.getTachesParListe(idListe);%0A        taches = FXCollections.observableArrayList(tachesListe);%0A        tachesTableView.setItems(taches);%0A    %7D%0A    %0A    /**%0A     * G%C3%A8re la s%C3%A9lection d'une liste%0A     */%0A    @FXML%0A    public void selectionnerListe(MouseEvent event) %7B%0A        listeSelectionnee = listesListView.getSelectionModel().getSelectedItem();%0A        %0A        if (listeSelectionnee != null) %7B%0A            listeSelectionneeLabel.setText(listeSelectionnee.getNom());%0A            modifierListeBtn.setDisable(false);%0A            supprimerListeBtn.setDisable(false);%0A            %0A            // Charger les t%C3%A2ches de la liste%0A            chargerTaches(listeSelectionnee.getIdListe());%0A            %0A            // R%C3%A9initialiser les champs de t%C3%A2che%0A            nomTacheField.clear();%0A            etatComboBox.getSelectionModel().clearSelection();%0A            typeComboBox.getSelectionModel().clearSelection();%0A            modifierTacheBtn.setDisable(true);%0A            supprimerTacheBtn.setDisable(true);%0A        %7D else %7B%0A            listeSelectionneeLabel.setText(%22Aucune liste s%C3%A9lectionn%C3%A9e%22);%0A            modifierListeBtn.setDisable(true);%0A            supprimerListeBtn.setDisable(true);%0A            tachesTableView.getItems().clear();\n %0A   \n@@ -7264,32 +7264,36 @@\n         %7D%0A    %7D%0A\n+    \n %0A    /**%0A     * \n@@ -7296,1178 +7296,1459 @@\n   * \n-Modifie la t%C3%A2che s%C3%A9lectionn%C3%A9e%0A     */%0A    @FXML%0A    public void modifierTache() %7B%0A        if (tacheSelectionnee != null &amp;&amp; validerChamps()) %7B%0A            tacheSelectionnee.setTitre(titreField.getText());%0A            tacheSelectionnee.setDescription(descriptionArea.getText());%0A            tacheSelectionnee.setDateEcheance(dateEcheancePicker.getValue());%0A            tacheSelectionnee.setPriorite(prioriteComboBox.getValue());%0A            tacheSelectionnee.setStatut(statutComboBox.getValue());%0A            %0A            boolean succes = tacheRepository.mettreAJourTache(tacheSelectionnee);%0A            %0A            if (succes) %7B%0A                // Rafra%C3%AEchir le tableau%0A                tableauTaches.refresh();%0A                messageLabel.setText(%22T%C3%A2che modifi%C3%A9e avec succ%C3%A8s !%22);%0A                messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);%0A                viderChamps();%0A                modifierBtn.setDisable(true);%0A                supprimerBtn.setDisable(true);%0A            %7D else %7B%0A                messageLabel.setText(%22Erreur lors de la modification de la t%C3%A2che.%22);%0A                messageLabel.setTextFill(javafx.scene.paint.Color.RED);%0A            %7D\n+G%C3%A8re la s%C3%A9lection d'une t%C3%A2che%0A     */%0A    @FXML%0A    public void selectionnerTache(MouseEvent event) %7B%0A        tacheSelectionnee = tachesTableView.getSelectionModel().getSelectedItem();%0A        %0A        if (tacheSelectionnee != null) %7B%0A            nomTacheField.setText(tacheSelectionnee.getNom());%0A            %0A            // S%C3%A9lectionner l'%C3%A9tat%0A            switch (tacheSelectionnee.getEtat()) %7B%0A                case 0:%0A                    etatComboBox.getSelectionModel().select(%22%C3%80 faire%22);%0A                    break;%0A                case 1:%0A                    etatComboBox.getSelectionModel().select(%22En cours%22);%0A                    break;%0A                case 2:%0A                    etatComboBox.getSelectionModel().select(%22Termin%C3%A9e%22);%0A                    break;%0A            %7D%0A            %0A            // S%C3%A9lectionner le type%0A            for (Type type : types) %7B%0A                if (type.getIdType() == tacheSelectionnee.getRefType()) %7B%0A                    typeComboBox.getSelectionModel().select(type);%0A                    break;%0A                %7D%0A            %7D%0A            %0A            modifierTacheBtn.setDisable(false);%0A            supprimerTacheBtn.setDisable(false);%0A        %7D else %7B%0A            nomTacheField.clear();%0A            etatComboBox.getSelectionModel().clearSelection();%0A            typeComboBox.getSelectionModel().clearSelection();%0A            modifierTacheBtn.setDisable(true);%0A            supprimerTacheBtn.setDisable(true);\n %0A   \n@@ -8752,32 +8752,36 @@\n         %7D%0A    %7D%0A\n+    \n %0A    /**%0A     * \n@@ -8784,779 +8784,1394 @@\n   * \n-Supprime la t%C3%A2che s%C3%A9lectionn%C3%A9e%0A     */%0A    @FXML%0A    public void supprimerTache() %7B%0A        if (tacheSelectionnee != null) %7B%0A            boolean succes = tacheRepository.supprimerTache(tacheSelectionnee.getIdTache());%0A            %0A            if (succes) %7B%0A                listeTaches.remove(tacheSelectionnee);%0A                messageLabel.setText(%22T%C3%A2che supprim%C3%A9e avec succ%C3%A8s !%22);%0A                messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);%0A                viderChamps();%0A                modifierBtn.setDisable(true);%0A                supprimerBtn.setDisable(true);%0A            %7D else %7B%0A                messageLabel.setText(%22Erreur lors de la suppression de la t%C3%A2che.%22);%0A                messageLabel.setTextFill(javafx.scene.paint.Color.RED);%0A            %7D\n+Ajoute une nouvelle liste%0A     */%0A    @FXML%0A    public void ajouterListe() %7B%0A        String nomListe = nomListeField.getText().trim();%0A        %0A        if (nomListe.isEmpty()) %7B%0A            messageLabel.setText(%22Veuillez saisir un nom pour la liste.%22);%0A            messageLabel.setTextFill(javafx.scene.paint.Color.RED);%0A            return;%0A        %7D%0A        %0A        Liste nouvelleListe = new Liste(nomListe);%0A        int idListe = listeRepository.ajouterListe(nouvelleListe);%0A        %0A        if (idListe %3E 0) %7B%0A            nouvelleListe.setIdListe(idListe);%0A            %0A            // Associer la liste %C3%A0 l'utilisateur%0A            boolean associationReussie = listeRepository.associerListeUtilisateur(idListe, utilisateur.getIdUtilisateur());%0A            %0A            if (associationReussie) %7B%0A                listes.add(nouvelleListe);%0A                nomListeField.clear();%0A                messageLabel.setText(%22Liste ajout%C3%A9e avec succ%C3%A8s !%22);%0A                messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);%0A            %7D else %7B%0A                messageLabel.setText(%22Erreur lors de l'association de la liste %C3%A0 l'utilisateur.%22);%0A                messageLabel.setTextFill(javafx.scene.paint.Color.RED);%0A            %7D%0A        %7D else %7B%0A            messageLabel.setText(%22Erreur lors de l'ajout de la liste.%22);%0A            messageLabel.setTextFill(javafx.scene.paint.Color.RED);\n %0A   \n@@ -10175,32 +10175,36 @@\n         %7D%0A    %7D%0A\n+    \n %0A    /**%0A     * \n@@ -10207,1757 +10207,8884 @@\n   * \n-Recherche des t%C3%A2ches par mot-cl%C3%A9%0A     */%0A    @FXML%0A    public void rechercher() %7B%0A        String motCle = rechercheField.getText().trim();%0A        %0A        if (motCle.isEmpty()) %7B%0A            tableauTaches.setItems(listeTaches);%0A            return;%0A        %7D%0A        %0A        ArrayList%3CTache%3E tachesRecherchees = tacheRepository.rechercherTaches(utilisateur.getIdUtilisateur(), motCle);%0A        tableauTaches.setItems(FXCollections.observableArrayList(tachesRecherchees));%0A        %0A        if (tachesRecherchees.isEmpty()) %7B%0A            messageLabel.setText(%22Aucune t%C3%A2che trouv%C3%A9e pour cette recherche.%22);%0A            messageLabel.setTextFill(javafx.scene.paint.Color.ORANGE);%0A        %7D else %7B%0A            messageLabel.setText(tachesRecherchees.size() + %22 t%C3%A2che(s) trouv%C3%A9e(s).%22);%0A            messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);%0A        %7D%0A    %7D%0A%0A    /**%0A     * Valide les champs du formulaire%0A     * @return true si tous les champs sont valides, false sinon%0A     */%0A    private boolean validerChamps() %7B%0A        if (titreField.getText().trim().isEmpty()) %7B%0A            messageLabel.setText(%22Le titre est obligatoire.%22);%0A            messageLabel.setTextFill(javafx.scene.paint.Color.RED);%0A            return false;%0A        %7D%0A        %0A        if (prioriteComboBox.getValue() == null) %7B%0A            messageLabel.setText(%22Veuillez s%C3%A9lectionner une priorit%C3%A9.%22);%0A            messageLabel.setTextFill(javafx.scene.paint.Color.RED);%0A            return false;%0A        %7D%0A        %0A        if (statutComboBox.getValue() == null) %7B%0A            messageLabel.setText(%22Veuillez s%C3%A9lectionner un statut.%22);%0A            messageLabel.setTextFill(javafx.scene.paint.Color.RED);%0A            return false;%0A        %7D%0A        %0A        return true;\n+Modifie la liste s%C3%A9lectionn%C3%A9e%0A     */%0A    @FXML%0A    public void modifierListe() %7B%0A        if (listeSelectionnee == null) %7B%0A            messageLabel.setText(%22Aucune liste s%C3%A9lectionn%C3%A9e.%22);%0A            messageLabel.setTextFill(javafx.scene.paint.Color.RED);%0A            return;%0A        %7D%0A        %0A        String nouveauNom = nomListeField.getText().trim();%0A        %0A        if (nouveauNom.isEmpty()) %7B%0A            messageLabel.setText(%22Veuillez saisir un nom pour la liste.%22);%0A            messageLabel.setTextFill(javafx.scene.paint.Color.RED);%0A            return;%0A        %7D%0A        %0A        listeSelectionnee.setNom(nouveauNom);%0A        boolean succes = listeRepository.mettreAJourListe(listeSelectionnee);%0A        %0A        if (succes) %7B%0A            listesListView.refresh();%0A            listeSelectionneeLabel.setText(nouveauNom);%0A            nomListeField.clear();%0A            messageLabel.setText(%22Liste modifi%C3%A9e avec succ%C3%A8s !%22);%0A            messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);%0A        %7D else %7B%0A            messageLabel.setText(%22Erreur lors de la modification de la liste.%22);%0A            messageLabel.setTextFill(javafx.scene.paint.Color.RED);%0A        %7D%0A    %7D%0A    %0A    /**%0A     * Supprime la liste s%C3%A9lectionn%C3%A9e%0A     */%0A    @FXML%0A    public void supprimerListe() %7B%0A        if (listeSelectionnee == null) %7B%0A            messageLabel.setText(%22Aucune liste s%C3%A9lectionn%C3%A9e.%22);%0A            messageLabel.setTextFill(javafx.scene.paint.Color.RED);%0A            return;%0A        %7D%0A        %0A        boolean succes = listeRepository.supprimerListe(listeSelectionnee.getIdListe());%0A        %0A        if (succes) %7B%0A            listes.remove(listeSelectionnee);%0A            listeSelectionnee = null;%0A            listeSelectionneeLabel.setText(%22Aucune liste s%C3%A9lectionn%C3%A9e%22);%0A            tachesTableView.getItems().clear();%0A            nomListeField.clear();%0A            modifierListeBtn.setDisable(true);%0A            supprimerListeBtn.setDisable(true);%0A            messageLabel.setText(%22Liste supprim%C3%A9e avec succ%C3%A8s !%22);%0A            messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);%0A        %7D else %7B%0A            messageLabel.setText(%22Erreur lors de la suppression de la liste.%22);%0A            messageLabel.setTextFill(javafx.scene.paint.Color.RED);%0A        %7D%0A    %7D%0A    %0A    /**%0A     * Ajoute une nouvelle t%C3%A2che%0A     */%0A    @FXML%0A    public void ajouterTache() %7B%0A        if (listeSelectionnee == null) %7B%0A            messageLabel.setText(%22Veuillez s%C3%A9lectionner une liste.%22);%0A            messageLabel.setTextFill(javafx.scene.paint.Color.RED);%0A            return;%0A        %7D%0A        %0A        String nomTache = nomTacheField.getText().trim();%0A        Type typeSelectionne = typeComboBox.getValue();%0A        String etatSelectionne = etatComboBox.getValue();%0A        %0A        if (nomTache.isEmpty() %7C%7C typeSelectionne == null %7C%7C etatSelectionne == null) %7B%0A            messageLabel.setText(%22Veuillez remplir tous les champs.%22);%0A            messageLabel.setTextFill(javafx.scene.paint.Color.RED);%0A            return;%0A        %7D%0A        %0A        // Convertir l'%C3%A9tat en entier%0A        int etat;%0A        switch (etatSelectionne) %7B%0A            case %22En cours%22:%0A                etat = 1;%0A                break;%0A            case %22Termin%C3%A9e%22:%0A                etat = 2;%0A                break;%0A            default:%0A                etat = 0; // %C3%80 faire%0A        %7D%0A        %0A        Tache nouvelleTache = new Tache(nomTache, etat, listeSelectionnee.getIdListe(), typeSelectionne.getIdType());%0A        int idTache = tacheRepository.ajouterTache(nouvelleTache);%0A        %0A        if (idTache %3E 0) %7B%0A            nouvelleTache.setIdTache(idTache);%0A            nouvelleTache.setNomListe(listeSelectionnee.getNom());%0A            nouvelleTache.setNomType(typeSelectionne.getNom());%0A            nouvelleTache.setCodeCouleur(typeSelectionne.getCodeCouleur());%0A            %0A            taches.add(nouvelleTache);%0A            nomTacheField.clear();%0A            etatComboBox.getSelectionModel().clearSelection();%0A            typeComboBox.getSelectionModel().clearSelection();%0A            messageLabel.setText(%22T%C3%A2che ajout%C3%A9e avec succ%C3%A8s !%22);%0A            messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);%0A        %7D else %7B%0A            messageLabel.setText(%22Erreur lors de l'ajout de la t%C3%A2che.%22);%0A            messageLabel.setTextFill(javafx.scene.paint.Color.RED);%0A        %7D%0A    %7D%0A    %0A    /**%0A     * Modifie la t%C3%A2che s%C3%A9lectionn%C3%A9e%0A     */%0A    @FXML%0A    public void modifierTache() %7B%0A        if (tacheSelectionnee == null) %7B%0A            messageLabel.setText(%22Aucune t%C3%A2che s%C3%A9lectionn%C3%A9e.%22);%0A            messageLabel.setTextFill(javafx.scene.paint.Color.RED);%0A            return;%0A        %7D%0A        %0A        String nomTache = nomTacheField.getText().trim();%0A        Type typeSelectionne = typeComboBox.getValue();%0A        String etatSelectionne = etatComboBox.getValue();%0A        %0A        if (nomTache.isEmpty() %7C%7C typeSelectionne == null %7C%7C etatSelectionne == null) %7B%0A            messageLabel.setText(%22Veuillez remplir tous les champs.%22);%0A            messageLabel.setTextFill(javafx.scene.paint.Color.RED);%0A            return;%0A        %7D%0A        %0A        // Convertir l'%C3%A9tat en entier%0A        int etat;%0A        switch (etatSelectionne) %7B%0A            case %22En cours%22:%0A                etat = 1;%0A                break;%0A            case %22Termin%C3%A9e%22:%0A                etat = 2;%0A                break;%0A            default:%0A                etat = 0; // %C3%80 faire%0A        %7D%0A        %0A        tacheSelectionnee.setNom(nomTache);%0A        tacheSelectionnee.setEtat(etat);%0A        tacheSelectionnee.setRefType(typeSelectionne.getIdType());%0A        tacheSelectionnee.setNomType(typeSelectionne.getNom());%0A        tacheSelectionnee.setCodeCouleur(typeSelectionne.getCodeCouleur());%0A        %0A        boolean succes = tacheRepository.mettreAJourTache(tacheSelectionnee);%0A        %0A        if (succes) %7B%0A            tachesTableView.refresh();%0A            nomTacheField.clear();%0A            etatComboBox.getSelectionModel().clearSelection();%0A            typeComboBox.getSelectionModel().clearSelection();%0A            modifierTacheBtn.setDisable(true);%0A            supprimerTacheBtn.setDisable(true);%0A            messageLabel.setText(%22T%C3%A2che modifi%C3%A9e avec succ%C3%A8s !%22);%0A            messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);%0A        %7D else %7B%0A            messageLabel.setText(%22Erreur lors de la modification de la t%C3%A2che.%22);%0A            messageLabel.setTextFill(javafx.scene.paint.Color.RED);%0A        %7D%0A    %7D%0A    %0A    /**%0A     * Supprime la t%C3%A2che s%C3%A9lectionn%C3%A9e%0A     */%0A    @FXML%0A    public void supprimerTache() %7B%0A        if (tacheSelectionnee == null) %7B%0A            messageLabel.setText(%22Aucune t%C3%A2che s%C3%A9lectionn%C3%A9e.%22);%0A            messageLabel.setTextFill(javafx.scene.paint.Color.RED);%0A            return;%0A        %7D%0A        %0A        boolean succes = tacheRepository.supprimerTache(tacheSelectionnee.getIdTache());%0A        %0A        if (succes) %7B%0A            taches.remove(tacheSelectionnee);%0A            tacheSelectionnee = null;%0A            nomTacheField.clear();%0A            etatComboBox.getSelectionModel().clearSelection();%0A            typeComboBox.getSelectionModel().clearSelection();%0A            modifierTacheBtn.setDisable(true);%0A            supprimerTacheBtn.setDisable(true);%0A            messageLabel.setText(%22T%C3%A2che supprim%C3%A9e avec succ%C3%A8s !%22);%0A            messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);%0A        %7D else %7B%0A            messageLabel.setText(%22Erreur lors de la suppression de la t%C3%A2che.%22);%0A            messageLabel.setTextFill(javafx.scene.paint.Color.RED);%0A        %7D%0A    %7D%0A    %0A    /**%0A     * Recherche des t%C3%A2ches par mot-cl%C3%A9%0A     */%0A    @FXML%0A    public void rechercherTache() %7B%0A        if (listeSelectionnee == null) %7B%0A            messageLabel.setText(%22Veuillez s%C3%A9lectionner une liste.%22);%0A            messageLabel.setTextFill(javafx.scene.paint.Color.RED);%0A            return;%0A        %7D%0A        %0A        String motCle = rechercheTacheField.getText().trim();%0A        %0A        if (motCle.isEmpty()) %7B%0A            chargerTaches(listeSelectionnee.getIdListe());%0A            return;%0A        %7D%0A        %0A        ArrayList%3CTache%3E tachesRecherchees = new ArrayList%3C%3E();%0A        %0A        // Filtrer les t%C3%A2ches localement%0A        for (Tache tache : taches) %7B%0A            if (tache.getNom().toLowerCase().contains(motCle.toLowerCase())) %7B%0A                tachesRecherchees.add(tache);%0A            %7D%0A        %7D%0A        %0A        tachesTableView.setItems(FXCollections.observableArrayList(tachesRecherchees));%0A        %0A        if (tachesRecherchees.isEmpty()) %7B%0A            messageLabel.setText(%22Aucune t%C3%A2che trouv%C3%A9e pour cette recherche.%22);%0A            messageLabel.setTextFill(javafx.scene.paint.Color.ORANGE);%0A        %7D else %7B%0A            messageLabel.setText(tachesRecherchees.size() + %22 t%C3%A2che(s) trouv%C3%A9e(s).%22);%0A            messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);%0A        %7D\n %0A    %7D%0A\n+    \n %0A   \n@@ -19099,384 +19099,395 @@\n   * \n-Vide les champs du formulaire%0A     */%0A    private void viderChamps() %7B%0A        titreField.clear();%0A        descriptionArea.clear();%0A        dateEcheancePicker.setValue(LocalDate.now());%0A        prioriteComboBox.getSelectionModel().clearSelection();%0A        statutComboBox.getSelectionModel().clearSelection();%0A        tableauTaches.getSelectionModel().clearSelection();\n+R%C3%A9initialise la recherche de t%C3%A2ches%0A     */%0A    @FXML%0A    public void resetRechercheTache() %7B%0A        if (listeSelectionnee != null) %7B%0A            rechercheTacheField.clear();%0A            chargerTaches(listeSelectionnee.getIdListe());%0A            messageLabel.setText(%22Recherche r%C3%A9initialis%C3%A9e.%22);%0A            messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);%0A        %7D\n %0A    %7D%0A\n+    \n %0A   \n&quot;,&quot;isNew&quot;:false,&quot;isApplied&quot;:true},{&quot;path&quot;:&quot;src/main/resources/appli/user/TodoListView.fxml&quot;,&quot;patch&quot;:&quot;@@ -177,26 +177,62 @@\n control.\n-DatePicker\n+Label?%3E%0A%3C?import javafx.scene.control.ListView\n ?%3E%0A%3C?imp\n@@ -248,37 +248,41 @@\n x.scene.control.\n-Label\n+SplitPane\n ?%3E%0A%3C?import java\n@@ -314,49 +314,8 @@\n w?%3E%0A\n-%3C?import javafx.scene.control.TextArea?%3E%0A\n %3C?im\n@@ -390,24 +390,66 @@\n nchorPane?%3E%0A\n+%3C?import javafx.scene.layout.BorderPane?%3E%0A\n %3C?import jav\n@@ -589,8376 +589,1890 @@\n th=%22\n-800.0%22 xmlns=%22http://javafx.com/javafx/23.0.1%22 xmlns:fx=%22http://javafx.com/fxml/1%22 fx:controller=%22appli.user.TodoListController%22%3E%0A   %3Cchildren%3E%0A      %3CVBox alignment=%22TOP_CENTER%22 layoutX=%220.0%22 layoutY=%220.0%22 prefHeight=%22600.0%22 prefWidth=%22800.0%22 spacing=%2210.0%22%3E%0A         %3Cchildren%3E%0A            %3CHBox alignment=%22CENTER_LEFT%22 spacing=%2210.0%22%3E%0A               %3Cchildren%3E%0A                  %3CButton fx:id=%22retourBtn%22 mnemonicParsing=%22false%22 onAction=%22#retour%22 style=%22-fx-background-color: #4a90e2;%22 text=%22Retour%22 textFill=%22WHITE%22%3E%0A                     %3Cfont%3E%0A                        %3CFont name=%22System Bold%22 size=%2212.0%22 /%3E%0A                     %3C/font%3E%0A                  %3C/Button%3E%0A                  %3CLabel alignment=%22CENTER%22 contentDisplay=%22CENTER%22 text=%22Gestion des T%C3%A2ches%22 textAlignment=%22CENTER%22 HBox.hgrow=%22ALWAYS%22%3E%0A                     %3Cfont%3E%0A                        %3CFont name=%22System Bold%22 size=%2224.0%22 /%3E%0A                     %3C/font%3E%0A                     %3CHBox.margin%3E%0A                        %3CInsets left=%22250.0%22 /%3E%0A                     %3C/HBox.margin%3E%0A                  %3C/Label%3E%0A               %3C/children%3E%0A               %3Cpadding%3E%0A                  %3CInsets bottom=%2210.0%22 left=%2210.0%22 right=%2210.0%22 top=%2210.0%22 /%3E%0A               %3C/padding%3E%0A            %3C/HBox%3E%0A            %0A            %3CHBox spacing=%2210.0%22%3E%0A               %3Cchildren%3E%0A                  %3C!-- Panneau de gauche pour la liste des t%C3%A2ches --%3E%0A                  %3CVBox prefHeight=%22500.0%22 prefWidth=%22400.0%22 spacing=%2210.0%22%3E%0A                     %3Cchildren%3E%0A                        %3CHBox alignment=%22CENTER_LEFT%22 spacing=%2210.0%22%3E%0A                           %3Cchildren%3E%0A                              %3CLabel text=%22T%C3%A2ches de l'utilisateur :%22%3E%0A                                 %3Cfont%3E%0A                                    %3CFont name=%22System Bold%22 size=%2214.0%22 /%3E%0A                                 %3C/font%3E%0A                              %3C/Label%3E%0A                              %3CLabel fx:id=%22nomUtilisateurLabel%22 text=%22%5BNom de l'utilisateur%5D%22%3E%0A                                 %3Cfont%3E%0A                                    %3CFont size=%2214.0%22 /%3E%0A                                 %3C/font%3E%0A                              %3C/Label%3E%0A                           %3C/children%3E%0A                        %3C/HBox%3E%0A                        %0A                        %3CHBox alignment=%22CENTER_LEFT%22 spacing=%2210.0%22%3E%0A                           %3Cchildren%3E%0A                              %3CTextField fx:id=%22rechercheField%22 prefHeight=%2230.0%22 prefWidth=%22250.0%22 promptText=%22Rechercher une t%C3%A2che...%22%3E%0A                                 %3Cfont%3E%0A                                    %3CFont size=%2212.0%22 /%3E%0A                                 %3C/font%3E%0A                              %3C/TextField%3E%0A                              %3CButton fx:id=%22rechercheBtn%22 mnemonicParsing=%22false%22 onAction=%22#rechercher%22 style=%22-fx-background-color: #4a90e2;%22 text=%22Rechercher%22 textFill=%22WHITE%22 /%3E%0A                           %3C/children%3E%0A                        %3C/HBox%3E%0A                        %0A                        %3CTableView fx:id=%22tableauTaches%22 onMouseClicked=%22#cliqueTache%22 prefHeight=%22400.0%22 prefWidth=%22400.0%22 style=%22-fx-border-color: #e0e0e0; -fx-border-width: 1px;%22 /%3E%0A                     %3C/children%3E%0A                  %3C/VBox%3E%0A                  %0A                  %3C!-- Panneau de droite pour les d%C3%A9tails et l'ajout de t%C3%A2ches --%3E%0A                  %3CVBox prefHeight=%22500.0%22 prefWidth=%22380.0%22 spacing=%2215.0%22 style=%22-fx-background-color: #f8f9fa; -fx-border-color: #e0e0e0; -fx-border-width: 1px; -fx-border-radius: 5px;%22%3E%0A                     %3Cchildren%3E%0A                        %3CLabel text=%22D%C3%A9tails de la t%C3%A2che%22 textAlignment=%22CENTER%22%3E%0A                           %3Cfont%3E%0A                              %3CFont name=%22System Bold%22 size=%2216.0%22 /%3E%0A                           %3C/font%3E%0A                        %3C/Label%3E%0A                        %0A                        %3CHBox alignment=%22CENTER_LEFT%22 spacing=%2210.0%22%3E%0A                           %3Cchildren%3E%0A                              %3CLabel prefWidth=%2280.0%22 text=%22Titre :%22%3E%0A                                 %3Cfont%3E%0A                                    %3CFont name=%22System Bold%22 size=%2212.0%22 /%3E%0A                                 %3C/font%3E%0A                              %3C/Label%3E%0A                              %3CTextField fx:id=%22titreField%22 prefHeight=%2225.0%22 prefWidth=%22250.0%22 /%3E%0A                           %3C/children%3E%0A                        %3C/HBox%3E%0A                        %0A                        %3CHBox alignment=%22CENTER_LEFT%22 spacing=%2210.0%22%3E%0A                           %3Cchildren%3E%0A                              %3CLabel prefWidth=%2280.0%22 text=%22Description :%22%3E%0A                                 %3Cfont%3E%0A                                    %3CFont name=%22System Bold%22 size=%2212.0%22 /%3E%0A                                 %3C/font%3E%0A                              %3C/Label%3E%0A                              %3CTextArea fx:id=%22descriptionArea%22 prefHeight=%22100.0%22 prefWidth=%22250.0%22 wrapText=%22true%22 /%3E%0A                           %3C/children%3E%0A                        %3C/HBox%3E%0A                        %0A                        %3CHBox alignment=%22CENTER_LEFT%22 spacing=%2210.0%22%3E%0A                           %3Cchildren%3E%0A                              %3CLabel prefWidth=%2280.0%22 text=%22Date limite :%22%3E%0A                                 %3Cfont%3E%0A                                    %3CFont name=%22System Bold%22 size=%2212.0%22 /%3E%0A                                 %3C/font%3E%0A                              %3C/Label%3E%0A                              %3CDatePicker fx:id=%22dateEcheancePicker%22 prefHeight=%2225.0%22 prefWidth=%22250.0%22 /%3E%0A                           %3C/children%3E%0A                        %3C/HBox%3E%0A                        %0A                        %3CHBox alignment=%22CENTER_LEFT%22 spacing=%2210.0%22%3E%0A                           %3Cchildren%3E%0A                              %3CLabel prefWidth=%2280.0%22 text=%22Priorit%C3%A9 :%22%3E%0A                                 %3Cfont%3E%0A                                    %3CFont name=%22System Bold%22 size=%2212.0%22 /%3E%0A                                 %3C/font%3E%0A                              %3C/Label%3E%0A                              %3CComboBox fx:id=%22prioriteComboBox%22 prefHeight=%2225.0%22 prefWidth=%22250.0%22 /%3E%0A                           %3C/children%3E%0A                        %3C/HBox%3E%0A                        %0A                        %3CHBox alignment=%22CENTER_LEFT%22 spacing=%2210.0%22%3E%0A                           %3Cchildren%3E%0A                              %3CLabel prefWidth=%2280.0%22 text=%22Statut :%22%3E%0A                                 %3Cfont%3E%0A                                    %3CFont name=%22System Bold%22 size=%2212.0%22 /%3E%0A                                 %3C/font%3E%0A                              %3C/Label%3E%0A                              %3CComboBox fx:id=%22statutComboBox%22 prefHeight=%2225.0%22 prefWidth=%22250.0%22 /%3E%0A                           %3C/children%3E%0A                        %3C/HBox%3E%0A                        %0A                        %3CHBox alignment=%22CENTER%22 spacing=%2220.0%22%3E%0A                           %3Cchildren%3E%0A                              %3CButton fx:id=%22ajouterBtn%22 mnemonicParsing=%22false%22 onAction=%22#ajouterTache%22 style=%22-fx-background-color: #2ecc71;%22 text=%22Ajouter%22 textFill=%22WHITE%22%3E%0A                                 %3Cfont%3E%0A                                    %3CFont name=%22System Bold%22 size=%2212.0%22 /%3E%0A                                 %3C/font%3E%0A                              %3C/Button%3E%0A                              %3CButton fx:id=%22modifierBtn%22 disable=%22true%22 mnemonicParsing=%22false%22 onAction=%22#modifierTache%22 style=%22-fx-background-color: #f39c12;%22 text=%22Modifier%22 textFill=%22WHITE%22%3E%0A                                 %3Cfont%3E%0A                                    %3CFont name=%22System Bold%22 size=%2212.0%22 /%3E%0A                                 %3C/font%3E%0A                              %3C/Button%3E%0A                              %3CButton fx:id=%22supprimerBtn%22 disable=%22true%22 mnemonicParsing=%22false%22 onAction=%22#supprimerTache%22 style=%22-fx-background-color: #e74c3c;%22 text=%22Supprimer%22 textFill=%22WHITE%22%3E%0A                                 %3Cfont%3E%0A                                    %3CFont name=%22System Bold%22 size=%2212.0%22 /%3E%0A                                 %3C/font%3E%0A                              %3C/Button%3E%0A                           %3C/children%3E%0A                           %3CVBox.margin%3E%0A                              %3CInsets top=%2210.0%22 /%3E%0A                           %3C/VBox.margin%3E%0A                        %3C/HBox%3E%0A                        %0A                        %3CLabel fx:id=%22messageLabel%22 alignment=%22CENTER%22 textFill=%22#2ecc71%22%3E%0A                           %3Cfont%3E%0A                              %3CFont size=%2212\n+900.0%22 xmlns=%22http://javafx.com/javafx/23.0.1%22 xmlns:fx=%22http://javafx.com/fxml/1%22 fx:controller=%22appli.user.TodoListController%22%3E%0A   %3Cchildren%3E%0A      %3CBorderPane prefHeight=%22600.0%22 prefWidth=%22900.0%22%3E%0A         %3Ctop%3E%0A            %3CVBox spacing=%225.0%22 BorderPane.alignment=%22CENTER%22%3E%0A               %3Cchildren%3E%0A                  %3CHBox alignment=%22CENTER_LEFT%22 spacing=%2210.0%22%3E%0A                     %3Cchildren%3E%0A                        %3CButton fx:id=%22retourBtn%22 mnemonicParsing=%22false%22 onAction=%22#retour%22 style=%22-fx-background-color: #3498db;%22 text=%22Retour%22 textFill=%22WHITE%22%3E%0A                           %3Cfont%3E%0A                              %3CFont name=%22System Bold%22 size=%2212.0%22 /%3E%0A                           %3C/font%3E%0A                        %3C/Button%3E%0A                        %3CLabel alignment=%22CENTER%22 contentDisplay=%22CENTER%22 text=%22Gestion des T%C3%A2ches%22 textAlignment=%22CENTER%22 HBox.hgrow=%22ALWAYS%22%3E%0A                           %3Cfont%3E%0A                              %3CFont name=%22System Bold%22 size=%2224.0%22 /%3E%0A                           %3C/font%3E%0A                           %3CHBox.margin%3E%0A                              %3CInsets left=%22300.0%22 /%3E%0A                           %3C/HBox.margin%3E%0A                        %3C/Label%3E%0A                     %3C/children%3E%0A                     %3Cpadding%3E%0A                        %3CInsets bottom=%225.0%22 left=%2210.0%22 right=%2210.0%22 top=%2210.0%22 /%3E%0A                     %3C/padding%3E%0A                  %3C/HBox%3E%0A                  %3CHBox alignment=%22CENTER_LEFT%22 spacing=%2210.0%22%3E%0A                     %3Cchildren%3E%0A                        %3CLabel text=%22Utilisateur :%22%3E%0A                           %3Cfont%3E%0A                              %3CFont name=%22System Bold%22 size=%2214.0%22 /%3E%0A                           %3C/font%3E%0A                        %3C/Label%3E%0A                        %3CLabel fx:id=%22utilisateurLabel%22 text=%22%5BNom de l'utilisateur%5D%22%3E%0A                           %3Cfont%3E%0A                              %3CFont size=%2214\n .0%22 \n@@ -2646,18 +2646,17 @@\n bottom=%22\n-10\n+5\n .0%22 left\n@@ -2673,34 +2673,33 @@\n ght=%2210.0%22 top=%22\n-10\n+5\n .0%22 /%3E%0A         \n@@ -2733,33 +2733,33 @@\n               %3C/\n-V\n+H\n Box%3E%0A           \n@@ -2790,154 +2790,8992 @@\n     \n-   %3Cpadding%3E%0A                  %3CInsets left=%2210.0%22 right=%2210.0%22 /%3E%0A               %3C/padding%3E%0A            %3C/HBox%3E%0A         %3C/children%3E%0A      %3C/VBox\n+%3C/VBox%3E%0A         %3C/top%3E%0A         %3Ccenter%3E%0A            %3CSplitPane dividerPositions=%220.25%22 prefHeight=%22160.0%22 prefWidth=%22200.0%22 BorderPane.alignment=%22CENTER%22%3E%0A              %3Citems%3E%0A                %3CAnchorPane minHeight=%220.0%22 minWidth=%220.0%22 prefHeight=%22160.0%22 prefWidth=%22100.0%22%3E%0A                     %3Cchildren%3E%0A                        %3CVBox prefHeight=%22533.0%22 prefWidth=%22221.0%22 spacing=%2210.0%22 AnchorPane.bottomAnchor=%220.0%22 AnchorPane.leftAnchor=%220.0%22 AnchorPane.rightAnchor=%220.0%22 AnchorPane.topAnchor=%220.0%22%3E%0A                           %3Cchildren%3E%0A                              %3CLabel text=%22Listes%22%3E%0A                                 %3Cfont%3E%0A                                    %3CFont name=%22System Bold%22 size=%2216.0%22 /%3E%0A                                 %3C/font%3E%0A                              %3C/Label%3E%0A                              %3CListView fx:id=%22listesListView%22 onMouseClicked=%22#selectionnerListe%22 prefHeight=%22200.0%22 prefWidth=%22200.0%22 VBox.vgrow=%22ALWAYS%22 /%3E%0A                              %3CHBox alignment=%22CENTER%22 spacing=%2210.0%22%3E%0A                                 %3Cchildren%3E%0A                                    %3CTextField fx:id=%22nomListeField%22 promptText=%22Nom de la liste%22 HBox.hgrow=%22ALWAYS%22 /%3E%0A                                    %3CButton fx:id=%22ajouterListeBtn%22 mnemonicParsing=%22false%22 onAction=%22#ajouterListe%22 style=%22-fx-background-color: #2ecc71;%22 text=%22+%22 textFill=%22WHITE%22%3E%0A                                       %3Cfont%3E%0A                                          %3CFont name=%22System Bold%22 size=%2212.0%22 /%3E%0A                                       %3C/font%3E%0A                                    %3C/Button%3E%0A                                 %3C/children%3E%0A                              %3C/HBox%3E%0A                              %3CHBox alignment=%22CENTER%22 spacing=%2210.0%22%3E%0A                                 %3Cchildren%3E%0A                                    %3CButton fx:id=%22modifierListeBtn%22 disable=%22true%22 mnemonicParsing=%22false%22 onAction=%22#modifierListe%22 style=%22-fx-background-color: #f39c12;%22 text=%22Modifier%22 textFill=%22WHITE%22%3E%0A                                       %3Cfont%3E%0A                                          %3CFont name=%22System Bold%22 size=%2212.0%22 /%3E%0A                                       %3C/font%3E%0A                                    %3C/Button%3E%0A                                    %3CButton fx:id=%22supprimerListeBtn%22 disable=%22true%22 mnemonicParsing=%22false%22 onAction=%22#supprimerListe%22 style=%22-fx-background-color: #e74c3c;%22 text=%22Supprimer%22 textFill=%22WHITE%22%3E%0A                                       %3Cfont%3E%0A                                          %3CFont name=%22System Bold%22 size=%2212.0%22 /%3E%0A                                       %3C/font%3E%0A                                    %3C/Button%3E%0A                                 %3C/children%3E%0A                              %3C/HBox%3E%0A                           %3C/children%3E%0A                           %3Cpadding%3E%0A                              %3CInsets bottom=%2210.0%22 left=%2210.0%22 right=%2210.0%22 top=%2210.0%22 /%3E%0A                           %3C/padding%3E%0A                        %3C/VBox%3E%0A                     %3C/children%3E%0A                  %3C/AnchorPane%3E%0A                %3CAnchorPane minHeight=%220.0%22 minWidth=%220.0%22 prefHeight=%22160.0%22 prefWidth=%22100.0%22%3E%0A                     %3Cchildren%3E%0A                        %3CBorderPane prefHeight=%22533.0%22 prefWidth=%22669.0%22 AnchorPane.bottomAnchor=%220.0%22 AnchorPane.leftAnchor=%220.0%22 AnchorPane.rightAnchor=%220.0%22 AnchorPane.topAnchor=%220.0%22%3E%0A                           %3Ctop%3E%0A                              %3CVBox spacing=%2210.0%22 BorderPane.alignment=%22CENTER%22%3E%0A                                 %3Cchildren%3E%0A                                    %3CLabel fx:id=%22listeSelectionneeLabel%22 text=%22%5BNom de la liste s%C3%A9lectionn%C3%A9e%5D%22%3E%0A                                       %3Cfont%3E%0A                                          %3CFont name=%22System Bold%22 size=%2216.0%22 /%3E%0A                                       %3C/font%3E%0A                                    %3C/Label%3E%0A                                    %3CHBox alignment=%22CENTER_LEFT%22 spacing=%2210.0%22%3E%0A                                       %3Cchildren%3E%0A                                          %3CTextField fx:id=%22rechercheTacheField%22 promptText=%22Rechercher une t%C3%A2che...%22 HBox.hgrow=%22ALWAYS%22 /%3E%0A                                          %3CButton fx:id=%22rechercheTacheBtn%22 mnemonicParsing=%22false%22 onAction=%22#rechercherTache%22 style=%22-fx-background-color: #3498db;%22 text=%22Rechercher%22 textFill=%22WHITE%22%3E%0A                                             %3Cfont%3E%0A                                                %3CFont size=%2212.0%22 /%3E%0A                                             %3C/font%3E%0A                                          %3C/Button%3E%0A                                          %3CButton fx:id=%22resetRechercheTacheBtn%22 mnemonicParsing=%22false%22 onAction=%22#resetRechercheTache%22 style=%22-fx-background-color: #7f8c8d;%22 text=%22R%C3%A9initialiser%22 textFill=%22WHITE%22%3E%0A                                             %3Cfont%3E%0A                                                %3CFont size=%2212.0%22 /%3E%0A                                             %3C/font%3E%0A                                          %3C/Button%3E%0A                                       %3C/children%3E%0A                                    %3C/HBox%3E%0A                                 %3C/children%3E%0A                                 %3Cpadding%3E%0A                                    %3CInsets bottom=%2210.0%22 left=%2210.0%22 right=%2210.0%22 top=%2210.0%22 /%3E%0A                                 %3C/padding%3E%0A                              %3C/VBox%3E%0A                           %3C/top%3E%0A                           %3Ccenter%3E%0A                              %3CTableView fx:id=%22tachesTableView%22 onMouseClicked=%22#selectionnerTache%22 prefHeight=%22200.0%22 prefWidth=%22200.0%22 BorderPane.alignment=%22CENTER%22%3E%0A                                 %3CBorderPane.margin%3E%0A                                    %3CInsets bottom=%2210.0%22 left=%2210.0%22 right=%2210.0%22 top=%220.0%22 /%3E%0A                                 %3C/BorderPane.margin%3E%0A                              %3C/TableView%3E%0A                           %3C/center%3E%0A                           %3Cbottom%3E%0A                              %3CVBox spacing=%2210.0%22 BorderPane.alignment=%22CENTER%22%3E%0A                                 %3Cchildren%3E%0A                                    %3CHBox alignment=%22CENTER_LEFT%22 spacing=%2210.0%22%3E%0A                                       %3Cchildren%3E%0A                                          %3CTextField fx:id=%22nomTacheField%22 promptText=%22Nom de la t%C3%A2che%22 HBox.hgrow=%22ALWAYS%22 /%3E%0A                                          %3CComboBox fx:id=%22typeComboBox%22 prefWidth=%22150.0%22 promptText=%22Type%22 /%3E%0A                                          %3CComboBox fx:id=%22etatComboBox%22 prefWidth=%22150.0%22 promptText=%22%C3%89tat%22 /%3E%0A                                       %3C/children%3E%0A                                    %3C/HBox%3E%0A                                    %3CHBox alignment=%22CENTER%22 spacing=%2210.0%22%3E%0A                                       %3Cchildren%3E%0A                                          %3CButton fx:id=%22ajouterTacheBtn%22 mnemonicParsing=%22false%22 onAction=%22#ajouterTache%22 style=%22-fx-background-color: #2ecc71;%22 text=%22Ajouter%22 textFill=%22WHITE%22%3E%0A                                             %3Cfont%3E%0A                                                %3CFont name=%22System Bold%22 size=%2212.0%22 /%3E%0A                                             %3C/font%3E%0A                                          %3C/Button%3E%0A                                          %3CButton fx:id=%22modifierTacheBtn%22 disable=%22true%22 mnemonicParsing=%22false%22 onAction=%22#modifierTache%22 style=%22-fx-background-color: #f39c12;%22 text=%22Modifier%22 textFill=%22WHITE%22%3E%0A                                             %3Cfont%3E%0A                                                %3CFont name=%22System Bold%22 size=%2212.0%22 /%3E%0A                                             %3C/font%3E%0A                                          %3C/Button%3E%0A                                          %3CButton fx:id=%22supprimerTacheBtn%22 disable=%22true%22 mnemonicParsing=%22false%22 onAction=%22#supprimerTache%22 style=%22-fx-background-color: #e74c3c;%22 text=%22Supprimer%22 textFill=%22WHITE%22%3E%0A                                             %3Cfont%3E%0A                                                %3CFont name=%22System Bold%22 size=%2212.0%22 /%3E%0A                                             %3C/font%3E%0A                                          %3C/Button%3E%0A                                       %3C/children%3E%0A                                    %3C/HBox%3E%0A                                    %3CLabel fx:id=%22messageLabel%22 alignment=%22CENTER%22 textFill=%22#2ecc71%22%3E%0A                                       %3Cfont%3E%0A                                          %3CFont size=%2214.0%22 /%3E%0A                                       %3C/font%3E%0A                                    %3C/Label%3E%0A                                 %3C/children%3E%0A                                 %3Cpadding%3E%0A                                    %3CInsets bottom=%2210.0%22 left=%2210.0%22 right=%2210.0%22 top=%220.0%22 /%3E%0A                                 %3C/padding%3E%0A                              %3C/VBox%3E%0A                           %3C/bottom%3E%0A                        %3C/BorderPane%3E%0A                     %3C/children%3E%0A                  %3C/AnchorPane%3E%0A              %3C/items%3E%0A            %3C/SplitPane%3E%0A         %3C/center%3E%0A      %3C/BorderPane\n %3E%0A  \n&quot;,&quot;isNew&quot;:false,&quot;isApplied&quot;:true},{&quot;path&quot;:&quot;src/main/java/model/Tache.java&quot;,&quot;patch&quot;:&quot;@@ -13,37 +13,8 @@\n l;%0A%0A\n-import java.time.LocalDate;%0A%0A\n publ\n@@ -74,21 +74,19 @@\n  String \n-titre\n+nom\n ;%0A    pr\n@@ -95,63 +95,167 @@\n ate \n-String description;%0A    private LocalDate dateEcheance;\n+int etat; // 0 = %C3%A0 faire, 1 = en cours, 2 = termin%C3%A9e%0A    private int refListe;%0A    private int refType;%0A    %0A    // Propri%C3%A9t%C3%A9s suppl%C3%A9mentaires pour l'affichage\n %0A   \n@@ -270,22 +270,22 @@\n  String \n-priori\n+nomLis\n te;%0A    \n@@ -299,22 +299,23 @@\n  String \n-statut\n+nomType\n ;%0A    pr\n@@ -324,193 +324,106 @@\n ate \n-int idUtilisateur;%0A%0A    // Constructeur complet%0A    public Tache(int idTache, String titre, String description, LocalDate dateEcheance, String priorite, String statut, int idUtilisateur\n+String codeCouleur;%0A%0A    public Tache(int idTache, String nom, int etat, int refListe, int refType\n ) %7B%0A\n@@ -463,37 +463,33 @@\n        this.\n-titre = titre\n+nom = nom\n ;%0A        th\n@@ -495,617 +495,284 @@\n his.\n-description = description;%0A        this.dateEcheance = dateEcheance;%0A        this.priorite = priorite;%0A        this.statut = statut;%0A        this.idUtilisateur = idUtilisateur;%0A    %7D%0A%0A    // Constructeur sans ID (pour la cr%C3%A9ation)%0A    public Tache(String titre, String description, LocalDate dateEcheance, String priorite, String statut, int idUtilisateur) %7B%0A        this.titre = titre;%0A        this.description = description;%0A        this.dateEcheance = dateEcheance;%0A        this.priorite = priorite;%0A        this.statut = statut;%0A        this.idUtilisateur = idUtilisateur;%0A    %7D%0A%0A    // Getters et Setters\n+etat = etat;%0A        this.refListe = refListe;%0A        this.refType = refType;%0A    %7D%0A%0A    public Tache(String nom, int etat, int refListe, int refType) %7B%0A        this.nom = nom;%0A        this.etat = etat;%0A        this.refListe = refListe;%0A        this.refType = refType;%0A    %7D%0A\n %0A   \n@@ -931,21 +931,141 @@\n ring get\n-Titre\n+Nom() %7B%0A        return nom;%0A    %7D%0A%0A    public void setNom(String nom) %7B%0A        this.nom = nom;%0A    %7D%0A%0A    public int getEtat\n () %7B%0A   \n@@ -1076,21 +1076,20 @@\n  return \n-titre\n+etat\n ;%0A    %7D%0A\n@@ -1112,26 +1112,21 @@\n  set\n-Titre(String titre\n+Etat(int etat\n ) %7B%0A\n@@ -1142,21 +1142,19 @@\n his.\n-titre = titre\n+etat = etat\n ;%0A  \n@@ -1173,29 +1173,23 @@\n lic \n-Str\n in\n-g\n+t\n  get\n-Description\n+RefListe\n () %7B\n@@ -1204,27 +1204,24 @@\n  return \n-description\n+refListe\n ;%0A    %7D%0A\n@@ -1244,124 +1244,98 @@\n  set\n-Description(String description) %7B%0A        this.description = description;%0A    %7D%0A%0A    public LocalDate getDateEcheanc\n+RefListe(int refListe) %7B%0A        this.refListe = refListe;%0A    %7D%0A%0A    public int getRefTyp\n e() \n@@ -1351,27 +1351,22 @@\n  return \n-dateEcheanc\n+refTyp\n e;%0A    %7D\n@@ -1390,86 +1390,60 @@\n  set\n-DateEcheance(LocalDate dateEcheance) %7B%0A        this.dateEcheance = dateEcheanc\n+RefType(int refType) %7B%0A        this.refType = refTyp\n e;%0A \n@@ -1439,32 +1439,36 @@\n  refType;%0A    %7D%0A\n+    \n %0A    public Stri\n@@ -1473,22 +1473,22 @@\n ring get\n-Priori\n+NomLis\n te() %7B%0A \n@@ -1501,22 +1501,22 @@\n  return \n-priori\n+nomLis\n te;%0A    \n@@ -1541,14 +1541,14 @@\n  set\n-Priori\n+NomLis\n te(S\n@@ -1553,22 +1553,22 @@\n (String \n-priori\n+nomLis\n te) %7B%0A  \n@@ -1582,25 +1582,25 @@\n his.\n-priorite = priori\n+nomListe = nomLis\n te;%0A\n@@ -1627,22 +1627,23 @@\n ring get\n-Statut\n+NomType\n () %7B%0A   \n@@ -1654,22 +1654,23 @@\n  return \n-statut\n+nomType\n ;%0A    %7D%0A\n@@ -1693,22 +1693,23 @@\n  set\n-Statut\n+NomType\n (String \n stat\n@@ -1704,22 +1704,23 @@\n (String \n-statut\n+nomType\n ) %7B%0A    \n@@ -1732,23 +1732,25 @@\n his.\n-statut = statut\n+nomType = nomType\n ;%0A  \n@@ -1769,25 +1769,26 @@\n lic \n+Str\n in\n-t\n+g\n  get\n-IdUtilisat\n+CodeCoul\n eur(\n@@ -1806,26 +1806,24 @@\n  return \n-idUtilisat\n+codeCoul\n eur;%0A   \n@@ -1849,82 +1849,77 @@\n  set\n-IdUtilisateur(int idUtilisateur) %7B%0A        this.idUtilisateur = idUtilisat\n+CodeCouleur(String codeCouleur) %7B%0A        this.codeCouleur = codeCoul\n eur;\n@@ -1929,22 +1929,12 @@\n   %7D%0A\n-%0A\n     \n-@Override\n %0A   \n@@ -1952,10 +1952,15 @@\n ing \n+getEta\n t\n-o\n Stri\n@@ -1978,315 +1978,242 @@\n     \n-return %22Tache%7B%22 +%0A                %22idTache=%22 + idTache +%0A                %22, titre='%22 + titre + '%5C'' +%0A                %22, description='%22 + description + '%5C'' +%0A                %22, dateEcheance=%22 + dateEcheance +%0A                %22, priorite='%22 + priorite + '%5C'' +%0A                %22, statut='%22 + statut + '%5C'' +\n+switch (etat) %7B%0A            case 0:%0A                return %22%C3%80 faire%22;%0A            case 1:%0A                return %22En cours%22;%0A            case 2:%0A                return %22Termin%C3%A9e%22;%0A            default:%0A                return %22Inconnu%22;\n %0A   \n@@ -2221,72 +2221,80 @@\n     \n+%7D%0A\n     \n+%7D%0A%0A\n     \n-%22, idUtilisateur=%22 + idUtilisateur +%0A                '%7D'\n+@Override%0A    public String toString() %7B%0A        return nom\n ;%0A  \n&quot;,&quot;isNew&quot;:false,&quot;isApplied&quot;:true},{&quot;path&quot;:&quot;src/main/java/repository/TypeRepository.java&quot;,&quot;patch&quot;:&quot;@@ -0,0 +1,4282 @@\n+package repository;%0A%0Aimport database.Database;%0Aimport model.Type;%0A%0Aimport java.sql.*;%0Aimport java.util.ArrayList;%0A%0Apublic class TypeRepository %7B%0A    private Connection connection;%0A%0A    public TypeRepository() %7B%0A        connection = Database.getConnexion();%0A    %7D%0A%0A    /**%0A     * Ajoute un nouveau type%0A     * @param type Le type %C3%A0 ajouter%0A     * @return L'ID du type cr%C3%A9%C3%A9, ou -1 en cas d'erreur%0A     */%0A    public int ajouterType(Type type) %7B%0A        String sql = %22INSERT INTO type (nom, code_couleur) VALUES (?, ?)%22;%0A        try %7B%0A            PreparedStatement stmt = connection.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);%0A            stmt.setString(1, type.getNom());%0A            stmt.setString(2, type.getCodeCouleur());%0A            %0A            int affectedRows = stmt.executeUpdate();%0A            %0A            if (affectedRows %3E 0) %7B%0A                ResultSet generatedKeys = stmt.getGeneratedKeys();%0A                if (generatedKeys.next()) %7B%0A                    return generatedKeys.getInt(1);%0A                %7D%0A            %7D%0A        %7D catch (SQLException e) %7B%0A            System.out.println(%22Erreur lors de l'ajout du type : %22 + e.getMessage());%0A        %7D%0A        return -1;%0A    %7D%0A%0A    /**%0A     * R%C3%A9cup%C3%A8re tous les types%0A     * @return Une liste de types%0A     */%0A    public ArrayList%3CType%3E getAllTypes() %7B%0A        ArrayList%3CType%3E types = new ArrayList%3C%3E();%0A        String sql = %22SELECT * FROM type%22;%0A        %0A        try %7B%0A            PreparedStatement stmt = connection.prepareStatement(sql);%0A            ResultSet rs = stmt.executeQuery();%0A            %0A            while (rs.next()) %7B%0A                Type type = new Type(%0A                        rs.getInt(%22id_type%22),%0A                        rs.getString(%22nom%22),%0A                        rs.getString(%22code_couleur%22)%0A                );%0A                types.add(type);%0A            %7D%0A        %7D catch (SQLException e) %7B%0A            System.out.println(%22Erreur lors de la r%C3%A9cup%C3%A9ration des types : %22 + e.getMessage());%0A        %7D%0A        return types;%0A    %7D%0A%0A    /**%0A     * R%C3%A9cup%C3%A8re un type par son ID%0A     * @param idType L'ID du type%0A     * @return Le type ou null si non trouv%C3%A9%0A     */%0A    public Type getTypeParId(int idType) %7B%0A        String sql = %22SELECT * FROM type WHERE id_type = ?%22;%0A        try %7B%0A            PreparedStatement stmt = connection.prepareStatement(sql);%0A            stmt.setInt(1, idType);%0A            ResultSet rs = stmt.executeQuery();%0A            %0A            if (rs.next()) %7B%0A                return new Type(%0A                        rs.getInt(%22id_type%22),%0A                        rs.getString(%22nom%22),%0A                        rs.getString(%22code_couleur%22)%0A                );%0A            %7D%0A        %7D catch (SQLException e) %7B%0A            System.out.println(%22Erreur lors de la r%C3%A9cup%C3%A9ration du type : %22 + e.getMessage());%0A        %7D%0A        return null;%0A    %7D%0A%0A    /**%0A     * Met %C3%A0 jour un type existant%0A     * @param type Le type %C3%A0 mettre %C3%A0 jour%0A     * @return true si la mise %C3%A0 jour a r%C3%A9ussi, false sinon%0A     */%0A    public boolean mettreAJourType(Type type) %7B%0A        String sql = %22UPDATE type SET nom = ?, code_couleur = ? WHERE id_type = ?%22;%0A        try %7B%0A            PreparedStatement stmt = connection.prepareStatement(sql);%0A            stmt.setString(1, type.getNom());%0A            stmt.setString(2, type.getCodeCouleur());%0A            stmt.setInt(3, type.getIdType());%0A            %0A            int rowsUpdated = stmt.executeUpdate();%0A            return rowsUpdated %3E 0;%0A        %7D catch (SQLException e) %7B%0A            System.out.println(%22Erreur lors de la mise %C3%A0 jour du type : %22 + e.getMessage());%0A            return false;%0A        %7D%0A    %7D%0A%0A    /**%0A     * Supprime un type%0A     * @param idType L'ID du type %C3%A0 supprimer%0A     * @return true si la suppression a r%C3%A9ussi, false sinon%0A     */%0A    public boolean supprimerType(int idType) %7B%0A        String sql = %22DELETE FROM type WHERE id_type = ?%22;%0A        try %7B%0A            PreparedStatement stmt = connection.prepareStatement(sql);%0A            stmt.setInt(1, idType);%0A            %0A            int rowsDeleted = stmt.executeUpdate();%0A            return rowsDeleted %3E 0;%0A        %7D catch (SQLException e) %7B%0A            System.out.println(%22Erreur lors de la suppression du type : %22 + e.getMessage());%0A            return false;%0A        %7D%0A    %7D%0A%7D\n&quot;,&quot;isNew&quot;:true,&quot;isApplied&quot;:true},{&quot;path&quot;:&quot;src/main/java/model/Type.java&quot;,&quot;patch&quot;:&quot;@@ -0,0 +1,905 @@\n+package model;%0A%0Apublic class Type %7B%0A    private int idType;%0A    private String nom;%0A    private String codeCouleur;%0A%0A    public Type(int idType, String nom, String codeCouleur) %7B%0A        this.idType = idType;%0A        this.nom = nom;%0A        this.codeCouleur = codeCouleur;%0A    %7D%0A%0A    public Type(String nom, String codeCouleur) %7B%0A        this.nom = nom;%0A        this.codeCouleur = codeCouleur;%0A    %7D%0A%0A    public int getIdType() %7B%0A        return idType;%0A    %7D%0A%0A    public void setIdType(int idType) %7B%0A        this.idType = idType;%0A    %7D%0A%0A    public String getNom() %7B%0A        return nom;%0A    %7D%0A%0A    public void setNom(String nom) %7B%0A        this.nom = nom;%0A    %7D%0A%0A    public String getCodeCouleur() %7B%0A        return codeCouleur;%0A    %7D%0A%0A    public void setCodeCouleur(String codeCouleur) %7B%0A        this.codeCouleur = codeCouleur;%0A    %7D%0A%0A    @Override%0A    public String toString() %7B%0A        return nom;%0A    %7D%0A%7D\n&quot;,&quot;isNew&quot;:true,&quot;isApplied&quot;:true}]}],&quot;context&quot;:{&quot;author&quot;:&quot;Coding Agent&quot;,&quot;operationId&quot;:&quot;a9b3c0c0-6e00-4255-9d6e-d8eeb944e247&quot;},&quot;createdAt&quot;:1746740036415,&quot;isInternal&quot;:false},{&quot;id&quot;:&quot;b7c20bde-ca96-4326-bd6b-dc9360e49986&quot;,&quot;role&quot;:&quot;user&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;peux tu modifier pour qu'on voit le nom de la liste est pas le numero de l'objet dans la colone de gauche&quot;}],&quot;context&quot;:{&quot;currentFile&quot;:{&quot;path&quot;:&quot;src\\main\\java\\appli\\accueil\\GestionUserController.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\appli\\accueil\\GestionUserController.java&quot;,&quot;sources&quot;:[&quot;opened_tab&quot;],&quot;content&quot;:&quot;package appli.accueil;\r\nimport appli.StartApplication;\r\nimport appli.user.ModificationUserController;\r\nimport appli.user.TodoListController;\r\nimport javafx.collections.FXCollections;\r\nimport javafx.collections.ObservableList;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.Initializable;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.control.TableColumn;\r\nimport javafx.scene.control.TableView;\r\nimport javafx.scene.control.TextField;\r\nimport javafx.scene.control.cell.PropertyValueFactory;\r\nimport javafx.scene.input.MouseEvent;\r\nimport model.Utilisateur;\r\nimport repository.UtilisateurRepository;\r\nimport session.SessionUtilisateur;\r\n\r\nimport java.io.IOException;\r\nimport java.net.URL;\r\nimport java.util.ArrayList;\r\nimport java.util.ResourceBundle;\r\nimport java.util.stream.Collectors;\r\n\r\npublic class GestionUserController implements Initializable {\r\n    @FXML\r\n    private TableView&lt;Utilisateur&gt; tableauUser;\r\n\r\n    @FXML\r\n    private Button userSupp;\r\n    \r\n    @FXML\r\n    private Button modifierBtn;\r\n    \r\n    @FXML\r\n    private TextField rechercheField;\r\n    \r\n    @FXML\r\n    private Label messageLabel;\r\n    \r\n    @FXML\r\n    private Button tachesBtn;\r\n    \r\n    private ObservableList&lt;Utilisateur&gt; listeUtilisateurs;\r\n    private UtilisateurRepository utilisateurRepository;\r\n\r\n    @Override\r\n    public void initialize(URL location, ResourceBundle resources) {\r\n        utilisateurRepository = new UtilisateurRepository();\r\n        \r\n        // Configuration des colonnes du tableau\r\n        String[][] colonnes = {\r\n                {\&quot;Id Utilisateur\&quot;, \&quot;idUtilisateur\&quot;},\r\n                {\&quot;Nom\&quot;, \&quot;nom\&quot;},\r\n                {\&quot;Prénom\&quot;, \&quot;prenom\&quot;},\r\n                {\&quot;Email\&quot;, \&quot;email\&quot;},\r\n                {\&quot;Rôle\&quot;, \&quot;role\&quot;},\r\n        };\r\n\r\n        for (int i = 0; i &lt; colonnes.length; i++) {\r\n            TableColumn&lt;Utilisateur, String&gt; maCol = new TableColumn&lt;&gt;(colonnes[i][0]);\r\n            maCol.setCellValueFactory(\r\n                    new PropertyValueFactory&lt;Utilisateur, String&gt;(colonnes[i][1]));\r\n            maCol.setPrefWidth(150); // Définir une largeur pour chaque colonne\r\n            tableauUser.getColumns().add(maCol);\r\n        }\r\n        \r\n        // Chargement des utilisateurs\r\n        chargerUtilisateurs();\r\n        \r\n        // Effacer le message après 3 secondes\r\n        messageLabel.textProperty().addListener((observable, oldValue, newValue) -&gt; {\r\n            if (newValue != null &amp;&amp; !newValue.isEmpty()) {\r\n                new Thread(() -&gt; {\r\n                    try {\r\n                        Thread.sleep(3000);\r\n                        javafx.application.Platform.runLater(() -&gt; messageLabel.setText(\&quot;\&quot;));\r\n                    } catch (InterruptedException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                }).start();\r\n            }\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * Charge tous les utilisateurs depuis la base de données\r\n     */\r\n    private void chargerUtilisateurs() {\r\n        ArrayList&lt;Utilisateur&gt; utilisateurs = utilisateurRepository.getAllUtilisateurs();\r\n        listeUtilisateurs = FXCollections.observableArrayList(utilisateurs);\r\n        tableauUser.setItems(listeUtilisateurs);\r\n    }\r\n    \r\n    @FXML\r\n    public void cliqueTableau(MouseEvent mouseEvent) throws IOException {\r\n        Utilisateur selection = tableauUser.getSelectionModel().getSelectedItem();\r\n        if (selection != null) {\r\n            userSupp.setDisable(false);\r\n            modifierBtn.setDisable(false);\r\n            tachesBtn.setDisable(false);\r\n        } else {\r\n            userSupp.setDisable(true);\r\n            modifierBtn.setDisable(true);\r\n            tachesBtn.setDisable(true);\r\n        }\r\n        \r\n        // Double-clic pour modifier un utilisateur\r\n        if (mouseEvent.getClickCount() == 2) {\r\n            if (selection != null) {\r\n                modifierUtilisateur();\r\n            }\r\n        }\r\n    }\r\n\r\n    @FXML\r\n    public void supprimer(ActionEvent actionEvent) {\r\n        Utilisateur utilisateurSelectionne = tableauUser.getSelectionModel().getSelectedItem();\r\n\r\n        if (utilisateurSelectionne != null) {\r\n            boolean supprime = utilisateurRepository.supprimerUtilisateurParEmail(utilisateurSelectionne.getEmail());\r\n            \r\n            if (supprime) {\r\n                tableauUser.getItems().remove(utilisateurSelectionne);\r\n                messageLabel.setText(\&quot;Utilisateur supprimé avec succès !\&quot;);\r\n                messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);\r\n            } else {\r\n                messageLabel.setText(\&quot;Erreur lors de la suppression de l'utilisateur.\&quot;);\r\n                messageLabel.setTextFill(javafx.scene.paint.Color.RED);\r\n            }\r\n            \r\n            // Réinitialiser les boutons\r\n            userSupp.setDisable(true);\r\n            modifierBtn.setDisable(true);\r\n            tachesBtn.setDisable(true);\r\n        }\r\n    }\r\n    \r\n    @FXML\r\n    public void gererTaches() {\r\n        Utilisateur utilisateurSelectionne = tableauUser.getSelectionModel().getSelectedItem();\r\n        \r\n        if (utilisateurSelectionne != null) {\r\n            try {\r\n                StartApplication.changeScene(\&quot;user/TodoList\&quot;);\r\n                TodoListController controller = (TodoListController)\r\n                        StartApplication.getControllerFromStage();\r\n                controller.initData(utilisateurSelectionne);\r\n                messageLabel.setText(\&quot;Chargement des tâches de l'utilisateur...\&quot;);\r\n                messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);\r\n            } catch (IOException e) {\r\n                messageLabel.setText(\&quot;Erreur lors de l'ouverture de la page des tâches.\&quot;);\r\n                messageLabel.setTextFill(javafx.scene.paint.Color.RED);\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n    }\r\n    \r\n    @FXML\r\n    public void modifierUtilisateur() {\r\n        Utilisateur utilisateurSelectionne = tableauUser.getSelectionModel().getSelectedItem();\r\n        \r\n        if (utilisateurSelectionne != null) {\r\n            try {\r\n                StartApplication.changeScene(\&quot;user/modificationUser\&quot;);\r\n                ModificationUserController controller = (ModificationUserController)\r\n                        StartApplication.getControllerFromStage();\r\n                controller.initData(utilisateurSelectionne);\r\n            } catch (IOException e) {\r\n                messageLabel.setText(\&quot;Erreur lors de l'ouverture de la page de modification.\&quot;);\r\n                messageLabel.setTextFill(javafx.scene.paint.Color.RED);\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n    }\r\n    \r\n    @FXML\r\n    public void ajouterUtilisateur() {\r\n        try {\r\n            StartApplication.changeScene(\&quot;accueil/Inscription\&quot;);\r\n        } catch (IOException e) {\r\n            messageLabel.setText(\&quot;Erreur lors de l'ouverture de la page d'inscription.\&quot;);\r\n            messageLabel.setTextFill(javafx.scene.paint.Color.RED);\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n    \r\n    @FXML\r\n    public void rechercher() {\r\n        String recherche = rechercheField.getText().toLowerCase().trim();\r\n        \r\n        if (recherche.isEmpty()) {\r\n            tableauUser.setItems(listeUtilisateurs);\r\n            return;\r\n        }\r\n        \r\n        // Filtrer les utilisateurs selon le texte de recherche\r\n        ObservableList&lt;Utilisateur&gt; utilisateursFiltres = listeUtilisateurs.stream()\r\n                .filter(u -&gt; u.getNom().toLowerCase().contains(recherche) ||\r\n                        u.getPrenom().toLowerCase().contains(recherche) ||\r\n                        u.getEmail().toLowerCase().contains(recherche) ||\r\n                        (u.getRole() != null &amp;&amp; u.getRole().toLowerCase().contains(recherche)))\r\n                .collect(Collectors.toCollection(FXCollections::observableArrayList));\r\n        \r\n        tableauUser.setItems(utilisateursFiltres);\r\n        \r\n        if (utilisateursFiltres.isEmpty()) {\r\n            messageLabel.setText(\&quot;Aucun utilisateur trouvé pour cette recherche.\&quot;);\r\n            messageLabel.setTextFill(javafx.scene.paint.Color.ORANGE);\r\n        } else {\r\n            messageLabel.setText(utilisateursFiltres.size() + \&quot; utilisateur(s) trouvé(s).\&quot;);\r\n            messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);\r\n        }\r\n    }\r\n    \r\n    @FXML\r\n    public void resetRecherche() {\r\n        rechercheField.clear();\r\n        tableauUser.setItems(listeUtilisateurs);\r\n        messageLabel.setText(\&quot;Recherche réinitialisée.\&quot;);\r\n        messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);\r\n    }\r\n\r\n    @FXML\r\n    public void retour(ActionEvent actionEvent) throws IOException {\r\n        StartApplication.changeScene(\&quot;accueil/Accueil\&quot;);\r\n    }\r\n}\r\n&quot;},&quot;codebaseEnabled&quot;:true},&quot;createdAt&quot;:1746740828160,&quot;isInternal&quot;:false,&quot;rawContent&quot;:{&quot;type&quot;:&quot;doc&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;peux tu modifier pour qu'on voit le nom de la liste est pas le numero de l'objet dans la colone de gauche&quot;}]}]}},{&quot;id&quot;:&quot;009a12cc-a161-4ae5-8b6d-c41c421ed99e&quot;,&quot;role&quot;:&quot;assistant&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Je vais modifier le code pour afficher correctement le nom de la liste dans la colonne de gauche au lieu du numéro de l'objet. Pour cela, nous devons personnaliser l'affichage des éléments dans le ListView.&quot;},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_016rX1fXETNkicVjkJeSYNQX&quot;,&quot;statusText&quot;:&quot;Change generated&quot;,&quot;status&quot;:&quot;SUCCESS&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main/java/appli/user/TodoListController.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\appli\\user\\TodoListController.java&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;codeHunk&quot;,&quot;lineBasedDiff&quot;:&quot;--- src/main/java/appli/user/TodoListController.java\n+++ src/main/java/appli/user/TodoListController.java\n@@ -147,6 +147,21 @@\n     private void chargerListes() {\n         ArrayList&lt;Liste&gt; listesUtilisateur = listeRepository.getListesParUtilisateur(utilisateur.getIdUtilisateur());\n         listes = FXCollections.observableArrayList(listesUtilisateur);\n+        \n+        // Personnaliser l'affichage des listes pour montrer le nom au lieu de l'objet\n+        listesListView.setCellFactory(param -&gt; new ListCell&lt;Liste&gt;() {\n+            @Override\n+            protected void updateItem(Liste item, boolean empty) {\n+                super.updateItem(item, empty);\n+                \n+                if (empty || item == null) {\n+                    setText(null);\n+                } else {\n+                    setText(item.getNom());\n+                }\n+            }\n+        });\n+        \n         listesListView.setItems(listes);\n         \n         if (listes.isEmpty()) {&quot;,&quot;refToolCallId&quot;:&quot;toolu_016rX1fXETNkicVjkJeSYNQX&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Maintenant, vérifions également si la classe Liste a une méthode toString() qui pourrait interférer avec notre affichage personnalisé. Si elle existe, nous devons nous assurer qu'elle retourne le nom de la liste.&quot;},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_01E1jxQmarn9S1xE6DZ92492&quot;,&quot;statusText&quot;:&quot;Viewed file&quot;,&quot;status&quot;:&quot;SUCCESS&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main/java/model/Liste.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\model\\Liste.java&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Ajoutons une méthode toString() à la classe Liste pour garantir un affichage correct partout où l'objet Liste est utilisé :&quot;},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_01VFPVCzWfVmaQ1PqUULUSx1&quot;,&quot;statusText&quot;:&quot;Change generated&quot;,&quot;status&quot;:&quot;SUCCESS&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main/java/model/Liste.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\model\\Liste.java&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;codeHunk&quot;,&quot;lineBasedDiff&quot;:&quot;--- src/main/java/model/Liste.java\n+++ src/main/java/model/Liste.java\n@@ -1,12 +1,22 @@\n package model;\n \n public class Liste {\n+\n+    private int idListe;\n+    private String nom;\n \n     public Liste(int idListe) {\n         this.idListe = idListe;\n     }\n \n-    private int idListe;\n+    public Liste(String nom) {\n+        this.nom = nom;\n+    }\n+\n+    public Liste(int idListe, String nom) {\n+        this.idListe = idListe;\n+        this.nom = nom;\n+    }\n \n     public int getIdListe() {\n         return idListe;\n@@ -24,11 +34,9 @@\n         this.nom = nom;\n     }\n \n-    public Liste(String nom) {\n-        this.nom = nom;\n+    @Override\n+    public String toString() {\n+        return nom;\n     }\n-\n-    private String nom;\n }\n \n-&quot;,&quot;refToolCallId&quot;:&quot;toolu_01VFPVCzWfVmaQ1PqUULUSx1&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Parfait ! J'ai apporté deux modifications importantes pour garantir que les noms des listes s'affichent correctement dans l'interface utilisateur :\n\n1. **Personnalisation de l'affichage dans le ListView** :\n   - J'ai ajouté un `setCellFactory` au `listesListView` qui crée des cellules personnalisées\n   - Chaque cellule affiche maintenant le nom de la liste au lieu de l'objet Liste lui-même\n\n2. **Amélioration de la classe Liste** :\n   - J'ai réorganisé les attributs et constructeurs pour plus de clarté\n   - J'ai ajouté un constructeur qui prend à la fois l'ID et le nom\n   - J'ai implémenté la méthode `toString()` qui retourne le nom de la liste\n\nCes modifications garantissent que :\n- Le ListView affichera toujours le nom de la liste au lieu du numéro d'objet\n- Tout autre composant qui utilise l'objet Liste directement (comme les ComboBox) affichera également le nom correctement\n- Le code est plus propre et mieux organisé\n\nMaintenant, lorsque vous exécuterez l'application et accéderez à la gestion des tâches d'un utilisateur, vous verrez les noms des listes clairement affichés dans la colonne de gauche, ce qui rend l'interface beaucoup plus conviviale et intuitive.&quot;},{&quot;type&quot;:&quot;codePatch&quot;,&quot;diffs&quot;:[{&quot;path&quot;:&quot;src/main/java/appli/user/TodoListController.java&quot;,&quot;patch&quot;:&quot;@@ -4364,16 +4364,538 @@\n ateur);%0A\n+        %0A        // Personnaliser l'affichage des listes pour montrer le nom au lieu de l'objet%0A        listesListView.setCellFactory(param -%3E new ListCell%3CListe%3E() %7B%0A            @Override%0A            protected void updateItem(Liste item, boolean empty) %7B%0A                super.updateItem(item, empty);%0A                %0A                if (empty %7C%7C item == null) %7B%0A                    setText(null);%0A                %7D else %7B%0A                    setText(item.getNom());%0A                %7D%0A            %7D%0A        %7D);%0A        %0A\n         \n&quot;,&quot;isNew&quot;:false,&quot;isApplied&quot;:true},{&quot;path&quot;:&quot;src/main/java/model/Liste.java&quot;,&quot;patch&quot;:&quot;@@ -31,24 +31,77 @@\n  Liste %7B%0D%0A%0D%0A\n+    private int idListe;%0D%0A    private String nom;%0D%0A%0D%0A\n     public L\n@@ -168,35 +168,185 @@\n %0A%0D%0A    p\n-rivate int idListe;\n+ublic Liste(String nom) %7B%0D%0A        this.nom = nom;%0D%0A    %7D%0D%0A%0D%0A    public Liste(int idListe, String nom) %7B%0D%0A        this.idListe = idListe;%0D%0A        this.nom = nom;%0D%0A    %7D\n %0D%0A%0D%0A    \n@@ -615,32 +615,47 @@\n  nom;%0D%0A    %7D%0D%0A%0D%0A\n+    @Override%0D%0A\n     public Liste\n@@ -649,32 +649,32 @@\n  public \n-Liste(\n String \n-nom\n+toString(\n ) %7B%0D%0A   \n@@ -674,34 +674,30 @@\n  %7B%0D%0A        \n-this.nom =\n+return\n  nom;%0D%0A    %7D\n@@ -702,38 +702,9 @@\n  %7D%0D%0A\n-%0D%0A    private String nom;%0D%0A%7D%0D%0A\n+%7D\n %0D%0A%0D%0A\n&quot;,&quot;isNew&quot;:false,&quot;isApplied&quot;:true}]}],&quot;context&quot;:{&quot;author&quot;:&quot;Coding Agent&quot;,&quot;operationId&quot;:&quot;2075588b-7478-41df-985e-01432f6e529c&quot;},&quot;createdAt&quot;:1746740829591,&quot;isInternal&quot;:false},{&quot;id&quot;:&quot;677c827a-e5d1-48a4-9be3-fa7ffb08d952&quot;,&quot;role&quot;:&quot;user&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;sur la page avec les differents utilisateurs peux tu retirer la barre de recherche et pareil sur la page avec les taches&quot;}],&quot;context&quot;:{&quot;currentFile&quot;:{&quot;path&quot;:&quot;src\\main\\java\\appli\\accueil\\GestionUserController.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\appli\\accueil\\GestionUserController.java&quot;,&quot;sources&quot;:[&quot;opened_tab&quot;],&quot;content&quot;:&quot;package appli.accueil;\r\nimport appli.StartApplication;\r\nimport appli.user.ModificationUserController;\r\nimport appli.user.TodoListController;\r\nimport javafx.collections.FXCollections;\r\nimport javafx.collections.ObservableList;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.Initializable;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.control.TableColumn;\r\nimport javafx.scene.control.TableView;\r\nimport javafx.scene.control.TextField;\r\nimport javafx.scene.control.cell.PropertyValueFactory;\r\nimport javafx.scene.input.MouseEvent;\r\nimport model.Utilisateur;\r\nimport repository.UtilisateurRepository;\r\nimport session.SessionUtilisateur;\r\n\r\nimport java.io.IOException;\r\nimport java.net.URL;\r\nimport java.util.ArrayList;\r\nimport java.util.ResourceBundle;\r\nimport java.util.stream.Collectors;\r\n\r\npublic class GestionUserController implements Initializable {\r\n    @FXML\r\n    private TableView&lt;Utilisateur&gt; tableauUser;\r\n\r\n    @FXML\r\n    private Button userSupp;\r\n    \r\n    @FXML\r\n    private Button modifierBtn;\r\n    \r\n    @FXML\r\n    private TextField rechercheField;\r\n    \r\n    @FXML\r\n    private Label messageLabel;\r\n    \r\n    @FXML\r\n    private Button tachesBtn;\r\n    \r\n    private ObservableList&lt;Utilisateur&gt; listeUtilisateurs;\r\n    private UtilisateurRepository utilisateurRepository;\r\n\r\n    @Override\r\n    public void initialize(URL location, ResourceBundle resources) {\r\n        utilisateurRepository = new UtilisateurRepository();\r\n        \r\n        // Configuration des colonnes du tableau\r\n        String[][] colonnes = {\r\n                {\&quot;Id Utilisateur\&quot;, \&quot;idUtilisateur\&quot;},\r\n                {\&quot;Nom\&quot;, \&quot;nom\&quot;},\r\n                {\&quot;Prénom\&quot;, \&quot;prenom\&quot;},\r\n                {\&quot;Email\&quot;, \&quot;email\&quot;},\r\n                {\&quot;Rôle\&quot;, \&quot;role\&quot;},\r\n        };\r\n\r\n        for (int i = 0; i &lt; colonnes.length; i++) {\r\n            TableColumn&lt;Utilisateur, String&gt; maCol = new TableColumn&lt;&gt;(colonnes[i][0]);\r\n            maCol.setCellValueFactory(\r\n                    new PropertyValueFactory&lt;Utilisateur, String&gt;(colonnes[i][1]));\r\n            maCol.setPrefWidth(150); // Définir une largeur pour chaque colonne\r\n            tableauUser.getColumns().add(maCol);\r\n        }\r\n        \r\n        // Chargement des utilisateurs\r\n        chargerUtilisateurs();\r\n        \r\n        // Effacer le message après 3 secondes\r\n        messageLabel.textProperty().addListener((observable, oldValue, newValue) -&gt; {\r\n            if (newValue != null &amp;&amp; !newValue.isEmpty()) {\r\n                new Thread(() -&gt; {\r\n                    try {\r\n                        Thread.sleep(3000);\r\n                        javafx.application.Platform.runLater(() -&gt; messageLabel.setText(\&quot;\&quot;));\r\n                    } catch (InterruptedException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                }).start();\r\n            }\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * Charge tous les utilisateurs depuis la base de données\r\n     */\r\n    private void chargerUtilisateurs() {\r\n        ArrayList&lt;Utilisateur&gt; utilisateurs = utilisateurRepository.getAllUtilisateurs();\r\n        listeUtilisateurs = FXCollections.observableArrayList(utilisateurs);\r\n        tableauUser.setItems(listeUtilisateurs);\r\n    }\r\n    \r\n    @FXML\r\n    public void cliqueTableau(MouseEvent mouseEvent) throws IOException {\r\n        Utilisateur selection = tableauUser.getSelectionModel().getSelectedItem();\r\n        if (selection != null) {\r\n            userSupp.setDisable(false);\r\n            modifierBtn.setDisable(false);\r\n            tachesBtn.setDisable(false);\r\n        } else {\r\n            userSupp.setDisable(true);\r\n            modifierBtn.setDisable(true);\r\n            tachesBtn.setDisable(true);\r\n        }\r\n        \r\n        // Double-clic pour modifier un utilisateur\r\n        if (mouseEvent.getClickCount() == 2) {\r\n            if (selection != null) {\r\n                modifierUtilisateur();\r\n            }\r\n        }\r\n    }\r\n\r\n    @FXML\r\n    public void supprimer(ActionEvent actionEvent) {\r\n        Utilisateur utilisateurSelectionne = tableauUser.getSelectionModel().getSelectedItem();\r\n\r\n        if (utilisateurSelectionne != null) {\r\n            boolean supprime = utilisateurRepository.supprimerUtilisateurParEmail(utilisateurSelectionne.getEmail());\r\n            \r\n            if (supprime) {\r\n                tableauUser.getItems().remove(utilisateurSelectionne);\r\n                messageLabel.setText(\&quot;Utilisateur supprimé avec succès !\&quot;);\r\n                messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);\r\n            } else {\r\n                messageLabel.setText(\&quot;Erreur lors de la suppression de l'utilisateur.\&quot;);\r\n                messageLabel.setTextFill(javafx.scene.paint.Color.RED);\r\n            }\r\n            \r\n            // Réinitialiser les boutons\r\n            userSupp.setDisable(true);\r\n            modifierBtn.setDisable(true);\r\n            tachesBtn.setDisable(true);\r\n        }\r\n    }\r\n    \r\n    @FXML\r\n    public void gererTaches() {\r\n        Utilisateur utilisateurSelectionne = tableauUser.getSelectionModel().getSelectedItem();\r\n        \r\n        if (utilisateurSelectionne != null) {\r\n            try {\r\n                StartApplication.changeScene(\&quot;user/TodoList\&quot;);\r\n                TodoListController controller = (TodoListController)\r\n                        StartApplication.getControllerFromStage();\r\n                controller.initData(utilisateurSelectionne);\r\n                messageLabel.setText(\&quot;Chargement des tâches de l'utilisateur...\&quot;);\r\n                messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);\r\n            } catch (IOException e) {\r\n                messageLabel.setText(\&quot;Erreur lors de l'ouverture de la page des tâches.\&quot;);\r\n                messageLabel.setTextFill(javafx.scene.paint.Color.RED);\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n    }\r\n    \r\n    @FXML\r\n    public void modifierUtilisateur() {\r\n        Utilisateur utilisateurSelectionne = tableauUser.getSelectionModel().getSelectedItem();\r\n        \r\n        if (utilisateurSelectionne != null) {\r\n            try {\r\n                StartApplication.changeScene(\&quot;user/modificationUser\&quot;);\r\n                ModificationUserController controller = (ModificationUserController)\r\n                        StartApplication.getControllerFromStage();\r\n                controller.initData(utilisateurSelectionne);\r\n            } catch (IOException e) {\r\n                messageLabel.setText(\&quot;Erreur lors de l'ouverture de la page de modification.\&quot;);\r\n                messageLabel.setTextFill(javafx.scene.paint.Color.RED);\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n    }\r\n    \r\n    @FXML\r\n    public void ajouterUtilisateur() {\r\n        try {\r\n            StartApplication.changeScene(\&quot;accueil/Inscription\&quot;);\r\n        } catch (IOException e) {\r\n            messageLabel.setText(\&quot;Erreur lors de l'ouverture de la page d'inscription.\&quot;);\r\n            messageLabel.setTextFill(javafx.scene.paint.Color.RED);\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n    \r\n    @FXML\r\n    public void rechercher() {\r\n        String recherche = rechercheField.getText().toLowerCase().trim();\r\n        \r\n        if (recherche.isEmpty()) {\r\n            tableauUser.setItems(listeUtilisateurs);\r\n            return;\r\n        }\r\n        \r\n        // Filtrer les utilisateurs selon le texte de recherche\r\n        ObservableList&lt;Utilisateur&gt; utilisateursFiltres = listeUtilisateurs.stream()\r\n                .filter(u -&gt; u.getNom().toLowerCase().contains(recherche) ||\r\n                        u.getPrenom().toLowerCase().contains(recherche) ||\r\n                        u.getEmail().toLowerCase().contains(recherche) ||\r\n                        (u.getRole() != null &amp;&amp; u.getRole().toLowerCase().contains(recherche)))\r\n                .collect(Collectors.toCollection(FXCollections::observableArrayList));\r\n        \r\n        tableauUser.setItems(utilisateursFiltres);\r\n        \r\n        if (utilisateursFiltres.isEmpty()) {\r\n            messageLabel.setText(\&quot;Aucun utilisateur trouvé pour cette recherche.\&quot;);\r\n            messageLabel.setTextFill(javafx.scene.paint.Color.ORANGE);\r\n        } else {\r\n            messageLabel.setText(utilisateursFiltres.size() + \&quot; utilisateur(s) trouvé(s).\&quot;);\r\n            messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);\r\n        }\r\n    }\r\n    \r\n    @FXML\r\n    public void resetRecherche() {\r\n        rechercheField.clear();\r\n        tableauUser.setItems(listeUtilisateurs);\r\n        messageLabel.setText(\&quot;Recherche réinitialisée.\&quot;);\r\n        messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);\r\n    }\r\n\r\n    @FXML\r\n    public void retour(ActionEvent actionEvent) throws IOException {\r\n        StartApplication.changeScene(\&quot;accueil/Accueil\&quot;);\r\n    }\r\n}\r\n&quot;},&quot;codebaseEnabled&quot;:true},&quot;createdAt&quot;:1746741463659,&quot;isInternal&quot;:false,&quot;rawContent&quot;:{&quot;type&quot;:&quot;doc&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;sur la page avec les differents utilisateurs peux tu retirer la barre de recherche et pareil sur la page avec les taches&quot;}]}]}},{&quot;id&quot;:&quot;8b53d3b8-609d-4a3f-937e-22d0886e5d5a&quot;,&quot;role&quot;:&quot;assistant&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Je vais retirer les barres de recherche des deux pages comme demandé. Commençons par la page de gestion des utilisateurs.&quot;},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_01QYK8E6FLyeBphxyH2gVjS7&quot;,&quot;statusText&quot;:&quot;Viewed file&quot;,&quot;status&quot;:&quot;SUCCESS&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main/resources/appli/accueil/GestionUserView.fxml&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\resources\\appli\\accueil\\GestionUserView.fxml&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Maintenant, modifions la page de gestion des utilisateurs pour retirer la barre de recherche :&quot;},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_01UrucXeaqPrRSC1Vjnt8ZxH&quot;,&quot;statusText&quot;:&quot;Change generated&quot;,&quot;status&quot;:&quot;SUCCESS&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main/resources/appli/accueil/GestionUserView.fxml&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\resources\\appli\\accueil\\GestionUserView.fxml&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;codeHunk&quot;,&quot;lineBasedDiff&quot;:&quot;--- src/main/resources/appli/accueil/GestionUserView.fxml\n+++ src/main/resources/appli/accueil/GestionUserView.fxml\n@@ -37,28 +37,7 @@\n                         &lt;Insets bottom=\&quot;5.0\&quot; left=\&quot;10.0\&quot; right=\&quot;10.0\&quot; top=\&quot;10.0\&quot; /&gt;\n                      &lt;/padding&gt;\n                   &lt;/HBox&gt;\n-                  &lt;HBox alignment=\&quot;CENTER\&quot; spacing=\&quot;10.0\&quot;&gt;\n-                     &lt;children&gt;\n-                        &lt;TextField fx:id=\&quot;rechercheField\&quot; prefHeight=\&quot;30.0\&quot; prefWidth=\&quot;300.0\&quot; promptText=\&quot;Rechercher un utilisateur...\&quot;&gt;\n-                           &lt;font&gt;\n-                              &lt;Font size=\&quot;14.0\&quot; /&gt;\n-                           &lt;/font&gt;\n-                        &lt;/TextField&gt;\n-                        &lt;Button fx:id=\&quot;rechercheBtn\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#rechercher\&quot; style=\&quot;-fx-background-color: #3498db;\&quot; text=\&quot;Rechercher\&quot; textFill=\&quot;WHITE\&quot;&gt;\n-                           &lt;font&gt;\n-                              &lt;Font size=\&quot;14.0\&quot; /&gt;\n-                           &lt;/font&gt;\n-                        &lt;/Button&gt;\n-                        &lt;Button fx:id=\&quot;resetBtn\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#resetRecherche\&quot; style=\&quot;-fx-background-color: #7f8c8d;\&quot; text=\&quot;Réinitialiser\&quot; textFill=\&quot;WHITE\&quot;&gt;\n-                           &lt;font&gt;\n-                              &lt;Font size=\&quot;14.0\&quot; /&gt;\n-                           &lt;/font&gt;\n-                        &lt;/Button&gt;\n-                     &lt;/children&gt;\n-                     &lt;padding&gt;\n-                        &lt;Insets bottom=\&quot;10.0\&quot; left=\&quot;10.0\&quot; right=\&quot;10.0\&quot; top=\&quot;5.0\&quot; /&gt;\n-                     &lt;/padding&gt;\n-                  &lt;/HBox&gt;\n+\n                &lt;/children&gt;\n             &lt;/VBox&gt;\n          &lt;/top&gt;&quot;,&quot;refToolCallId&quot;:&quot;toolu_01UrucXeaqPrRSC1Vjnt8ZxH&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Maintenant, vérifions la page des tâches pour retirer la barre de recherche :&quot;},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_0176NRGRFhxQ9xWHohr7Njin&quot;,&quot;statusText&quot;:&quot;Viewed file&quot;,&quot;status&quot;:&quot;SUCCESS&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main/resources/appli/user/TodoListView.fxml&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\resources\\appli\\user\\TodoListView.fxml&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Modifions maintenant la page des tâches pour retirer la barre de recherche :&quot;},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_01VWpv3hBFm4mpxSir3hiDHA&quot;,&quot;statusText&quot;:&quot;Change generated&quot;,&quot;status&quot;:&quot;SUCCESS&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main/resources/appli/user/TodoListView.fxml&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\resources\\appli\\user\\TodoListView.fxml&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;codeHunk&quot;,&quot;lineBasedDiff&quot;:&quot;--- src/main/resources/appli/user/TodoListView.fxml\n+++ src/main/resources/appli/user/TodoListView.fxml\n@@ -115,21 +115,7 @@\n                                           &lt;Font name=\&quot;System Bold\&quot; size=\&quot;16.0\&quot; /&gt;\n                                        &lt;/font&gt;\n                                     &lt;/Label&gt;\n-                                    &lt;HBox alignment=\&quot;CENTER_LEFT\&quot; spacing=\&quot;10.0\&quot;&gt;\n-                                       &lt;children&gt;\n-                                          &lt;TextField fx:id=\&quot;rechercheTacheField\&quot; promptText=\&quot;Rechercher une tâche...\&quot; HBox.hgrow=\&quot;ALWAYS\&quot; /&gt;\n-                                          &lt;Button fx:id=\&quot;rechercheTacheBtn\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#rechercherTache\&quot; style=\&quot;-fx-background-color: #3498db;\&quot; text=\&quot;Rechercher\&quot; textFill=\&quot;WHITE\&quot;&gt;\n-                                             &lt;font&gt;\n-                                                &lt;Font size=\&quot;12.0\&quot; /&gt;\n-                                             &lt;/font&gt;\n-                                          &lt;/Button&gt;\n-                                          &lt;Button fx:id=\&quot;resetRechercheTacheBtn\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#resetRechercheTache\&quot; style=\&quot;-fx-background-color: #7f8c8d;\&quot; text=\&quot;Réinitialiser\&quot; textFill=\&quot;WHITE\&quot;&gt;\n-                                             &lt;font&gt;\n-                                                &lt;Font size=\&quot;12.0\&quot; /&gt;\n-                                             &lt;/font&gt;\n-                                          &lt;/Button&gt;\n-                                       &lt;/children&gt;\n-                                    &lt;/HBox&gt;\n+\n                                  &lt;/children&gt;\n                                  &lt;padding&gt;\n                                     &lt;Insets bottom=\&quot;10.0\&quot; left=\&quot;10.0\&quot; right=\&quot;10.0\&quot; top=\&quot;10.0\&quot; /&gt;&quot;,&quot;refToolCallId&quot;:&quot;toolu_01VWpv3hBFm4mpxSir3hiDHA&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Parfait ! J'ai retiré les barres de recherche des deux pages comme demandé. Cependant, les méthodes de recherche sont toujours présentes dans les contrôleurs. Pour une meilleure cohérence, nous devrions également les retirer ou les désactiver.\n\nCommençons par le contrôleur de gestion des utilisateurs :&quot;},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_014vgBg1qFS6628WToHfLB8M&quot;,&quot;statusText&quot;:&quot;Viewed file&quot;,&quot;status&quot;:&quot;SUCCESS&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main/java/appli/accueil/GestionUserController.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\appli\\accueil\\GestionUserController.java&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Maintenant, vérifions le contrôleur des tâches :&quot;},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_01QBV1vrwxC1LbWw7CSmNRRJ&quot;,&quot;statusText&quot;:&quot;Viewed file&quot;,&quot;status&quot;:&quot;SUCCESS&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main/java/appli/user/TodoListController.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\appli\\user\\TodoListController.java&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_01JVf6PVvVkcMicH79KymVtt&quot;,&quot;statusText&quot;:&quot;Viewed file&quot;,&quot;status&quot;:&quot;SUCCESS&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main/java/appli/user/TodoListController.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\appli\\user\\TodoListController.java&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Nous n'avons pas besoin de supprimer les méthodes de recherche des contrôleurs, car elles ne seront simplement pas appelées puisque les boutons ont été retirés de l'interface. Cela permet de conserver la fonctionnalité au cas où vous souhaiteriez la réactiver ultérieurement.\n\nVérifions également les déclarations des champs dans les contrôleurs pour nous assurer qu'il n'y a pas d'erreurs potentielles :&quot;},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_01A7iA4QG2m8ryKYeRX6begw&quot;,&quot;statusText&quot;:&quot;Viewed file&quot;,&quot;status&quot;:&quot;SUCCESS&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main/java/appli/accueil/GestionUserController.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\appli\\accueil\\GestionUserController.java&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_01QQEYqBtAUNAWENgr944qKg&quot;,&quot;statusText&quot;:&quot;Viewed file&quot;,&quot;status&quot;:&quot;SUCCESS&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main/java/appli/user/TodoListController.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\appli\\user\\TodoListController.java&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Les déclarations des champs sont toujours présentes dans les contrôleurs, mais cela ne posera pas de problème car JavaFX ignore simplement les références aux éléments qui n'existent plus dans le FXML.\n\nVoilà ! J'ai retiré les barres de recherche des deux pages comme demandé. Les interfaces sont maintenant plus épurées et se concentrent sur les fonctionnalités essentielles.\n\nPour résumer les modifications :\n\n1. **Page de gestion des utilisateurs** :\n   - Suppression de la barre de recherche et des boutons associés\n   - Conservation des méthodes de recherche dans le contrôleur pour une éventuelle réutilisation future\n\n2. **Page de gestion des tâches** :\n   - Suppression de la barre de recherche et des boutons associés\n   - Conservation des méthodes de recherche dans le contrôleur pour une éventuelle réutilisation future\n\nCes modifications rendent l'interface plus simple et plus directe, tout en conservant la possibilité de réactiver les fonctionnalités de recherche si nécessaire à l'avenir.&quot;},{&quot;type&quot;:&quot;codePatch&quot;,&quot;diffs&quot;:[{&quot;path&quot;:&quot;src/main/resources/appli/accueil/GestionUserView.fxml&quot;,&quot;patch&quot;:&quot;@@ -1874,1259 +1874,8 @@\n ox%3E%0A\n-                  %3CHBox alignment=%22CENTER%22 spacing=%2210.0%22%3E%0A                     %3Cchildren%3E%0A                        %3CTextField fx:id=%22rechercheField%22 prefHeight=%2230.0%22 prefWidth=%22300.0%22 promptText=%22Rechercher un utilisateur...%22%3E%0A                           %3Cfont%3E%0A                              %3CFont size=%2214.0%22 /%3E%0A                           %3C/font%3E%0A                        %3C/TextField%3E%0A                        %3CButton fx:id=%22rechercheBtn%22 mnemonicParsing=%22false%22 onAction=%22#rechercher%22 style=%22-fx-background-color: #3498db;%22 text=%22Rechercher%22 textFill=%22WHITE%22%3E%0A                           %3Cfont%3E%0A                              %3CFont size=%2214.0%22 /%3E%0A                           %3C/font%3E%0A                        %3C/Button%3E%0A                        %3CButton fx:id=%22resetBtn%22 mnemonicParsing=%22false%22 onAction=%22#resetRecherche%22 style=%22-fx-background-color: #7f8c8d;%22 text=%22R%C3%A9initialiser%22 textFill=%22WHITE%22%3E%0A                           %3Cfont%3E%0A                              %3CFont size=%2214.0%22 /%3E%0A                           %3C/font%3E%0A                        %3C/Button%3E%0A                     %3C/children%3E%0A                     %3Cpadding%3E%0A                        %3CInsets bottom=%2210.0%22 left=%2210.0%22 right=%2210.0%22 top=%225.0%22 /%3E%0A                     %3C/padding%3E%0A                  %3C/HBox%3E\n %0A   \n&quot;,&quot;isNew&quot;:false,&quot;isApplied&quot;:true},{&quot;path&quot;:&quot;src/main/resources/appli/user/TodoListView.fxml&quot;,&quot;patch&quot;:&quot;@@ -6631,1245 +6631,8 @@\n el%3E%0A\n-                                    %3CHBox alignment=%22CENTER_LEFT%22 spacing=%2210.0%22%3E%0A                                       %3Cchildren%3E%0A                                          %3CTextField fx:id=%22rechercheTacheField%22 promptText=%22Rechercher une t%C3%A2che...%22 HBox.hgrow=%22ALWAYS%22 /%3E%0A                                          %3CButton fx:id=%22rechercheTacheBtn%22 mnemonicParsing=%22false%22 onAction=%22#rechercherTache%22 style=%22-fx-background-color: #3498db;%22 text=%22Rechercher%22 textFill=%22WHITE%22%3E%0A                                             %3Cfont%3E%0A                                                %3CFont size=%2212.0%22 /%3E%0A                                             %3C/font%3E%0A                                          %3C/Button%3E%0A                                          %3CButton fx:id=%22resetRechercheTacheBtn%22 mnemonicParsing=%22false%22 onAction=%22#resetRechercheTache%22 style=%22-fx-background-color: #7f8c8d;%22 text=%22R%C3%A9initialiser%22 textFill=%22WHITE%22%3E%0A                                             %3Cfont%3E%0A                                                %3CFont size=%2212.0%22 /%3E%0A                                             %3C/font%3E%0A                                          %3C/Button%3E%0A                                       %3C/children%3E%0A                                    %3C/HBox%3E\n %0A   \n&quot;,&quot;isNew&quot;:false,&quot;isApplied&quot;:true}]}],&quot;context&quot;:{&quot;author&quot;:&quot;Coding Agent&quot;,&quot;operationId&quot;:&quot;504a5d98-2d17-47eb-961c-4dac72e05480&quot;},&quot;createdAt&quot;:1746741464936,&quot;isInternal&quot;:false},{&quot;id&quot;:&quot;4c1571be-b2a8-4ed6-bd45-cb61bcb1e08b&quot;,&quot;role&quot;:&quot;user&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;peux tu mettre tout les bouton en couleur par default&quot;}],&quot;context&quot;:{&quot;currentFile&quot;:{&quot;path&quot;:&quot;src\\main\\java\\appli\\accueil\\GestionUserController.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\appli\\accueil\\GestionUserController.java&quot;,&quot;sources&quot;:[&quot;opened_tab&quot;],&quot;content&quot;:&quot;package appli.accueil;\r\nimport appli.StartApplication;\r\nimport appli.user.ModificationUserController;\r\nimport appli.user.TodoListController;\r\nimport javafx.collections.FXCollections;\r\nimport javafx.collections.ObservableList;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.Initializable;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.control.TableColumn;\r\nimport javafx.scene.control.TableView;\r\nimport javafx.scene.control.TextField;\r\nimport javafx.scene.control.cell.PropertyValueFactory;\r\nimport javafx.scene.input.MouseEvent;\r\nimport model.Utilisateur;\r\nimport repository.UtilisateurRepository;\r\nimport session.SessionUtilisateur;\r\n\r\nimport java.io.IOException;\r\nimport java.net.URL;\r\nimport java.util.ArrayList;\r\nimport java.util.ResourceBundle;\r\nimport java.util.stream.Collectors;\r\n\r\npublic class GestionUserController implements Initializable {\r\n    @FXML\r\n    private TableView&lt;Utilisateur&gt; tableauUser;\r\n\r\n    @FXML\r\n    private Button userSupp;\r\n    \r\n    @FXML\r\n    private Button modifierBtn;\r\n    \r\n    @FXML\r\n    private TextField rechercheField;\r\n    \r\n    @FXML\r\n    private Label messageLabel;\r\n    \r\n    @FXML\r\n    private Button tachesBtn;\r\n    \r\n    private ObservableList&lt;Utilisateur&gt; listeUtilisateurs;\r\n    private UtilisateurRepository utilisateurRepository;\r\n\r\n    @Override\r\n    public void initialize(URL location, ResourceBundle resources) {\r\n        utilisateurRepository = new UtilisateurRepository();\r\n        \r\n        // Configuration des colonnes du tableau\r\n        String[][] colonnes = {\r\n                {\&quot;Id Utilisateur\&quot;, \&quot;idUtilisateur\&quot;},\r\n                {\&quot;Nom\&quot;, \&quot;nom\&quot;},\r\n                {\&quot;Prénom\&quot;, \&quot;prenom\&quot;},\r\n                {\&quot;Email\&quot;, \&quot;email\&quot;},\r\n                {\&quot;Rôle\&quot;, \&quot;role\&quot;},\r\n        };\r\n\r\n        for (int i = 0; i &lt; colonnes.length; i++) {\r\n            TableColumn&lt;Utilisateur, String&gt; maCol = new TableColumn&lt;&gt;(colonnes[i][0]);\r\n            maCol.setCellValueFactory(\r\n                    new PropertyValueFactory&lt;Utilisateur, String&gt;(colonnes[i][1]));\r\n            maCol.setPrefWidth(150); // Définir une largeur pour chaque colonne\r\n            tableauUser.getColumns().add(maCol);\r\n        }\r\n        \r\n        // Chargement des utilisateurs\r\n        chargerUtilisateurs();\r\n        \r\n        // Effacer le message après 3 secondes\r\n        messageLabel.textProperty().addListener((observable, oldValue, newValue) -&gt; {\r\n            if (newValue != null &amp;&amp; !newValue.isEmpty()) {\r\n                new Thread(() -&gt; {\r\n                    try {\r\n                        Thread.sleep(3000);\r\n                        javafx.application.Platform.runLater(() -&gt; messageLabel.setText(\&quot;\&quot;));\r\n                    } catch (InterruptedException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                }).start();\r\n            }\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * Charge tous les utilisateurs depuis la base de données\r\n     */\r\n    private void chargerUtilisateurs() {\r\n        ArrayList&lt;Utilisateur&gt; utilisateurs = utilisateurRepository.getAllUtilisateurs();\r\n        listeUtilisateurs = FXCollections.observableArrayList(utilisateurs);\r\n        tableauUser.setItems(listeUtilisateurs);\r\n    }\r\n    \r\n    @FXML\r\n    public void cliqueTableau(MouseEvent mouseEvent) throws IOException {\r\n        Utilisateur selection = tableauUser.getSelectionModel().getSelectedItem();\r\n        if (selection != null) {\r\n            userSupp.setDisable(false);\r\n            modifierBtn.setDisable(false);\r\n            tachesBtn.setDisable(false);\r\n        } else {\r\n            userSupp.setDisable(true);\r\n            modifierBtn.setDisable(true);\r\n            tachesBtn.setDisable(true);\r\n        }\r\n        \r\n        // Double-clic pour modifier un utilisateur\r\n        if (mouseEvent.getClickCount() == 2) {\r\n            if (selection != null) {\r\n                modifierUtilisateur();\r\n            }\r\n        }\r\n    }\r\n\r\n    @FXML\r\n    public void supprimer(ActionEvent actionEvent) {\r\n        Utilisateur utilisateurSelectionne = tableauUser.getSelectionModel().getSelectedItem();\r\n\r\n        if (utilisateurSelectionne != null) {\r\n            boolean supprime = utilisateurRepository.supprimerUtilisateurParEmail(utilisateurSelectionne.getEmail());\r\n            \r\n            if (supprime) {\r\n                tableauUser.getItems().remove(utilisateurSelectionne);\r\n                messageLabel.setText(\&quot;Utilisateur supprimé avec succès !\&quot;);\r\n                messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);\r\n            } else {\r\n                messageLabel.setText(\&quot;Erreur lors de la suppression de l'utilisateur.\&quot;);\r\n                messageLabel.setTextFill(javafx.scene.paint.Color.RED);\r\n            }\r\n            \r\n            // Réinitialiser les boutons\r\n            userSupp.setDisable(true);\r\n            modifierBtn.setDisable(true);\r\n            tachesBtn.setDisable(true);\r\n        }\r\n    }\r\n    \r\n    @FXML\r\n    public void gererTaches() {\r\n        Utilisateur utilisateurSelectionne = tableauUser.getSelectionModel().getSelectedItem();\r\n        \r\n        if (utilisateurSelectionne != null) {\r\n            try {\r\n                StartApplication.changeScene(\&quot;user/TodoList\&quot;);\r\n                TodoListController controller = (TodoListController)\r\n                        StartApplication.getControllerFromStage();\r\n                controller.initData(utilisateurSelectionne);\r\n                messageLabel.setText(\&quot;Chargement des tâches de l'utilisateur...\&quot;);\r\n                messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);\r\n            } catch (IOException e) {\r\n                messageLabel.setText(\&quot;Erreur lors de l'ouverture de la page des tâches.\&quot;);\r\n                messageLabel.setTextFill(javafx.scene.paint.Color.RED);\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n    }\r\n    \r\n    @FXML\r\n    public void modifierUtilisateur() {\r\n        Utilisateur utilisateurSelectionne = tableauUser.getSelectionModel().getSelectedItem();\r\n        \r\n        if (utilisateurSelectionne != null) {\r\n            try {\r\n                StartApplication.changeScene(\&quot;user/modificationUser\&quot;);\r\n                ModificationUserController controller = (ModificationUserController)\r\n                        StartApplication.getControllerFromStage();\r\n                controller.initData(utilisateurSelectionne);\r\n            } catch (IOException e) {\r\n                messageLabel.setText(\&quot;Erreur lors de l'ouverture de la page de modification.\&quot;);\r\n                messageLabel.setTextFill(javafx.scene.paint.Color.RED);\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n    }\r\n    \r\n    @FXML\r\n    public void ajouterUtilisateur() {\r\n        try {\r\n            StartApplication.changeScene(\&quot;accueil/Inscription\&quot;);\r\n        } catch (IOException e) {\r\n            messageLabel.setText(\&quot;Erreur lors de l'ouverture de la page d'inscription.\&quot;);\r\n            messageLabel.setTextFill(javafx.scene.paint.Color.RED);\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n    \r\n    @FXML\r\n    public void rechercher() {\r\n        String recherche = rechercheField.getText().toLowerCase().trim();\r\n        \r\n        if (recherche.isEmpty()) {\r\n            tableauUser.setItems(listeUtilisateurs);\r\n            return;\r\n        }\r\n        \r\n        // Filtrer les utilisateurs selon le texte de recherche\r\n        ObservableList&lt;Utilisateur&gt; utilisateursFiltres = listeUtilisateurs.stream()\r\n                .filter(u -&gt; u.getNom().toLowerCase().contains(recherche) ||\r\n                        u.getPrenom().toLowerCase().contains(recherche) ||\r\n                        u.getEmail().toLowerCase().contains(recherche) ||\r\n                        (u.getRole() != null &amp;&amp; u.getRole().toLowerCase().contains(recherche)))\r\n                .collect(Collectors.toCollection(FXCollections::observableArrayList));\r\n        \r\n        tableauUser.setItems(utilisateursFiltres);\r\n        \r\n        if (utilisateursFiltres.isEmpty()) {\r\n            messageLabel.setText(\&quot;Aucun utilisateur trouvé pour cette recherche.\&quot;);\r\n            messageLabel.setTextFill(javafx.scene.paint.Color.ORANGE);\r\n        } else {\r\n            messageLabel.setText(utilisateursFiltres.size() + \&quot; utilisateur(s) trouvé(s).\&quot;);\r\n            messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);\r\n        }\r\n    }\r\n    \r\n    @FXML\r\n    public void resetRecherche() {\r\n        rechercheField.clear();\r\n        tableauUser.setItems(listeUtilisateurs);\r\n        messageLabel.setText(\&quot;Recherche réinitialisée.\&quot;);\r\n        messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);\r\n    }\r\n\r\n    @FXML\r\n    public void retour(ActionEvent actionEvent) throws IOException {\r\n        StartApplication.changeScene(\&quot;accueil/Accueil\&quot;);\r\n    }\r\n}\r\n&quot;},&quot;codebaseEnabled&quot;:true},&quot;createdAt&quot;:1746741633424,&quot;isInternal&quot;:false,&quot;rawContent&quot;:{&quot;type&quot;:&quot;doc&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;peux tu mettre tout les bouton en couleur par default&quot;}]}]}},{&quot;id&quot;:&quot;26dde1b8-c6dd-4000-b3e2-7cba8f621262&quot;,&quot;role&quot;:&quot;assistant&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Je vais modifier les boutons pour utiliser la couleur par défaut de JavaFX au lieu des couleurs personnalisées. Commençons par la page de gestion des utilisateurs.&quot;},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_016pSbAUB4NPsH4Cux8syUhu&quot;,&quot;statusText&quot;:&quot;Change generated&quot;,&quot;status&quot;:&quot;SUCCESS&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main/resources/appli/accueil/GestionUserView.fxml&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\resources\\appli\\accueil\\GestionUserView.fxml&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;codeHunk&quot;,&quot;lineBasedDiff&quot;:&quot;--- src/main/resources/appli/accueil/GestionUserView.fxml\n+++ src/main/resources/appli/accueil/GestionUserView.fxml\n@@ -19,7 +19,7 @@\n                &lt;children&gt;\n                   &lt;HBox alignment=\&quot;CENTER_LEFT\&quot; spacing=\&quot;10.0\&quot;&gt;\n                      &lt;children&gt;\n-                        &lt;Button fx:id=\&quot;retourBtn\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#retour\&quot; style=\&quot;-fx-background-color: #3498db;\&quot; text=\&quot;Retour\&quot; textFill=\&quot;WHITE\&quot;&gt;\n+                        &lt;Button fx:id=\&quot;retourBtn\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#retour\&quot; text=\&quot;Retour\&quot;&gt;\n                            &lt;font&gt;\n                               &lt;Font name=\&quot;System Bold\&quot; size=\&quot;12.0\&quot; /&gt;\n                            &lt;/font&gt;&quot;,&quot;refToolCallId&quot;:&quot;toolu_016pSbAUB4NPsH4Cux8syUhu&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Maintenant, modifions les boutons du bas de la page de gestion des utilisateurs :&quot;},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_01KAbhAmvX15nM7gWywyMabk&quot;,&quot;statusText&quot;:&quot;Change generated&quot;,&quot;status&quot;:&quot;SUCCESS&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main/resources/appli/accueil/GestionUserView.fxml&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\resources\\appli\\accueil\\GestionUserView.fxml&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;codeHunk&quot;,&quot;lineBasedDiff&quot;:&quot;--- src/main/resources/appli/accueil/GestionUserView.fxml\n+++ src/main/resources/appli/accueil/GestionUserView.fxml\n@@ -53,22 +53,22 @@\n                &lt;children&gt;\n                   &lt;HBox alignment=\&quot;CENTER\&quot; spacing=\&quot;20.0\&quot;&gt;\n                      &lt;children&gt;\n-                        &lt;Button fx:id=\&quot;ajouterBtn\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#ajouterUtilisateur\&quot; style=\&quot;-fx-background-color: #2ecc71;\&quot; text=\&quot;Ajouter\&quot; textFill=\&quot;WHITE\&quot;&gt;\n+                        &lt;Button fx:id=\&quot;ajouterBtn\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#ajouterUtilisateur\&quot; text=\&quot;Ajouter\&quot;&gt;\n                            &lt;font&gt;\n                               &lt;Font name=\&quot;System Bold\&quot; size=\&quot;14.0\&quot; /&gt;\n                            &lt;/font&gt;\n                         &lt;/Button&gt;\n-                        &lt;Button fx:id=\&quot;modifierBtn\&quot; disable=\&quot;true\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#modifierUtilisateur\&quot; style=\&quot;-fx-background-color: #f39c12;\&quot; text=\&quot;Modifier\&quot; textFill=\&quot;WHITE\&quot;&gt;\n+                        &lt;Button fx:id=\&quot;modifierBtn\&quot; disable=\&quot;true\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#modifierUtilisateur\&quot; text=\&quot;Modifier\&quot;&gt;\n                            &lt;font&gt;\n                               &lt;Font name=\&quot;System Bold\&quot; size=\&quot;14.0\&quot; /&gt;\n                            &lt;/font&gt;\n                         &lt;/Button&gt;\n-                        &lt;Button fx:id=\&quot;todoListBtn\&quot; disable=\&quot;true\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#gererTodoList\&quot; style=\&quot;-fx-background-color: #9b59b6;\&quot; text=\&quot;Todo List\&quot; textFill=\&quot;WHITE\&quot;&gt;\n+                        &lt;Button fx:id=\&quot;todoListBtn\&quot; disable=\&quot;true\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#gererTodoList\&quot; text=\&quot;Todo List\&quot;&gt;\n                            &lt;font&gt;\n                               &lt;Font name=\&quot;System Bold\&quot; size=\&quot;14.0\&quot; /&gt;\n                            &lt;/font&gt;\n                         &lt;/Button&gt;\n-                        &lt;Button fx:id=\&quot;userSupp\&quot; disable=\&quot;true\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#supprimer\&quot; style=\&quot;-fx-background-color: #e74c3c;\&quot; text=\&quot;Supprimer\&quot; textFill=\&quot;WHITE\&quot;&gt;\n+                        &lt;Button fx:id=\&quot;userSupp\&quot; disable=\&quot;true\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#supprimer\&quot; text=\&quot;Supprimer\&quot;&gt;\n                            &lt;font&gt;\n                               &lt;Font name=\&quot;System Bold\&quot; size=\&quot;14.0\&quot; /&gt;\n                            &lt;/font&gt;&quot;,&quot;refToolCallId&quot;:&quot;toolu_01KAbhAmvX15nM7gWywyMabk&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Maintenant, passons à la page des tâches. Commençons par le bouton de retour :&quot;},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_0139ay4BEM3RzoHUEZcssTfq&quot;,&quot;statusText&quot;:&quot;Change generated&quot;,&quot;status&quot;:&quot;SUCCESS&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main/resources/appli/user/TodoListView.fxml&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\resources\\appli\\user\\TodoListView.fxml&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;codeHunk&quot;,&quot;lineBasedDiff&quot;:&quot;--- src/main/resources/appli/user/TodoListView.fxml\n+++ src/main/resources/appli/user/TodoListView.fxml\n@@ -22,7 +22,7 @@\n                &lt;children&gt;\n                   &lt;HBox alignment=\&quot;CENTER_LEFT\&quot; spacing=\&quot;10.0\&quot;&gt;\n                      &lt;children&gt;\n-                        &lt;Button fx:id=\&quot;retourBtn\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#retour\&quot; style=\&quot;-fx-background-color: #3498db;\&quot; text=\&quot;Retour\&quot; textFill=\&quot;WHITE\&quot;&gt;\n+                        &lt;Button fx:id=\&quot;retourBtn\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#retour\&quot; text=\&quot;Retour\&quot;&gt;\n                            &lt;font&gt;\n                               &lt;Font name=\&quot;System Bold\&quot; size=\&quot;12.0\&quot; /&gt;\n                            &lt;/font&gt;&quot;,&quot;refToolCallId&quot;:&quot;toolu_0139ay4BEM3RzoHUEZcssTfq&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Maintenant, modifions les boutons de gestion des listes :&quot;},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_01PuninLaqxqPuZuvEA8fuzf&quot;,&quot;statusText&quot;:&quot;Change generated&quot;,&quot;status&quot;:&quot;SUCCESS&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main/resources/appli/user/TodoListView.fxml&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\resources\\appli\\user\\TodoListView.fxml&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;codeHunk&quot;,&quot;lineBasedDiff&quot;:&quot;--- src/main/resources/appli/user/TodoListView.fxml\n+++ src/main/resources/appli/user/TodoListView.fxml\n@@ -76,7 +76,7 @@\n                               &lt;HBox alignment=\&quot;CENTER\&quot; spacing=\&quot;10.0\&quot;&gt;\n                                  &lt;children&gt;\n                                     &lt;TextField fx:id=\&quot;nomListeField\&quot; promptText=\&quot;Nom de la liste\&quot; HBox.hgrow=\&quot;ALWAYS\&quot; /&gt;\n-                                    &lt;Button fx:id=\&quot;ajouterListeBtn\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#ajouterListe\&quot; style=\&quot;-fx-background-color: #2ecc71;\&quot; text=\&quot;+\&quot; textFill=\&quot;WHITE\&quot;&gt;\n+                                    &lt;Button fx:id=\&quot;ajouterListeBtn\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#ajouterListe\&quot; text=\&quot;+\&quot;&gt;\n                                        &lt;font&gt;\n                                           &lt;Font name=\&quot;System Bold\&quot; size=\&quot;12.0\&quot; /&gt;\n                                        &lt;/font&gt;&quot;,&quot;refToolCallId&quot;:&quot;toolu_01PuninLaqxqPuZuvEA8fuzf&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Continuons avec les boutons de modification et suppression de liste :&quot;},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_01MhrsQawYF9ECWKyL9RyxKb&quot;,&quot;statusText&quot;:&quot;Change generated&quot;,&quot;status&quot;:&quot;SUCCESS&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main/resources/appli/user/TodoListView.fxml&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\resources\\appli\\user\\TodoListView.fxml&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;codeHunk&quot;,&quot;lineBasedDiff&quot;:&quot;--- src/main/resources/appli/user/TodoListView.fxml\n+++ src/main/resources/appli/user/TodoListView.fxml\n@@ -85,12 +85,12 @@\n                               &lt;/HBox&gt;\n                               &lt;HBox alignment=\&quot;CENTER\&quot; spacing=\&quot;10.0\&quot;&gt;\n                                  &lt;children&gt;\n-                                    &lt;Button fx:id=\&quot;modifierListeBtn\&quot; disable=\&quot;true\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#modifierListe\&quot; style=\&quot;-fx-background-color: #f39c12;\&quot; text=\&quot;Modifier\&quot; textFill=\&quot;WHITE\&quot;&gt;\n+                                    &lt;Button fx:id=\&quot;modifierListeBtn\&quot; disable=\&quot;true\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#modifierListe\&quot; text=\&quot;Modifier\&quot;&gt;\n                                        &lt;font&gt;\n                                           &lt;Font name=\&quot;System Bold\&quot; size=\&quot;12.0\&quot; /&gt;\n                                        &lt;/font&gt;\n                                     &lt;/Button&gt;\n-                                    &lt;Button fx:id=\&quot;supprimerListeBtn\&quot; disable=\&quot;true\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#supprimerListe\&quot; style=\&quot;-fx-background-color: #e74c3c;\&quot; text=\&quot;Supprimer\&quot; textFill=\&quot;WHITE\&quot;&gt;\n+                                    &lt;Button fx:id=\&quot;supprimerListeBtn\&quot; disable=\&quot;true\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#supprimerListe\&quot; text=\&quot;Supprimer\&quot;&gt;\n                                        &lt;font&gt;\n                                           &lt;Font name=\&quot;System Bold\&quot; size=\&quot;12.0\&quot; /&gt;\n                                        &lt;/font&gt;&quot;,&quot;refToolCallId&quot;:&quot;toolu_01MhrsQawYF9ECWKyL9RyxKb&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Enfin, modifions les boutons de gestion des tâches :&quot;},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_01PMy2hog6Z7cevxFNjM45oq&quot;,&quot;statusText&quot;:&quot;Change generated&quot;,&quot;status&quot;:&quot;SUCCESS&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main/resources/appli/user/TodoListView.fxml&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\resources\\appli\\user\\TodoListView.fxml&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;codeHunk&quot;,&quot;lineBasedDiff&quot;:&quot;--- src/main/resources/appli/user/TodoListView.fxml\n+++ src/main/resources/appli/user/TodoListView.fxml\n@@ -141,17 +141,17 @@\n                                     &lt;/HBox&gt;\n                                     &lt;HBox alignment=\&quot;CENTER\&quot; spacing=\&quot;10.0\&quot;&gt;\n                                        &lt;children&gt;\n-                                          &lt;Button fx:id=\&quot;ajouterTacheBtn\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#ajouterTache\&quot; style=\&quot;-fx-background-color: #2ecc71;\&quot; text=\&quot;Ajouter\&quot; textFill=\&quot;WHITE\&quot;&gt;\n+                                          &lt;Button fx:id=\&quot;ajouterTacheBtn\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#ajouterTache\&quot; text=\&quot;Ajouter\&quot;&gt;\n                                              &lt;font&gt;\n                                                 &lt;Font name=\&quot;System Bold\&quot; size=\&quot;12.0\&quot; /&gt;\n                                              &lt;/font&gt;\n                                           &lt;/Button&gt;\n-                                          &lt;Button fx:id=\&quot;modifierTacheBtn\&quot; disable=\&quot;true\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#modifierTache\&quot; style=\&quot;-fx-background-color: #f39c12;\&quot; text=\&quot;Modifier\&quot; textFill=\&quot;WHITE\&quot;&gt;\n+                                          &lt;Button fx:id=\&quot;modifierTacheBtn\&quot; disable=\&quot;true\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#modifierTache\&quot; text=\&quot;Modifier\&quot;&gt;\n                                              &lt;font&gt;\n                                                 &lt;Font name=\&quot;System Bold\&quot; size=\&quot;12.0\&quot; /&gt;\n                                              &lt;/font&gt;\n                                           &lt;/Button&gt;\n-                                          &lt;Button fx:id=\&quot;supprimerTacheBtn\&quot; disable=\&quot;true\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#supprimerTache\&quot; style=\&quot;-fx-background-color: #e74c3c;\&quot; text=\&quot;Supprimer\&quot; textFill=\&quot;WHITE\&quot;&gt;\n+                                          &lt;Button fx:id=\&quot;supprimerTacheBtn\&quot; disable=\&quot;true\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#supprimerTache\&quot; text=\&quot;Supprimer\&quot;&gt;\n                                              &lt;font&gt;\n                                                 &lt;Font name=\&quot;System Bold\&quot; size=\&quot;12.0\&quot; /&gt;\n                                              &lt;/font&gt;&quot;,&quot;refToolCallId&quot;:&quot;toolu_01PMy2hog6Z7cevxFNjM45oq&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Parfait ! J'ai modifié tous les boutons des deux interfaces pour utiliser le style par défaut de JavaFX au lieu des couleurs personnalisées. Voici un résumé des modifications :\n\n1. **Page de gestion des utilisateurs (GestionUserView.fxml)** :\n   - Bouton \&quot;Retour\&quot; : style par défaut\n   - Bouton \&quot;Ajouter\&quot; : style par défaut\n   - Bouton \&quot;Modifier\&quot; : style par défaut\n   - Bouton \&quot;Todo List\&quot; : style par défaut\n   - Bouton \&quot;Supprimer\&quot; : style par défaut\n\n2. **Page de gestion des tâches (TodoListView.fxml)** :\n   - Bouton \&quot;Retour\&quot; : style par défaut\n   - Bouton \&quot;+\&quot; (ajouter liste) : style par défaut\n   - Bouton \&quot;Modifier\&quot; (liste) : style par défaut\n   - Bouton \&quot;Supprimer\&quot; (liste) : style par défaut\n   - Bouton \&quot;Ajouter\&quot; (tâche) : style par défaut\n   - Bouton \&quot;Modifier\&quot; (tâche) : style par défaut\n   - Bouton \&quot;Supprimer\&quot; (tâche) : style par défaut\n\nCes modifications donnent à l'application une apparence plus cohérente avec le style standard de JavaFX. Les boutons utiliseront maintenant le thème par défaut du système d'exploitation, ce qui peut améliorer l'intégration visuelle avec d'autres applications.\n\nSi vous souhaitez apporter d'autres modifications à l'interface utilisateur, n'hésitez pas à me le faire savoir !&quot;},{&quot;type&quot;:&quot;codePatch&quot;,&quot;diffs&quot;:[{&quot;path&quot;:&quot;src/main/resources/appli/accueil/GestionUserView.fxml&quot;,&quot;patch&quot;:&quot;@@ -965,76 +965,20 @@\n ur%22 \n-style=%22-fx-background-color: #3498db;%22 text=%22Retour%22 textFill=%22WHITE\n+text=%22Retour\n %22%3E%0A \n@@ -2561,77 +2561,21 @@\n ur%22 \n-style=%22-fx-background-color: #2ecc71;%22 text=%22Ajouter%22 textFill=%22WHITE\n+text=%22Ajouter\n %22%3E%0A \n@@ -2873,78 +2873,22 @@\n ur%22 \n-style=%22-fx-background-color: #f39c12;%22 text=%22Modifier%22 textFill=%22WHITE\n+text=%22Modifier\n %22%3E%0A \n@@ -3180,79 +3180,23 @@\n st%22 \n-style=%22-fx-background-color: #9b59b6;%22 text=%22Todo List%22 textFill=%22WHITE\n+text=%22Todo List\n %22%3E%0A \n@@ -3481,79 +3481,23 @@\n er%22 \n-style=%22-fx-background-color: #e74c3c;%22 text=%22Supprimer%22 textFill=%22WHITE\n+text=%22Supprimer\n %22%3E%0A \n&quot;,&quot;isNew&quot;:false,&quot;isApplied&quot;:true},{&quot;path&quot;:&quot;src/main/resources/appli/user/TodoListView.fxml&quot;,&quot;patch&quot;:&quot;@@ -1082,76 +1082,20 @@\n ur%22 \n-style=%22-fx-background-color: #3498db;%22 text=%22Retour%22 textFill=%22WHITE\n+text=%22Retour\n %22%3E%0A \n@@ -4037,71 +4037,15 @@\n te%22 \n-style=%22-fx-background-color: #2ecc71;%22 text=%22+%22 textFill=%22WHITE\n+text=%22+\n %22%3E%0A \n@@ -4600,78 +4600,22 @@\n te%22 \n-style=%22-fx-background-color: #f39c12;%22 text=%22Modifier%22 textFill=%22WHITE\n+text=%22Modifier\n %22%3E%0A \n@@ -4974,79 +4974,23 @@\n te%22 \n-style=%22-fx-background-color: #e74c3c;%22 text=%22Supprimer%22 textFill=%22WHITE\n+text=%22Supprimer\n %22%3E%0A \n@@ -8187,77 +8187,21 @@\n he%22 \n-style=%22-fx-background-color: #2ecc71;%22 text=%22Ajouter%22 textFill=%22WHITE\n+text=%22Ajouter\n %22%3E%0A \n@@ -8588,78 +8588,22 @@\n he%22 \n-style=%22-fx-background-color: #f39c12;%22 text=%22Modifier%22 textFill=%22WHITE\n+text=%22Modifier\n %22%3E%0A \n@@ -8992,79 +8992,23 @@\n he%22 \n-style=%22-fx-background-color: #e74c3c;%22 text=%22Supprimer%22 textFill=%22WHITE\n+text=%22Supprimer\n %22%3E%0A \n&quot;,&quot;isNew&quot;:false,&quot;isApplied&quot;:true}]}],&quot;context&quot;:{&quot;author&quot;:&quot;Coding Agent&quot;,&quot;operationId&quot;:&quot;0dce4571-5d76-4fc0-8468-ddbce6e5dce9&quot;},&quot;createdAt&quot;:1746741634876,&quot;isInternal&quot;:false},{&quot;id&quot;:&quot;2d404ae7-87ce-4129-8ba0-d155df806a14&quot;,&quot;role&quot;:&quot;user&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;peux tu supprimer le bouton modifier d'une liste et d'une tache&quot;}],&quot;context&quot;:{&quot;currentFile&quot;:{&quot;path&quot;:&quot;src\\main\\java\\appli\\accueil\\GestionUserController.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\appli\\accueil\\GestionUserController.java&quot;,&quot;sources&quot;:[&quot;opened_tab&quot;],&quot;content&quot;:&quot;package appli.accueil;\r\nimport appli.StartApplication;\r\nimport appli.user.ModificationUserController;\r\nimport appli.user.TodoListController;\r\nimport javafx.collections.FXCollections;\r\nimport javafx.collections.ObservableList;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.Initializable;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.control.TableColumn;\r\nimport javafx.scene.control.TableView;\r\nimport javafx.scene.control.TextField;\r\nimport javafx.scene.control.cell.PropertyValueFactory;\r\nimport javafx.scene.input.MouseEvent;\r\nimport model.Utilisateur;\r\nimport repository.UtilisateurRepository;\r\nimport session.SessionUtilisateur;\r\n\r\nimport java.io.IOException;\r\nimport java.net.URL;\r\nimport java.util.ArrayList;\r\nimport java.util.ResourceBundle;\r\nimport java.util.stream.Collectors;\r\n\r\npublic class GestionUserController implements Initializable {\r\n    @FXML\r\n    private TableView&lt;Utilisateur&gt; tableauUser;\r\n\r\n    @FXML\r\n    private Button userSupp;\r\n    \r\n    @FXML\r\n    private Button modifierBtn;\r\n    \r\n    @FXML\r\n    private TextField rechercheField;\r\n    \r\n    @FXML\r\n    private Label messageLabel;\r\n    \r\n    @FXML\r\n    private Button tachesBtn;\r\n    \r\n    private ObservableList&lt;Utilisateur&gt; listeUtilisateurs;\r\n    private UtilisateurRepository utilisateurRepository;\r\n\r\n    @Override\r\n    public void initialize(URL location, ResourceBundle resources) {\r\n        utilisateurRepository = new UtilisateurRepository();\r\n        \r\n        // Configuration des colonnes du tableau\r\n        String[][] colonnes = {\r\n                {\&quot;Id Utilisateur\&quot;, \&quot;idUtilisateur\&quot;},\r\n                {\&quot;Nom\&quot;, \&quot;nom\&quot;},\r\n                {\&quot;Prénom\&quot;, \&quot;prenom\&quot;},\r\n                {\&quot;Email\&quot;, \&quot;email\&quot;},\r\n                {\&quot;Rôle\&quot;, \&quot;role\&quot;},\r\n        };\r\n\r\n        for (int i = 0; i &lt; colonnes.length; i++) {\r\n            TableColumn&lt;Utilisateur, String&gt; maCol = new TableColumn&lt;&gt;(colonnes[i][0]);\r\n            maCol.setCellValueFactory(\r\n                    new PropertyValueFactory&lt;Utilisateur, String&gt;(colonnes[i][1]));\r\n            maCol.setPrefWidth(150); // Définir une largeur pour chaque colonne\r\n            tableauUser.getColumns().add(maCol);\r\n        }\r\n        \r\n        // Chargement des utilisateurs\r\n        chargerUtilisateurs();\r\n        \r\n        // Effacer le message après 3 secondes\r\n        messageLabel.textProperty().addListener((observable, oldValue, newValue) -&gt; {\r\n            if (newValue != null &amp;&amp; !newValue.isEmpty()) {\r\n                new Thread(() -&gt; {\r\n                    try {\r\n                        Thread.sleep(3000);\r\n                        javafx.application.Platform.runLater(() -&gt; messageLabel.setText(\&quot;\&quot;));\r\n                    } catch (InterruptedException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                }).start();\r\n            }\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * Charge tous les utilisateurs depuis la base de données\r\n     */\r\n    private void chargerUtilisateurs() {\r\n        ArrayList&lt;Utilisateur&gt; utilisateurs = utilisateurRepository.getAllUtilisateurs();\r\n        listeUtilisateurs = FXCollections.observableArrayList(utilisateurs);\r\n        tableauUser.setItems(listeUtilisateurs);\r\n    }\r\n    \r\n    @FXML\r\n    public void cliqueTableau(MouseEvent mouseEvent) throws IOException {\r\n        Utilisateur selection = tableauUser.getSelectionModel().getSelectedItem();\r\n        if (selection != null) {\r\n            userSupp.setDisable(false);\r\n            modifierBtn.setDisable(false);\r\n            tachesBtn.setDisable(false);\r\n        } else {\r\n            userSupp.setDisable(true);\r\n            modifierBtn.setDisable(true);\r\n            tachesBtn.setDisable(true);\r\n        }\r\n        \r\n        // Double-clic pour modifier un utilisateur\r\n        if (mouseEvent.getClickCount() == 2) {\r\n            if (selection != null) {\r\n                modifierUtilisateur();\r\n            }\r\n        }\r\n    }\r\n\r\n    @FXML\r\n    public void supprimer(ActionEvent actionEvent) {\r\n        Utilisateur utilisateurSelectionne = tableauUser.getSelectionModel().getSelectedItem();\r\n\r\n        if (utilisateurSelectionne != null) {\r\n            boolean supprime = utilisateurRepository.supprimerUtilisateurParEmail(utilisateurSelectionne.getEmail());\r\n            \r\n            if (supprime) {\r\n                tableauUser.getItems().remove(utilisateurSelectionne);\r\n                messageLabel.setText(\&quot;Utilisateur supprimé avec succès !\&quot;);\r\n                messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);\r\n            } else {\r\n                messageLabel.setText(\&quot;Erreur lors de la suppression de l'utilisateur.\&quot;);\r\n                messageLabel.setTextFill(javafx.scene.paint.Color.RED);\r\n            }\r\n            \r\n            // Réinitialiser les boutons\r\n            userSupp.setDisable(true);\r\n            modifierBtn.setDisable(true);\r\n            tachesBtn.setDisable(true);\r\n        }\r\n    }\r\n    \r\n    @FXML\r\n    public void gererTaches() {\r\n        Utilisateur utilisateurSelectionne = tableauUser.getSelectionModel().getSelectedItem();\r\n        \r\n        if (utilisateurSelectionne != null) {\r\n            try {\r\n                StartApplication.changeScene(\&quot;user/TodoList\&quot;);\r\n                TodoListController controller = (TodoListController)\r\n                        StartApplication.getControllerFromStage();\r\n                controller.initData(utilisateurSelectionne);\r\n                messageLabel.setText(\&quot;Chargement des tâches de l'utilisateur...\&quot;);\r\n                messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);\r\n            } catch (IOException e) {\r\n                messageLabel.setText(\&quot;Erreur lors de l'ouverture de la page des tâches.\&quot;);\r\n                messageLabel.setTextFill(javafx.scene.paint.Color.RED);\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n    }\r\n    \r\n    @FXML\r\n    public void modifierUtilisateur() {\r\n        Utilisateur utilisateurSelectionne = tableauUser.getSelectionModel().getSelectedItem();\r\n        \r\n        if (utilisateurSelectionne != null) {\r\n            try {\r\n                StartApplication.changeScene(\&quot;user/modificationUser\&quot;);\r\n                ModificationUserController controller = (ModificationUserController)\r\n                        StartApplication.getControllerFromStage();\r\n                controller.initData(utilisateurSelectionne);\r\n            } catch (IOException e) {\r\n                messageLabel.setText(\&quot;Erreur lors de l'ouverture de la page de modification.\&quot;);\r\n                messageLabel.setTextFill(javafx.scene.paint.Color.RED);\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n    }\r\n    \r\n    @FXML\r\n    public void ajouterUtilisateur() {\r\n        try {\r\n            StartApplication.changeScene(\&quot;accueil/Inscription\&quot;);\r\n        } catch (IOException e) {\r\n            messageLabel.setText(\&quot;Erreur lors de l'ouverture de la page d'inscription.\&quot;);\r\n            messageLabel.setTextFill(javafx.scene.paint.Color.RED);\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n    \r\n    @FXML\r\n    public void rechercher() {\r\n        String recherche = rechercheField.getText().toLowerCase().trim();\r\n        \r\n        if (recherche.isEmpty()) {\r\n            tableauUser.setItems(listeUtilisateurs);\r\n            return;\r\n        }\r\n        \r\n        // Filtrer les utilisateurs selon le texte de recherche\r\n        ObservableList&lt;Utilisateur&gt; utilisateursFiltres = listeUtilisateurs.stream()\r\n                .filter(u -&gt; u.getNom().toLowerCase().contains(recherche) ||\r\n                        u.getPrenom().toLowerCase().contains(recherche) ||\r\n                        u.getEmail().toLowerCase().contains(recherche) ||\r\n                        (u.getRole() != null &amp;&amp; u.getRole().toLowerCase().contains(recherche)))\r\n                .collect(Collectors.toCollection(FXCollections::observableArrayList));\r\n        \r\n        tableauUser.setItems(utilisateursFiltres);\r\n        \r\n        if (utilisateursFiltres.isEmpty()) {\r\n            messageLabel.setText(\&quot;Aucun utilisateur trouvé pour cette recherche.\&quot;);\r\n            messageLabel.setTextFill(javafx.scene.paint.Color.ORANGE);\r\n        } else {\r\n            messageLabel.setText(utilisateursFiltres.size() + \&quot; utilisateur(s) trouvé(s).\&quot;);\r\n            messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);\r\n        }\r\n    }\r\n    \r\n    @FXML\r\n    public void resetRecherche() {\r\n        rechercheField.clear();\r\n        tableauUser.setItems(listeUtilisateurs);\r\n        messageLabel.setText(\&quot;Recherche réinitialisée.\&quot;);\r\n        messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);\r\n    }\r\n\r\n    @FXML\r\n    public void retour(ActionEvent actionEvent) throws IOException {\r\n        StartApplication.changeScene(\&quot;accueil/Accueil\&quot;);\r\n    }\r\n}\r\n&quot;},&quot;codebaseEnabled&quot;:true},&quot;createdAt&quot;:1746741902509,&quot;isInternal&quot;:false,&quot;rawContent&quot;:{&quot;type&quot;:&quot;doc&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;peux tu supprimer le bouton modifier d'une liste et d'une tache&quot;}]}]}},{&quot;id&quot;:&quot;ab6e3617-d0c7-4a70-98ee-2331b3aa553d&quot;,&quot;role&quot;:&quot;assistant&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Je vais supprimer les boutons \&quot;Modifier\&quot; pour les listes et les tâches. Commençons par la page des tâches.&quot;},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_01P6PuTWPuVAKDhBmRi7qhq6&quot;,&quot;statusText&quot;:&quot;Change generated&quot;,&quot;status&quot;:&quot;SUCCESS&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main/resources/appli/user/TodoListView.fxml&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\resources\\appli\\user\\TodoListView.fxml&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;codeHunk&quot;,&quot;lineBasedDiff&quot;:&quot;--- src/main/resources/appli/user/TodoListView.fxml\n+++ src/main/resources/appli/user/TodoListView.fxml\n@@ -85,11 +85,6 @@\n                               &lt;/HBox&gt;\n                               &lt;HBox alignment=\&quot;CENTER\&quot; spacing=\&quot;10.0\&quot;&gt;\n                                  &lt;children&gt;\n-                                    &lt;Button fx:id=\&quot;modifierListeBtn\&quot; disable=\&quot;true\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#modifierListe\&quot; text=\&quot;Modifier\&quot;&gt;\n-                                       &lt;font&gt;\n-                                          &lt;Font name=\&quot;System Bold\&quot; size=\&quot;12.0\&quot; /&gt;\n-                                       &lt;/font&gt;\n-                                    &lt;/Button&gt;\n                                     &lt;Button fx:id=\&quot;supprimerListeBtn\&quot; disable=\&quot;true\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#supprimerListe\&quot; text=\&quot;Supprimer\&quot;&gt;\n                                        &lt;font&gt;\n                                           &lt;Font name=\&quot;System Bold\&quot; size=\&quot;12.0\&quot; /&gt;&quot;,&quot;refToolCallId&quot;:&quot;toolu_01P6PuTWPuVAKDhBmRi7qhq6&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Maintenant, supprimons le bouton \&quot;Modifier\&quot; pour les tâches :&quot;},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_01Cgb3ZNyg7SUbQs8FUVQqBC&quot;,&quot;statusText&quot;:&quot;Change generated&quot;,&quot;status&quot;:&quot;SUCCESS&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main/resources/appli/user/TodoListView.fxml&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\resources\\appli\\user\\TodoListView.fxml&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;codeHunk&quot;,&quot;lineBasedDiff&quot;:&quot;--- src/main/resources/appli/user/TodoListView.fxml\n+++ src/main/resources/appli/user/TodoListView.fxml\n@@ -141,11 +141,6 @@\n                                                 &lt;Font name=\&quot;System Bold\&quot; size=\&quot;12.0\&quot; /&gt;\n                                              &lt;/font&gt;\n                                           &lt;/Button&gt;\n-                                          &lt;Button fx:id=\&quot;modifierTacheBtn\&quot; disable=\&quot;true\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#modifierTache\&quot; text=\&quot;Modifier\&quot;&gt;\n-                                             &lt;font&gt;\n-                                                &lt;Font name=\&quot;System Bold\&quot; size=\&quot;12.0\&quot; /&gt;\n-                                             &lt;/font&gt;\n-                                          &lt;/Button&gt;\n                                           &lt;Button fx:id=\&quot;supprimerTacheBtn\&quot; disable=\&quot;true\&quot; mnemonicParsing=\&quot;false\&quot; onAction=\&quot;#supprimerTache\&quot; text=\&quot;Supprimer\&quot;&gt;\n                                              &lt;font&gt;\n                                                 &lt;Font name=\&quot;System Bold\&quot; size=\&quot;12.0\&quot; /&gt;&quot;,&quot;refToolCallId&quot;:&quot;toolu_01Cgb3ZNyg7SUbQs8FUVQqBC&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Maintenant, nous devons mettre à jour le contrôleur pour gérer cette modification. Nous allons modifier le code qui active/désactive les boutons lors de la sélection d'une liste ou d'une tâche.&quot;},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_01Hzfkkv56mCU7EiCSoch7de&quot;,&quot;statusText&quot;:&quot;Change generated&quot;,&quot;status&quot;:&quot;SUCCESS&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main/java/appli/user/TodoListController.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\appli\\user\\TodoListController.java&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;codeHunk&quot;,&quot;lineBasedDiff&quot;:&quot;--- src/main/java/appli/user/TodoListController.java\n+++ src/main/java/appli/user/TodoListController.java\n@@ -224,7 +224,6 @@\n         \n         if (listeSelectionnee != null) {\n             listeSelectionneeLabel.setText(listeSelectionnee.getNom());\n-            modifierListeBtn.setDisable(false);\n             supprimerListeBtn.setDisable(false);\n             \n             // Charger les tâches de la liste\n@@ -234,11 +233,9 @@\n             nomTacheField.clear();\n             etatComboBox.getSelectionModel().clearSelection();\n             typeComboBox.getSelectionModel().clearSelection();\n-            modifierTacheBtn.setDisable(true);\n             supprimerTacheBtn.setDisable(true);\n         } else {\n             listeSelectionneeLabel.setText(\&quot;Aucune liste sélectionnée\&quot;);\n-            modifierListeBtn.setDisable(true);\n             supprimerListeBtn.setDisable(true);\n             tachesTableView.getItems().clear();\n         }&quot;,&quot;refToolCallId&quot;:&quot;toolu_01Hzfkkv56mCU7EiCSoch7de&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Maintenant, mettons à jour la méthode de sélection d'une tâche :&quot;},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_01TssDCMFXZpUA49DdB9wjw9&quot;,&quot;statusText&quot;:&quot;Change generated&quot;,&quot;status&quot;:&quot;SUCCESS&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main/java/appli/user/TodoListController.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\appli\\user\\TodoListController.java&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;codeHunk&quot;,&quot;lineBasedDiff&quot;:&quot;--- src/main/java/appli/user/TodoListController.java\n+++ src/main/java/appli/user/TodoListController.java\n@@ -272,13 +272,11 @@\n                 }\n             }\n             \n-            modifierTacheBtn.setDisable(false);\n             supprimerTacheBtn.setDisable(false);\n         } else {\n             nomTacheField.clear();\n             etatComboBox.getSelectionModel().clearSelection();\n             typeComboBox.getSelectionModel().clearSelection();\n-            modifierTacheBtn.setDisable(true);\n             supprimerTacheBtn.setDisable(true);\n         }\n     }&quot;,&quot;refToolCallId&quot;:&quot;toolu_01TssDCMFXZpUA49DdB9wjw9&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Parfait ! J'ai supprimé les boutons \&quot;Modifier\&quot; pour les listes et les tâches, et j'ai mis à jour le code du contrôleur pour ne plus faire référence à ces boutons. Voici un résumé des modifications :\n\n1. **Interface utilisateur (TodoListView.fxml)** :\n   - Suppression du bouton \&quot;Modifier\&quot; pour les listes\n   - Suppression du bouton \&quot;Modifier\&quot; pour les tâches\n\n2. **Contrôleur (TodoListController.java)** :\n   - Mise à jour de la méthode `selectionnerListe` pour ne plus faire référence au bouton `modifierListeBtn`\n   - Mise à jour de la méthode `selectionnerTache` pour ne plus faire référence au bouton `modifierTacheBtn`\n\nCes modifications simplifient l'interface utilisateur en réduisant le nombre de boutons, ce qui peut rendre l'application plus intuitive et plus facile à utiliser. Les utilisateurs pourront toujours ajouter et supprimer des listes et des tâches, mais ils ne pourront plus les modifier directement via des boutons dédiés.\n\nSi vous souhaitez apporter d'autres modifications à l'interface utilisateur ou au comportement de l'application, n'hésitez pas à me le faire savoir !&quot;},{&quot;type&quot;:&quot;codePatch&quot;,&quot;diffs&quot;:[{&quot;path&quot;:&quot;src/main/resources/appli/user/TodoListView.fxml&quot;,&quot;patch&quot;:&quot;@@ -4466,380 +4466,8 @@\n en%3E%0A\n-                                    %3CButton fx:id=%22modifierListeBtn%22 disable=%22true%22 mnemonicParsing=%22false%22 onAction=%22#modifierListe%22 text=%22Modifier%22%3E%0A                                       %3Cfont%3E%0A                                          %3CFont name=%22System Bold%22 size=%2212.0%22 /%3E%0A                                       %3C/font%3E%0A                                    %3C/Button%3E%0A\n     \n@@ -8076,410 +8076,8 @@\n on%3E%0A\n-                                          %3CButton fx:id=%22modifierTacheBtn%22 disable=%22true%22 mnemonicParsing=%22false%22 onAction=%22#modifierTache%22 text=%22Modifier%22%3E%0A                                             %3Cfont%3E%0A                                                %3CFont name=%22System Bold%22 size=%2212.0%22 /%3E%0A                                             %3C/font%3E%0A                                          %3C/Button%3E%0A\n     \n&quot;,&quot;isNew&quot;:false,&quot;isApplied&quot;:true},{&quot;path&quot;:&quot;src/main/java/appli/user/TodoListController.java&quot;,&quot;patch&quot;:&quot;@@ -7016,56 +7016,8 @@\n ));%0A\n-            modifierListeBtn.setDisable(false);%0A\n     \n@@ -7406,55 +7406,8 @@\n ();%0A\n-            modifierTacheBtn.setDisable(true);%0A\n     \n@@ -7544,55 +7544,8 @@\n %22);%0A\n-            modifierListeBtn.setDisable(true);%0A\n     \n@@ -8758,56 +8758,8 @@\n    %0A\n-            modifierTacheBtn.setDisable(false);%0A\n     \n@@ -8985,55 +8985,8 @@\n ();%0A\n-            modifierTacheBtn.setDisable(true);%0A\n     \n&quot;,&quot;isNew&quot;:false,&quot;isApplied&quot;:true}]}],&quot;context&quot;:{&quot;author&quot;:&quot;Coding Agent&quot;,&quot;operationId&quot;:&quot;3bd0a31b-2f99-4a99-85c1-75b0d78f62a5&quot;},&quot;createdAt&quot;:1746741903856,&quot;isInternal&quot;:false},{&quot;id&quot;:&quot;90eba47b-6654-44c9-905a-7c02914df960&quot;,&quot;role&quot;:&quot;user&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;peux tu rajouter une case a cocher a coté des taches mais qui ne fera rien juste pour decoré&quot;}],&quot;context&quot;:{&quot;currentFile&quot;:{&quot;path&quot;:&quot;src\\main\\java\\appli\\accueil\\GestionUserController.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\appli\\accueil\\GestionUserController.java&quot;,&quot;sources&quot;:[&quot;opened_tab&quot;],&quot;content&quot;:&quot;package appli.accueil;\r\nimport appli.StartApplication;\r\nimport appli.user.ModificationUserController;\r\nimport appli.user.TodoListController;\r\nimport javafx.collections.FXCollections;\r\nimport javafx.collections.ObservableList;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.Initializable;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.control.TableColumn;\r\nimport javafx.scene.control.TableView;\r\nimport javafx.scene.control.TextField;\r\nimport javafx.scene.control.cell.PropertyValueFactory;\r\nimport javafx.scene.input.MouseEvent;\r\nimport model.Utilisateur;\r\nimport repository.UtilisateurRepository;\r\nimport session.SessionUtilisateur;\r\n\r\nimport java.io.IOException;\r\nimport java.net.URL;\r\nimport java.util.ArrayList;\r\nimport java.util.ResourceBundle;\r\nimport java.util.stream.Collectors;\r\n\r\npublic class GestionUserController implements Initializable {\r\n    @FXML\r\n    private TableView&lt;Utilisateur&gt; tableauUser;\r\n\r\n    @FXML\r\n    private Button userSupp;\r\n    \r\n    @FXML\r\n    private Button modifierBtn;\r\n    \r\n    @FXML\r\n    private TextField rechercheField;\r\n    \r\n    @FXML\r\n    private Label messageLabel;\r\n    \r\n    @FXML\r\n    private Button tachesBtn;\r\n    \r\n    private ObservableList&lt;Utilisateur&gt; listeUtilisateurs;\r\n    private UtilisateurRepository utilisateurRepository;\r\n\r\n    @Override\r\n    public void initialize(URL location, ResourceBundle resources) {\r\n        utilisateurRepository = new UtilisateurRepository();\r\n        \r\n        // Configuration des colonnes du tableau\r\n        String[][] colonnes = {\r\n                {\&quot;Id Utilisateur\&quot;, \&quot;idUtilisateur\&quot;},\r\n                {\&quot;Nom\&quot;, \&quot;nom\&quot;},\r\n                {\&quot;Prénom\&quot;, \&quot;prenom\&quot;},\r\n                {\&quot;Email\&quot;, \&quot;email\&quot;},\r\n                {\&quot;Rôle\&quot;, \&quot;role\&quot;},\r\n        };\r\n\r\n        for (int i = 0; i &lt; colonnes.length; i++) {\r\n            TableColumn&lt;Utilisateur, String&gt; maCol = new TableColumn&lt;&gt;(colonnes[i][0]);\r\n            maCol.setCellValueFactory(\r\n                    new PropertyValueFactory&lt;Utilisateur, String&gt;(colonnes[i][1]));\r\n            maCol.setPrefWidth(150); // Définir une largeur pour chaque colonne\r\n            tableauUser.getColumns().add(maCol);\r\n        }\r\n        \r\n        // Chargement des utilisateurs\r\n        chargerUtilisateurs();\r\n        \r\n        // Effacer le message après 3 secondes\r\n        messageLabel.textProperty().addListener((observable, oldValue, newValue) -&gt; {\r\n            if (newValue != null &amp;&amp; !newValue.isEmpty()) {\r\n                new Thread(() -&gt; {\r\n                    try {\r\n                        Thread.sleep(3000);\r\n                        javafx.application.Platform.runLater(() -&gt; messageLabel.setText(\&quot;\&quot;));\r\n                    } catch (InterruptedException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                }).start();\r\n            }\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * Charge tous les utilisateurs depuis la base de données\r\n     */\r\n    private void chargerUtilisateurs() {\r\n        ArrayList&lt;Utilisateur&gt; utilisateurs = utilisateurRepository.getAllUtilisateurs();\r\n        listeUtilisateurs = FXCollections.observableArrayList(utilisateurs);\r\n        tableauUser.setItems(listeUtilisateurs);\r\n    }\r\n    \r\n    @FXML\r\n    public void cliqueTableau(MouseEvent mouseEvent) throws IOException {\r\n        Utilisateur selection = tableauUser.getSelectionModel().getSelectedItem();\r\n        if (selection != null) {\r\n            userSupp.setDisable(false);\r\n            modifierBtn.setDisable(false);\r\n            tachesBtn.setDisable(false);\r\n        } else {\r\n            userSupp.setDisable(true);\r\n            modifierBtn.setDisable(true);\r\n            tachesBtn.setDisable(true);\r\n        }\r\n        \r\n        // Double-clic pour modifier un utilisateur\r\n        if (mouseEvent.getClickCount() == 2) {\r\n            if (selection != null) {\r\n                modifierUtilisateur();\r\n            }\r\n        }\r\n    }\r\n\r\n    @FXML\r\n    public void supprimer(ActionEvent actionEvent) {\r\n        Utilisateur utilisateurSelectionne = tableauUser.getSelectionModel().getSelectedItem();\r\n\r\n        if (utilisateurSelectionne != null) {\r\n            boolean supprime = utilisateurRepository.supprimerUtilisateurParEmail(utilisateurSelectionne.getEmail());\r\n            \r\n            if (supprime) {\r\n                tableauUser.getItems().remove(utilisateurSelectionne);\r\n                messageLabel.setText(\&quot;Utilisateur supprimé avec succès !\&quot;);\r\n                messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);\r\n            } else {\r\n                messageLabel.setText(\&quot;Erreur lors de la suppression de l'utilisateur.\&quot;);\r\n                messageLabel.setTextFill(javafx.scene.paint.Color.RED);\r\n            }\r\n            \r\n            // Réinitialiser les boutons\r\n            userSupp.setDisable(true);\r\n            modifierBtn.setDisable(true);\r\n            tachesBtn.setDisable(true);\r\n        }\r\n    }\r\n    \r\n    @FXML\r\n    public void gererTaches() {\r\n        Utilisateur utilisateurSelectionne = tableauUser.getSelectionModel().getSelectedItem();\r\n        \r\n        if (utilisateurSelectionne != null) {\r\n            try {\r\n                StartApplication.changeScene(\&quot;user/TodoList\&quot;);\r\n                TodoListController controller = (TodoListController)\r\n                        StartApplication.getControllerFromStage();\r\n                controller.initData(utilisateurSelectionne);\r\n                messageLabel.setText(\&quot;Chargement des tâches de l'utilisateur...\&quot;);\r\n                messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);\r\n            } catch (IOException e) {\r\n                messageLabel.setText(\&quot;Erreur lors de l'ouverture de la page des tâches.\&quot;);\r\n                messageLabel.setTextFill(javafx.scene.paint.Color.RED);\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n    }\r\n    \r\n    @FXML\r\n    public void modifierUtilisateur() {\r\n        Utilisateur utilisateurSelectionne = tableauUser.getSelectionModel().getSelectedItem();\r\n        \r\n        if (utilisateurSelectionne != null) {\r\n            try {\r\n                StartApplication.changeScene(\&quot;user/modificationUser\&quot;);\r\n                ModificationUserController controller = (ModificationUserController)\r\n                        StartApplication.getControllerFromStage();\r\n                controller.initData(utilisateurSelectionne);\r\n            } catch (IOException e) {\r\n                messageLabel.setText(\&quot;Erreur lors de l'ouverture de la page de modification.\&quot;);\r\n                messageLabel.setTextFill(javafx.scene.paint.Color.RED);\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n    }\r\n    \r\n    @FXML\r\n    public void ajouterUtilisateur() {\r\n        try {\r\n            StartApplication.changeScene(\&quot;accueil/Inscription\&quot;);\r\n        } catch (IOException e) {\r\n            messageLabel.setText(\&quot;Erreur lors de l'ouverture de la page d'inscription.\&quot;);\r\n            messageLabel.setTextFill(javafx.scene.paint.Color.RED);\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n    \r\n    @FXML\r\n    public void rechercher() {\r\n        String recherche = rechercheField.getText().toLowerCase().trim();\r\n        \r\n        if (recherche.isEmpty()) {\r\n            tableauUser.setItems(listeUtilisateurs);\r\n            return;\r\n        }\r\n        \r\n        // Filtrer les utilisateurs selon le texte de recherche\r\n        ObservableList&lt;Utilisateur&gt; utilisateursFiltres = listeUtilisateurs.stream()\r\n                .filter(u -&gt; u.getNom().toLowerCase().contains(recherche) ||\r\n                        u.getPrenom().toLowerCase().contains(recherche) ||\r\n                        u.getEmail().toLowerCase().contains(recherche) ||\r\n                        (u.getRole() != null &amp;&amp; u.getRole().toLowerCase().contains(recherche)))\r\n                .collect(Collectors.toCollection(FXCollections::observableArrayList));\r\n        \r\n        tableauUser.setItems(utilisateursFiltres);\r\n        \r\n        if (utilisateursFiltres.isEmpty()) {\r\n            messageLabel.setText(\&quot;Aucun utilisateur trouvé pour cette recherche.\&quot;);\r\n            messageLabel.setTextFill(javafx.scene.paint.Color.ORANGE);\r\n        } else {\r\n            messageLabel.setText(utilisateursFiltres.size() + \&quot; utilisateur(s) trouvé(s).\&quot;);\r\n            messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);\r\n        }\r\n    }\r\n    \r\n    @FXML\r\n    public void resetRecherche() {\r\n        rechercheField.clear();\r\n        tableauUser.setItems(listeUtilisateurs);\r\n        messageLabel.setText(\&quot;Recherche réinitialisée.\&quot;);\r\n        messageLabel.setTextFill(javafx.scene.paint.Color.GREEN);\r\n    }\r\n\r\n    @FXML\r\n    public void retour(ActionEvent actionEvent) throws IOException {\r\n        StartApplication.changeScene(\&quot;accueil/Accueil\&quot;);\r\n    }\r\n}\r\n&quot;},&quot;codebaseEnabled&quot;:true},&quot;createdAt&quot;:1746742240916,&quot;isInternal&quot;:false,&quot;rawContent&quot;:{&quot;type&quot;:&quot;doc&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;peux tu rajouter une case a cocher a coté des taches mais qui ne fera rien juste pour decoré&quot;}]}]}},{&quot;id&quot;:&quot;7aab0cbc-6cae-4a0f-a5d8-f1c18ee677af&quot;,&quot;role&quot;:&quot;assistant&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Je vais ajouter une case à cocher à côté des tâches dans le tableau pour l'aspect décoratif. Pour cela, nous allons ajouter une colonne de CheckBox au TableView des tâches.&quot;},{&quot;type&quot;:&quot;toolCall&quot;,&quot;toolCallId&quot;:&quot;toolu_01JeFn6SVhwNZzmYbcBcfxFS&quot;,&quot;statusText&quot;:&quot;Change generated&quot;,&quot;status&quot;:&quot;SUCCESS&quot;,&quot;context&quot;:{&quot;files&quot;:[{&quot;path&quot;:&quot;src/main/java/appli/user/TodoListController.java&quot;,&quot;fsPath&quot;:&quot;C:\\Users\\ethan\\IdeaProjects\\TodoListFX\\src\\main\\java\\appli\\user\\TodoListController.java&quot;}]},&quot;isHidden&quot;:false},{&quot;type&quot;:&quot;codeHunk&quot;,&quot;lineBasedDiff&quot;:&quot;--- src/main/java/appli/user/TodoListController.java\n+++ src/main/java/appli/user/TodoListController.java\n@@ -96,9 +96,18 @@\n         typeRepository = new TypeRepository();\n         \n         // Configuration des colonnes du tableau des tâches\n+        \n+        // Colonne de case à cocher (décorative)\n+        TableColumn&lt;Tache, Boolean&gt; colCheckbox = new TableColumn&lt;&gt;(\&quot;\&quot;);\n+        colCheckbox.setCellFactory(column -&gt; new javafx.scene.control.cell.CheckBoxTableCell&lt;&gt;());\n+        colCheckbox.setCellValueFactory(cellData -&gt; new javafx.beans.property.SimpleBooleanProperty(false));\n+        colCheckbox.setPrefWidth(30);\n+        colCheckbox.setEditable(true);\n+        colCheckbox.setResizable(false);\n+        \n         TableColumn&lt;Tache, String&gt; colNom = new TableColumn&lt;&gt;(\&quot;Nom\&quot;);\n         colNom.setCellValueFactory(new PropertyValueFactory&lt;&gt;(\&quot;nom\&quot;));\n-        colNom.setPrefWidth(200);\n+        colNom.setPrefWidth(170);\n         \n         TableColumn&lt;Tache, String&gt; colEtat = new TableColumn&lt;&gt;(\&quot;État\&quot;);\n         colEtat.setCellValueFactory(new PropertyValueFactory&lt;&gt;(\&quot;etatString\&quot;));\n@@ -108,7 +117,8 @@\n         colType.setCellValueFactory(new PropertyValueFactory&lt;&gt;(\&quot;nomType\&quot;));\n         colType.setPrefWidth(100);\n         \n-        tachesTableView.getColumns().addAll(colNom, colEtat, colType);\n+        tachesTableView.getColumns().addAll(colCheckbox, colNom, colEtat, colType);\n+        tachesTableView.setEditable(true);\n         \n         // Configuration des états possibles\n         etatComboBox.setItems(FXCollections.observableArrayList(\&quot;À faire\&quot;, \&quot;En cours\&quot;, \&quot;Terminée\&quot;));&quot;,&quot;refToolCallId&quot;:&quot;toolu_01JeFn6SVhwNZzmYbcBcfxFS&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Parfait ! J'ai ajouté une colonne de cases à cocher au tableau des tâches. Voici les détails de cette modification :\n\n1. **Ajout d'une colonne de CheckBox** :\n   - J'ai créé une nouvelle colonne `colCheckbox` sans titre\n   - J'ai configuré cette colonne pour afficher des cases à cocher\n   - J'ai défini une valeur par défaut de `false` pour toutes les cases à cocher\n   - J'ai ajusté la largeur de la colonne à 30 pixels pour qu'elle soit compacte\n   - J'ai rendu la colonne éditable pour que les utilisateurs puissent cliquer sur les cases à cocher\n   - J'ai empêché le redimensionnement de cette colonne pour maintenir une mise en page cohérente\n\n2. **Ajustements supplémentaires** :\n   - J'ai légèrement réduit la largeur de la colonne \&quot;Nom\&quot; (de 200 à 170 pixels) pour compenser l'espace occupé par la nouvelle colonne\n   - J'ai rendu le TableView éditable pour permettre l'interaction avec les cases à cocher\n\nCes cases à cocher sont purement décoratives et n'ont aucun impact fonctionnel sur l'application. Les utilisateurs peuvent les cocher ou les décocher, mais cela n'affectera pas l'état des tâches dans la base de données. C'est simplement un élément visuel qui peut rendre l'interface plus attrayante et donner l'impression d'une liste de tâches traditionnelle.\n\nSi vous souhaitez apporter d'autres modifications à l'interface utilisateur ou au comportement de l'application, n'hésitez pas à me le faire savoir !&quot;},{&quot;type&quot;:&quot;codePatch&quot;,&quot;diffs&quot;:[{&quot;path&quot;:&quot;src/main/java/appli/user/TodoListController.java&quot;,&quot;patch&quot;:&quot;@@ -2246,24 +2246,490 @@\n  des t%C3%A2ches%0A\n+        %0A        // Colonne de case %C3%A0 cocher (d%C3%A9corative)%0A        TableColumn%3CTache, Boolean%3E colCheckbox = new TableColumn%3C%3E(%22%22);%0A        colCheckbox.setCellFactory(column -%3E new javafx.scene.control.cell.CheckBoxTableCell%3C%3E());%0A        colCheckbox.setCellValueFactory(cellData -%3E new javafx.beans.property.SimpleBooleanProperty(false));%0A        colCheckbox.setPrefWidth(30);%0A        colCheckbox.setEditable(true);%0A        colCheckbox.setResizable(false);%0A        %0A\n         Tabl\n@@ -2782,24 +2782,24 @@\n n%3C%3E(%22Nom%22);%0A\n-\n         colN\n@@ -2889,10 +2889,10 @@\n dth(\n-20\n+17\n 0);%0A\n@@ -3331,16 +3331,29 @@\n .addAll(\n+colCheckbox, \n colNom, \n@@ -3367,24 +3367,67 @@\n , colType);%0A\n+        tachesTableView.setEditable(true);%0A\n         %0A   \n&quot;,&quot;isNew&quot;:false,&quot;isApplied&quot;:true}]}],&quot;context&quot;:{&quot;author&quot;:&quot;Coding Agent&quot;,&quot;operationId&quot;:&quot;e68ab464-11af-44b4-9de4-0ad7d8a8ff24&quot;},&quot;createdAt&quot;:1746742242279,&quot;isInternal&quot;:false}],&quot;isAgent&quot;:true,&quot;isNameGenerated&quot;:true,&quot;isCustomAgent&quot;:false,&quot;isUnitTestsAgent&quot;:false}}" />
  </component>
  <component name="ai.zencoder.plugin.rag.settings">
    <option name="desiredChunkSizeBytes" value="4194304" />
    <option name="forbiddenExtensions">
      <set>
        <option value=".log,.lock,.svg" />
      </set>
    </option>
    <option name="pollingIntervalMs" value="60000" />
    <option name="repoIndexingIntervalMs" value="300000" />
  </component>
  <component name="ai.zencoder.plugin.rag.state">
    <option name="indexedFilesMap">
      <map>
        <entry key="$PROJECT_DIR$/.idea/workspace.xml" value="1746742168014" />
        <entry key="$PROJECT_DIR$/pom.xml" value="1746738690297" />
        <entry key="$PROJECT_DIR$/src/main/java/appli/StartApplication.java" value="1746738690297" />
        <entry key="$PROJECT_DIR$/src/main/java/appli/accueil/AccueilController.java" value="1746738690297" />
        <entry key="$PROJECT_DIR$/src/main/java/appli/accueil/GestionUserController.java" value="1746740667990" />
        <entry key="$PROJECT_DIR$/src/main/java/appli/accueil/LoginController.java" value="1746738690297" />
        <entry key="$PROJECT_DIR$/src/main/java/appli/accueil/MotDePasseOublieController.java" value="1746738690297" />
        <entry key="$PROJECT_DIR$/src/main/java/appli/user/ModificationUserController.java" value="1746738690297" />
        <entry key="$PROJECT_DIR$/src/main/java/appli/user/TodoListController.java" value="1746742168014" />
        <entry key="$PROJECT_DIR$/src/main/java/model/Liste.java" value="1746740967789" />
        <entry key="$PROJECT_DIR$/src/main/java/model/Tache.java" value="1746740667990" />
        <entry key="$PROJECT_DIR$/src/main/java/model/Type.java" value="1746740667990" />
        <entry key="$PROJECT_DIR$/src/main/java/model/Utilisateur.java" value="1746738690297" />
        <entry key="$PROJECT_DIR$/src/main/java/module-info.java" value="1746738690297" />
        <entry key="$PROJECT_DIR$/src/main/java/repository/ListeRepository.java" value="1746740667990" />
        <entry key="$PROJECT_DIR$/src/main/java/repository/TacheRepository.java" value="1746740667990" />
        <entry key="$PROJECT_DIR$/src/main/java/repository/TypeRepository.java" value="1746740667990" />
        <entry key="$PROJECT_DIR$/src/main/java/repository/UtilisateurRepository.java" value="1746738690297" />
        <entry key="$PROJECT_DIR$/src/main/java/service/EmailService.java" value="1746738690297" />
        <entry key="$PROJECT_DIR$/src/main/resources/appli.user/modificationUserView.fxml" value="9223372036854775807" />
        <entry key="$PROJECT_DIR$/src/main/resources/appli/accueil/GestionUserView.fxml" value="1746741867984" />
        <entry key="$PROJECT_DIR$/src/main/resources/appli/accueil/MdpOublieView.fxml" value="1746738690297" />
        <entry key="$PROJECT_DIR$/src/main/resources/appli/user/TodoListView.fxml" value="1746742168014" />
        <entry key="$PROJECT_DIR$/src/main/resources/appli/user/modificationUserView.fxml" value="1746738690297" />
        <entry key="$PROJECT_DIR$/src/main/resources/sql/tache.sql" value="1746739167761" />
      </map>
    </option>
    <option name="lastCommitHash" value="4d97ac0ff333f585865f1e28cec7bc80bc8c18dd" />
    <option name="lastIndexTimestamp" value="1746742168014" />
    <option name="repoTotalFiles" value="24" />
    <option name="repositoryId" value="b21c74bd-d746-4a8b-a24d-c71434e5e0cb" />
    <option name="state" value="FULLY_INDEXED" />
  </component>
</project>